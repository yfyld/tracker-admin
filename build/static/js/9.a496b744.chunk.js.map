{"version":3,"sources":["components/Filter.tsx","components/Indicator.module.less","components/Indicator.tsx","components/Filter.module.less","pages/analyse/components/AnalyseHeader.tsx","pages/analyse/components/AnalyseHeader.module.less","components/Dimension.tsx","components/Dimension.module.less","pages/analyse/AnalyseFunnel.module.less","pages/analyse/AnalyseFunnel.tsx"],"names":["Option","Select","OptGroup","Filter","fieldList","filterInfo","onChange","React","recommend","setrecommend","handleFieldChange","value","index","newFilterInfo","JSON","parse","stringify","filterValues","key","type","field","list","find","handleFilterTypeChange","handleFilterValueChange","length","className","style","wrapper","size","onClick","filterType","line","form","map","filter","gutter","id","span","val","name","mode","width","tokenSeparators","item","dataSource","splice","handleClose","close","push","uuidv4","add","module","exports","Search","Input","connect","state","metadata","activeMetadataList","activeMetadataListParams","tagList","dispatch","bindActionCreators","onGetActiveMetadataList","param","doGetActiveMetadataList","request","indicators","hasType","addText","hasCustomName","metadataparam","setmetadataparam","handleSelectMetadata","info","newIndicators","metadataCode","code","metadataName","handleFilterChange","handleTypeChange","handleSearch","allMetadata","indicatorInfo","center","color","overlay","content","e","stopPropagation","placeholder","target","onSearch","tags","split","Number","join","metadataBox","active","readOnly","select","defaultValue","customName","onBlur","event","handleNameChange","handleRemove","reportInfo","report","handleAddReport","params","doAddReport","handleUpdateReport","doUpdateReport","data","useState","newReportInfo","setnewReportInfo","useEffect","title","btns","icon","newInfo","description","Dimension","dimension","Group","Collapse","Panel","projectId","project","projectInfo","analyse","funnelAnalyseData","funnelAnalyseParam","analyseLoading","onGetFunnelAnalyseData","doGetFunnelAnalyse","handleChange","rule","ruleSection","ruleTitle","indicatorType","preview","time","dateType","dateEnd","dateStart","offset","compact","spinning"],"mappings":"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","file":"static/js/9.a496b744.chunk.js","sourcesContent":["import * as React from 'react';\nimport { Select, Row, Col, Icon, AutoComplete, Button } from 'antd';\nimport style from './Filter.module.less';\nimport { IListData } from '@/types';\nimport { IFieldInfo, IFilterInfo, IFilterValue } from '@/api';\nimport { SelectValue } from 'antd/lib/select';\nimport { v4 as uuidv4 } from 'uuid';\nconst { Option, OptGroup } = Select;\n\ninterface Props {\n  fieldList: IListData<IFieldInfo>;\n  filterInfo: IFilterInfo;\n  onChange: (filterInfo: IFilterInfo) => any;\n}\n\nconst Filter = ({ fieldList, filterInfo, onChange }: Props) => {\n  const [recommend, setrecommend] = React.useState<string[]>([]);\n  const handleFieldChange = (value: string, index: number) => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterValues[index].key = value;\n    newFilterInfo.filterValues[index].type = 'equal';\n    newFilterInfo.filterValues[index].value = [];\n    const field = fieldList.list.find(field => field.value === value);\n    if (field) {\n      setrecommend(field.recommend);\n    }\n\n    onChange(newFilterInfo);\n  };\n\n  const handleFilterTypeChange = (value: string, index: number) => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterValues[index].type = value;\n    if (value === 'equal' || value === 'notEqual') {\n      newFilterInfo.filterValues[index].value = [];\n    } else if (value === 'between') {\n      newFilterInfo.filterValues[index].value = [null, null];\n    } else {\n      newFilterInfo.filterValues[index].value = null;\n    }\n    onChange(newFilterInfo);\n  };\n\n  const handleFilterValueChange = (value: string, index: number) => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterValues[index].value = value;\n    onChange(newFilterInfo);\n  };\n\n  const handleClose = (index: number) => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterValues.splice(index, 1);\n    onChange(newFilterInfo);\n  };\n\n  const handleAdd = () => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterValues.push({\n      type: null,\n      key: null,\n      value: null,\n      id: uuidv4()\n    });\n    onChange(newFilterInfo);\n  };\n\n  const handleChangeFilterType = () => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterType = newFilterInfo.filterType === 'AND' ? 'OR' : 'AND';\n    onChange(newFilterInfo);\n  };\n\n  return (\n    <div>\n      {filterInfo.filterValues.length > 0 && (\n        <div className={style.wrapper}>\n          {filterInfo.filterValues.length > 1 && (\n            <div className={style.type}>\n              <Button size='small' onClick={handleChangeFilterType}>\n                {filterInfo.filterType === 'AND' ? '且' : '或'}\n              </Button>\n              <div className={style.line}></div>\n            </div>\n          )}\n          <div className={style.form}>\n            {filterInfo.filterValues.map((filter, index) => (\n              <Row gutter={16} key={filter.id}>\n                <Col span={5}>\n                  <Select value={filter.key} onChange={(val: string) => handleFieldChange(val, index)}>\n                    {fieldList.list.map(field => (\n                      <Option value={field.value} key={field.value}>\n                        {field.name}\n                      </Option>\n                    ))}\n                  </Select>\n                </Col>\n                <Col span={3}>\n                  <Select value={filter.type} onChange={(val: string) => handleFilterTypeChange(val, index)}>\n                    <Option value='equal'>等于</Option>\n                    <Option value='notEqual'>不等于</Option>\n                    <Option value='isSet'>有值</Option>\n                    <Option value='notSet'>没值</Option>\n\n                    <Option value='greater'>大于</Option>\n                    <Option value='less'>小于</Option>\n                    <Option value='between'>区间</Option>\n\n                    <Option value='contain'>包含</Option>\n                    <Option value='notContain'>不包含</Option>\n                    <Option value='isEmpty'>为空</Option>\n                    <Option value='isNotEmpty'>不为空</Option>\n                    <Option value='rlike'>正则匹配</Option>\n                    <Option value='notrlike'>正则不匹配</Option>\n                  </Select>\n                </Col>\n                {filter.type !== 'isEmpty' &&\n                  filter.type !== 'isNotEmpty' &&\n                  filter.type !== 'isSet' &&\n                  filter.type !== 'notSet' &&\n                  filter.type !== 'rlike' &&\n                  filter.type !== 'notrlike' && (\n                    <Col span={8}>\n                      {filter.type === 'equal' || filter.type === 'notEqual' ? (\n                        <Select\n                          value={filter.value}\n                          onChange={(val: string) => handleFilterValueChange(val, index)}\n                          mode='tags'\n                          style={{ width: '100%' }}\n                          tokenSeparators={[',']}\n                        >\n                          {recommend.map(item => (\n                            <Option key={item} value={item}>\n                              {item}\n                            </Option>\n                          ))}\n                        </Select>\n                      ) : (\n                        <AutoComplete\n                          value={filter.value}\n                          dataSource={recommend}\n                          style={{ width: '100%' }}\n                          onChange={(val: any) => handleFilterValueChange(val, index)}\n                        />\n                      )}\n                    </Col>\n                  )}\n                <Col span={1}>\n                  <div onClick={() => handleClose(index)} className={'app-link ' + style.close}>\n                    <Icon type='minus-circle' />\n                  </div>\n                </Col>\n              </Row>\n            ))}\n          </div>\n        </div>\n      )}\n      <a onClick={handleAdd} className={style.add}>\n        <Icon type='plus-square' />\n        添加筛选\n      </a>\n    </div>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Indicator_wrapper__3B5qd\",\"select\":\"Indicator_select__1kP-z\",\"content\":\"Indicator_content__3-BaR\",\"center\":\"Indicator_center__3Oax_\",\"metadataBox\":\"Indicator_metadataBox__3wnAQ\",\"active\":\"Indicator_active__1aD9o\",\"filter\":\"Indicator_filter__lBazH\"};","import * as React from 'react';\nimport { Tag, Select, Row, Col, Icon, Popover, Input, Dropdown, Divider } from 'antd';\nimport style from './Indicator.module.less';\nimport { IMetadataInfo, IMetadataListParam, IIndicatorInfo, IFieldInfo, IFilterInfo, ITagList } from '@/api';\nimport { IPageData, IAction, IStoreState, IListData } from '@/types';\nimport { connect } from 'react-redux';\n\nimport { bindActionCreators, Dispatch } from 'redux';\nimport Filter from './Filter';\nimport { v4 as uuidv4 } from 'uuid';\nimport { doGetActiveMetadataList } from '../store/actions';\nconst { Option, OptGroup } = Select;\n\nconst { Search } = Input;\n\ninterface Props {\n  activeMetadataList: IPageData<IMetadataInfo>;\n  activeMetadataListParams: IMetadataListParam;\n  index?: number;\n  fieldList: IListData<IFieldInfo>;\n  indicators: IIndicatorInfo[];\n  onChange: (param: IIndicatorInfo[], changedValue?: IIndicatorInfo) => any;\n  hasType?: boolean;\n  addText?: string;\n  hasCustomName?: boolean;\n  type?: number;\n  tagList: ITagList;\n  onGetActiveMetadataList: (param: IMetadataListParam) => IAction;\n}\n\nconst Indicator = ({\n  indicators,\n  activeMetadataList,\n  activeMetadataListParams,\n  onChange,\n  fieldList,\n  hasType,\n  addText = '+添加指标',\n  hasCustomName = false,\n  type = null,\n  tagList,\n  onGetActiveMetadataList\n}: Props) => {\n  const [metadataparam, setmetadataparam] = React.useState({ ...activeMetadataListParams });\n  React.useEffect(() => {\n    setmetadataparam(activeMetadataListParams);\n  }, [activeMetadataListParams]);\n\n  function handleSelectMetadata(info: IMetadataInfo, index: number) {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators[index].metadataCode = info.code;\n    newIndicators[index].metadataName = info.name;\n    onChange(newIndicators, indicators[index]);\n  }\n\n  function handleFilterChange(info: IFilterInfo, index: number) {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators[index].filter = info;\n    onChange(newIndicators);\n  }\n\n  function handleTypeChange(value: string, index: number) {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators[index].type = value;\n    onChange(newIndicators);\n  }\n\n  function handleNameChange(value: string, index: number) {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators[index].customName = value;\n    onChange(newIndicators);\n  }\n\n  function handleAdd() {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators.push({\n      metadataCode: '_ALL_METADATA',\n      metadataName: '所有事件',\n      type: 'PV',\n      id: uuidv4(),\n      filter: {\n        filterType: 'AND',\n        filterValues: []\n      }\n    });\n    onChange(newIndicators);\n  }\n\n  function handleRemove(index: number) {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators.splice(index, 1);\n    onChange(newIndicators, indicators[index]);\n  }\n\n  function handleSearch(param: IMetadataListParam) {\n    onGetActiveMetadataList(param);\n  }\n\n  const allMetadata = {\n    name: '所有事件',\n    code: '_ALL_METADATA'\n  } as IMetadataInfo;\n\n  return (\n    <div className={style.wrapper}>\n      <div>\n        {indicators.map((indicatorInfo, index) => (\n          <div key={indicatorInfo.id}>\n            <Row className={style.item} gutter={10}>\n              <Col span={1}>\n                <div className={style.center}>\n                  <Tag color='gold'>{index + 1}</Tag>\n                </div>\n              </Col>\n              <Col span={3}>\n                <Dropdown\n                  overlay={\n                    <div className={style.content}>\n                      <div onClick={e => e.stopPropagation()}>\n                        <Search\n                          placeholder='搜索事件'\n                          value={metadataparam.name}\n                          onChange={e => setmetadataparam({ ...metadataparam, name: e.target.value })}\n                          onSearch={name => handleSearch({ ...metadataparam, name })}\n                          style={{ width: 200 }}\n                        />\n                        &nbsp;\n                        <Select\n                          placeholder='根据标签筛选'\n                          style={{ width: 200 }}\n                          mode='multiple'\n                          value={metadataparam.tags ? metadataparam.tags.split(',').map(item => Number(item)) : []}\n                          onChange={(tags: number[]) => handleSearch({ ...metadataparam, tags: tags.join(',') })}\n                        >\n                          {tagList.list.map(item => (\n                            <Option key={item.id} value={item.id}>\n                              {item.name}\n                            </Option>\n                          ))}\n                        </Select>\n                      </div>\n\n                      <div className={style.metadataBox}>\n                        <span\n                          onClick={() => handleSelectMetadata(allMetadata, index)}\n                          className={allMetadata.code === indicatorInfo.metadataCode ? style.active : ''}\n                          key={allMetadata.code}\n                        >\n                          所有事件\n                        </span>\n\n                        {activeMetadataList.list\n                          .filter(item => {\n                            if (!type) {\n                              return true;\n                            }\n                            return item.type === type;\n                          })\n                          .map(item => (\n                            <span\n                              onClick={() => handleSelectMetadata(item, index)}\n                              className={item.code === indicatorInfo.metadataCode ? style.active : ''}\n                              key={item.code}\n                            >\n                              {item.name}\n                            </span>\n                          ))}\n                      </div>\n                    </div>\n                  }\n                >\n                  <Input value={indicatorInfo.metadataName} readOnly className={style.select} />\n                </Dropdown>\n              </Col>\n              {hasCustomName && (\n                <Col span={3}>\n                  <Input\n                    defaultValue={indicatorInfo.customName}\n                    placeholder='自定义名称'\n                    onBlur={event => handleNameChange(event.target.value, index)}\n                  />\n                </Col>\n              )}\n              {hasType && (\n                <>\n                  <Col span={1}>\n                    <div className={style.center}>的</div>\n                  </Col>\n                  <Col span={3}>\n                    <Select onChange={(val: string) => handleTypeChange(val, index)} value={indicatorInfo.type}>\n                      <Option value='PV'>总次数</Option>\n                      <Option value='UV'>用户数</Option>\n                      <Option value='APV'>人均次数</Option>\n                      <Option value='DPV'>日均次数</Option>\n                      <Option value='DUV'>日均用户数</Option>\n                    </Select>\n                  </Col>\n                </>\n              )}\n\n              {indicators.length > 1 && (\n                <Col span={1}>\n                  <div onClick={() => handleRemove(index)} className={'app-link ' + style.center}>\n                    <Icon type='close' />\n                  </div>\n                </Col>\n              )}\n            </Row>\n            <div className={style.filter}>\n              <Filter\n                fieldList={fieldList}\n                filterInfo={indicatorInfo.filter}\n                onChange={filter => handleFilterChange(filter, index)}\n              ></Filter>\n            </div>\n          </div>\n        ))}\n      </div>\n      <a onClick={handleAdd}>{addText}</a>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IStoreState) => {\n  const { activeMetadataList, activeMetadataListParams, tagList, fieldList } = state.metadata;\n  return {\n    activeMetadataList,\n    activeMetadataListParams,\n    tagList,\n    fieldList\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) =>\n  bindActionCreators(\n    {\n      onGetActiveMetadataList: param => doGetActiveMetadataList.request(param)\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Indicator);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__9rptJ\",\"line\":\"Filter_line__eOPS4\",\"type\":\"Filter_type__2GtXQ\",\"form\":\"Filter_form__1lfK0\",\"close\":\"Filter_close__1AZpi\",\"add\":\"Filter_add__2YNj8\"};","import React from 'react';\nimport { Icon, Button, Input } from 'antd';\nimport { connect } from 'react-redux';\nimport { IAction, IStoreState } from '@/types';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { doAddReport, doUpdateReport } from '@/store/actions';\nimport { IReportAddParam, IReportUpdateParam, IReportInfo } from '@/api';\nimport style from './AnalyseHeader.module.less';\ninterface Props {\n  reportInfo: IReportInfo;\n  handleAddReport: (params: IReportAddParam) => IAction;\n  handleUpdateReport: (params: IReportUpdateParam) => IAction;\n  data: Object;\n  //handleAppandBoard: (params: any) => IAction;\n}\nconst AnalyseHeader = ({ reportInfo, handleUpdateReport, handleAddReport, data }: Props) => {\n  const [newReportInfo, setnewReportInfo] = React.useState(reportInfo);\n  React.useEffect(() => {\n    setnewReportInfo(reportInfo);\n  }, [reportInfo]);\n\n  const handleSave = () => {\n    if (typeof reportInfo.id !== 'undefined') {\n      handleUpdateReport({ id: null, ...newReportInfo, data });\n    } else {\n      handleAddReport({ ...newReportInfo, data });\n    }\n  };\n\n  const handleSaveAs = () => {\n    const { id, ...newInfo } = newReportInfo;\n    handleAddReport({ ...newInfo, data });\n  };\n\n  const handleAppand = () => {\n    //handleAppandBoard(newReportInfo);\n  };\n\n  return (\n    <div className={style.wrapper}>\n      <h2 className={style.title}>\n        <Input\n          type='text'\n          onChange={e => setnewReportInfo({ ...newReportInfo, name: e.target.value })}\n          value={newReportInfo.name}\n        />\n      </h2>\n      <div className={style.btns}>\n        <Button type='link' icon='save' onClick={handleSave}>\n          保存\n        </Button>\n        {newReportInfo.id && (\n          <Button type='link' icon='save' onClick={handleSaveAs}>\n            另存为\n          </Button>\n        )}\n        <Button type='link' icon='plus-circle' onClick={handleAppand}>\n          添加到\n        </Button>\n      </div>\n      <div className={style.description}>\n        <Input\n          onChange={e => setnewReportInfo({ ...newReportInfo, description: e.target.value })}\n          value={newReportInfo.description}\n        ></Input>\n      </div>\n    </div>\n  );\n};\nconst mapStateToProps = (state: IStoreState) => {\n  const { reportInfo } = state.report;\n  return {\n    reportInfo\n  };\n};\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) =>\n  bindActionCreators(\n    {\n      handleAddReport: (params: IReportAddParam) => {\n        return doAddReport.request(params);\n      },\n      handleUpdateReport: (params: IReportUpdateParam) => {\n        return doUpdateReport.request(params);\n      }\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AnalyseHeader);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AnalyseHeader_wrapper__1r0g1\",\"btns\":\"AnalyseHeader_btns__G6iwS\",\"title\":\"AnalyseHeader_title__1X3LF\",\"description\":\"AnalyseHeader_description__1fJOY\"};","import * as React from 'react';\nimport { Select, Row, Col, Icon } from 'antd';\nimport style from './Dimension.module.less';\nimport { IFieldInfo } from '@/api';\nimport { IListData } from '@/types';\nconst { Option, OptGroup } = Select;\n\ninterface Props {\n  fieldList: IListData<IFieldInfo>;\n  dimension: string;\n  onChange: (param: string) => any;\n}\n\nconst Dimension = ({ fieldList, dimension, onChange }: Props) => {\n  return (\n    <div className={style.wrapper}>\n      <Row className={style.item}>\n        <Col span={1}>\n          <div className={style.center}>按</div>\n        </Col>\n        <Col span={3}>\n          <Select value={dimension} onChange={onChange}>\n            <Option value=''>总体</Option>\n            {fieldList.list.map(field => (\n              <Option value={field.value} key={field.value}>\n                {field.name}\n              </Option>\n            ))}\n          </Select>\n        </Col>\n        <Col span={1}>\n          <div className={style.center}>查看</div>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default Dimension;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Dimension_wrapper__Ew76P\",\"center\":\"Dimension_center__1BCis\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ruleTitle\":\"AnalyseFunnel_ruleTitle__3gwQF\",\"preview\":\"AnalyseFunnel_preview__18PLM\",\"wrapper\":\"AnalyseFunnel_wrapper__29QoJ\",\"ruleSection\":\"AnalyseFunnel_ruleSection__3K-yu\"};","import { Icon, Collapse, Divider, Select, Input, Row, Col, Button, Spin } from 'antd';\nimport React from 'react';\nimport AnalyseRangePicker from '@/components/AnalyseRangePicker';\nimport moment from 'moment';\nimport style from './AnalyseFunnel.module.less';\nimport ReactEcharts from 'echarts-for-react';\nimport Indicator from '@/components/Indicator';\nimport Dimension from '@/components/Dimension';\nimport Filter from '@/components/Filter';\nimport AnalyseHeader from './components/AnalyseHeader';\nimport { IReportInfo, IFieldInfo, IFunnelAnalyseData, IFunnelAnalyseParam } from '@/api';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { doAddReport, doUpdateReport, doGetFunnelAnalyse } from '@/store/actions';\nimport { IAction, IStoreState, IListData, IDate } from '@/types';\nimport { DYNAMIC_TIME } from '@/constants';\nimport AnalyseFunnelChart from './components/AnalyseFunnelChart';\nconst { Option } = Select;\nconst { Panel } = Collapse;\nconst { Group } = Input;\ninterface Props {\n  fieldList: IListData<IFieldInfo>;\n  onGetFunnelAnalyseData: (param: IFunnelAnalyseParam) => IAction;\n  projectId: number;\n  funnelAnalyseData: IFunnelAnalyseData;\n  funnelAnalyseParam: IFunnelAnalyseParam;\n  analyseLoading: boolean;\n}\n\nconst AnalyseFunnel = ({\n  analyseLoading,\n  fieldList,\n  onGetFunnelAnalyseData,\n  projectId,\n  funnelAnalyseData,\n  funnelAnalyseParam\n}: Props) => {\n  const handleChange = (info: IFunnelAnalyseParam) => {\n    info.projectId = projectId;\n    onGetFunnelAnalyseData(info);\n  };\n\n  return (\n    <div className={style.wrapper}>\n      <AnalyseHeader data={{ ...funnelAnalyseParam, projectId }}></AnalyseHeader>\n      <div className={style.rule}>\n        <div className={style.ruleSection}>\n          <span className={style.ruleTitle}>指标:</span>\n\n          <Select\n            value={funnelAnalyseParam.indicatorType}\n            onChange={(indicatorType: string) => handleChange({ ...funnelAnalyseParam, indicatorType })}\n          >\n            <Option value='PV'>总数</Option>\n            <Option value='UV'> 用户数</Option>\n            <Option value='APV'>人均次数</Option>\n            <Option value='DPV'>日均次数</Option>\n            <Option value='DUV'>日均用户数</Option>\n          </Select>\n        </div>\n\n        <div className={style.ruleSection}>\n          <span className={style.ruleTitle}>纬度:</span>\n          <Dimension\n            dimension={funnelAnalyseParam.dimension}\n            fieldList={fieldList}\n            onChange={dimension => handleChange({ ...funnelAnalyseParam, dimension })}\n          />\n        </div>\n\n        <div className={style.ruleSection}>\n          <span className={style.ruleTitle}>筛选:</span>\n          <Filter\n            fieldList={fieldList}\n            filterInfo={funnelAnalyseParam.filter}\n            onChange={filter => handleChange({ ...funnelAnalyseParam, filter })}\n          />\n        </div>\n\n        <div className={style.ruleSection}>\n          <span className={style.ruleTitle}>漏斗步骤:</span>\n          <Indicator\n            addText='+添加步骤'\n            hasCustomName\n            indicators={funnelAnalyseParam.indicators}\n            onChange={indicators => handleChange({ ...funnelAnalyseParam, indicators })}\n          />\n        </div>\n      </div>\n\n      <div className={style.preview}>\n        <Row>\n          <Col span={14}>\n            <AnalyseRangePicker\n              onChange={time => handleChange({ ...funnelAnalyseParam, ...time })}\n              value={{\n                dateType: funnelAnalyseParam.dateType,\n                dateEnd: funnelAnalyseParam.dateEnd,\n                dateStart: funnelAnalyseParam.dateStart\n              }}\n            />\n          </Col>\n          <Col span={6} offset={4}>\n            <Group compact>\n              <Select\n                style={{ width: '33%' }}\n                value={funnelAnalyseParam.type}\n                onChange={(type: string) => handleChange({ ...funnelAnalyseParam, type })}\n              >\n                <Option value='FUNNEL'>漏斗图</Option>\n                <Option value='LIST'>列表</Option>\n                <Option value='TABLE'>表格</Option>\n              </Select>\n\n              <Button icon='download'>导出</Button>\n            </Group>\n          </Col>\n        </Row>\n        <Spin spinning={analyseLoading}>\n          <AnalyseFunnelChart data={funnelAnalyseData}></AnalyseFunnelChart>\n        </Spin>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IStoreState) => {\n  const { fieldList } = state.metadata;\n  const projectId = state.project.projectInfo.id;\n  const { funnelAnalyseData, funnelAnalyseParam, analyseLoading } = state.analyse;\n  return {\n    fieldList,\n    projectId,\n    funnelAnalyseData,\n    funnelAnalyseParam,\n    analyseLoading\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) =>\n  bindActionCreators(\n    {\n      onGetFunnelAnalyseData: (param: IFunnelAnalyseParam) => doGetFunnelAnalyse.request(param)\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AnalyseFunnel);\n"],"sourceRoot":""}