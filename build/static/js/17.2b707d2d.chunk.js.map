{"version":3,"sources":["pages/report/components/ReportAddModal.tsx","pages/board/Board.module.less","pages/board/components/ReportDrawerContent.module.less","pages/board/components/ReportDrawerContent.tsx","pages/board/components/ReportUpdateModel.tsx","components/TitleEditAble.tsx","pages/board/Board.tsx"],"names":["Form","create","props","form","getFieldDecorator","React","resetFields","visible","gridStyle","width","padding","linkStyle","display","height","onOk","e","preventDefault","validateFields","err","values","toastformError","onClose","title","onCancel","Grid","style","to","getAnalysePath","projectId","module","exports","Search","Input","ReportDrawerContent","reportList","onSearch","name","onSubmit","boardId","id","description","type","data","dateType","className","wrapper","placeholder","defaultValue","itemLayout","dataSource","list","filter","item","boards","find","renderItem","Item","actions","onClick","info","reportId","boardIds","key","Meta","Option","Select","orginInfo","time","timeUnit","layout","formItemLayout","label","initialValue","rules","required","message","value","dateStart","Number","dateEnd","AnalyseRangePicker","pickerProps","allowClear","TitleEditAble","onChange","editing","setediting","newValue","setnewValue","handleComplete","autoFocus","target","onBlur","onPressEnter","fontSize","lineHeight","margin","confirm","Modal","ButtonGroup","Button","Group","ReactGridLayout","RGL","WidthProvider","connect","state","board","boardInfo","globalDate","report","reportListParams","dispatch","bindActionCreators","onSave","params","doUpdateBoard","request","onChangeBoardGlobalDate","doChangeBoardGlobalDate","onAppendReportToBoard","doAppendReportToBoard","onUpdateReport","doUpdateReport","onGetReportList","doGetReportList","onDeleteBoard","doDeleteBoard","addReportDrawerVisible","setaddReportDrawerVisible","refresh","setrefresh","updateReportModelVisible","setupdateReportModelVisible","curReportInfo","setcurReportInfo","addReportVisible","setaddReportVisible","setlayout","handleDeletePane","newBoardInfo","JSON","parse","stringify","index","reports","findIndex","splice","content","addRportMenu","length","page","pageSize","handlePaneUpdate","ReportAddModal","param","placement","closable","header","btnBox","defalutShowIcon","icon","okText","cancelText","main","onLayoutChange","cols","rowHeight","map","BoardGridPane","onSetPane","reportInfo","onDeletePane","generateDOM"],"mappings":"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","file":"static/js/17.2b707d2d.chunk.js","sourcesContent":["import { Modal, Form, Card } from 'antd';\nimport * as React from 'react';\nimport { FormComponentProps } from 'antd/lib/form';\nimport { IReportAddParam } from '@/api';\nimport { toastformError, getAnalysePath } from '@/utils';\nimport { Link } from 'react-router-dom';\n\ninterface Props extends FormComponentProps {\n  visible: boolean;\n  onClose: (param: boolean) => any;\n  projectId: number;\n}\n\nconst ReportAddModel = (props: Props) => {\n  const { getFieldDecorator } = props.form;\n  React.useEffect(() => {\n    props.form.resetFields();\n  }, [props.visible]);\n  const handleSubmit = (e: React.MouseEvent) => {\n    e.preventDefault();\n    props.form.validateFields((err, values) => {\n      if (err) {\n        toastformError(err);\n        return;\n      }\n      props.onClose(false);\n    });\n  };\n  const gridStyle = {\n    width: '25%',\n    'text-align': 'center',\n    padding: 0\n  };\n\n  const linkStyle = {\n    display: 'block',\n    height: '100%',\n    padding: 24\n  };\n  return (\n    <Modal onOk={handleSubmit} title='新增报表' visible={props.visible} onCancel={() => props.onClose(false)}>\n      <Card>\n        <Card.Grid style={gridStyle}>\n          <Link style={linkStyle} to={getAnalysePath('EVENT', props.projectId)}>\n            事件分析\n          </Link>\n        </Card.Grid>\n        <Card.Grid style={gridStyle}>\n          <Link style={linkStyle} to={getAnalysePath('FUNNEL', props.projectId)}>\n            漏斗分析\n          </Link>\n        </Card.Grid>\n        <Card.Grid style={gridStyle}>\n          <Link style={linkStyle} to={getAnalysePath('PATH', props.projectId)}>\n            路径分析\n          </Link>\n        </Card.Grid>\n        <Card.Grid style={gridStyle}>\n          <Link style={linkStyle} to={getAnalysePath('EVENT', props.projectId)}>\n            用户分析\n          </Link>\n        </Card.Grid>\n      </Card>\n    </Modal>\n  );\n};\n\nexport default Form.create<Props>()(ReportAddModel);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Board_wrapper__15SDx\",\"header\":\"Board_header__2PFEu\",\"title\":\"Board_title__2Fv8C\",\"btnBox\":\"Board_btnBox__3fBSB\",\"addRportMenu\":\"Board_addRportMenu__nS7OX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ReportDrawerContent_wrapper__3fPcI\"};","import * as React from 'react';\nimport style from './ReportDrawerContent.module.less';\nimport { IPageData } from '@/types';\nimport { IReportInfo, IReportAddParam, IReportAppendToBoard } from '@/api';\nimport { List, Input } from 'antd';\nimport { Link } from 'react-router-dom';\nimport BoardAppendReportModal from '@/components/BoardAppendReportModal';\n\nconst { Search } = Input;\n\ninterface Props {\n  reportList: IPageData<IReportInfo>;\n  onSearch: (param: string) => any;\n  onSubmit: (param: IReportAppendToBoard) => any;\n  name?: string;\n  boardId: number;\n}\n\nconst ReportDrawerContent = ({ reportList, onSearch, name, onSubmit, boardId }: Props) => {\n  const [curReportInfo, setcurReportInfo] = React.useState<IReportInfo>({\n    id: null,\n    name: '',\n    description: '',\n    projectId: null,\n    type: '',\n    data: '{}',\n    dateType: null\n  });\n  const [appendBoardVisible, setappendBoardVisible] = React.useState(false);\n\n  function handleAdd(info: IReportInfo) {\n    // setcurReportInfo(info);\n    // setappendBoardVisible(true);\n    onSubmit({ projectId: info.projectId, reportId: info.id, boardIds: [boardId] });\n  }\n  return (\n    <div className={style.wrapper}>\n      {/* <BoardAppendReportModal\n        reportInfo={curReportInfo}\n        boardIds={[boardId]}\n        visible={appendBoardVisible}\n        onClose={setappendBoardVisible}\n        onSubmit={onSubmit}\n      /> */}\n      <Search placeholder='输入报表名称' defaultValue={name} onSearch={onSearch} style={{ width: 200 }} />\n      <List\n        itemLayout='horizontal'\n        dataSource={reportList.list.filter(item => !item.boards.find(item => item.id === boardId))}\n        renderItem={item => (\n          <List.Item\n            actions={[\n              <a onClick={() => handleAdd(item)} key='list-loadmore-edit'>\n                添加\n              </a>\n            ]}\n          >\n            <List.Item.Meta\n              title={<Link to={`/project/2/analyse-event/2`}>{item.name}</Link>}\n              description={item.description}\n            />\n          </List.Item>\n        )}\n      />\n    </div>\n  );\n};\n\nexport default ReportDrawerContent;\n","import { Modal, Form, Input, Select } from 'antd';\nimport * as React from 'react';\nimport { formItemLayout } from '@/constants';\nimport { FormComponentProps } from 'antd/lib/form';\nimport { IReportInfo, IReportUpdateParam } from '@/api';\nimport { toastformError } from '@/utils';\n\nimport { IAction } from '@/types';\nimport AnalyseRangePicker from '@/components/AnalyseRangePicker';\nconst { Option } = Select;\ninterface Props extends FormComponentProps {\n  visible: boolean;\n  onClose: (param: boolean) => any;\n  orginInfo: IReportInfo;\n  onSubmit: (param: IReportUpdateParam) => any;\n}\n\nconst ReportUpdateModel = (props: Props) => {\n  const { getFieldDecorator } = props.form;\n  React.useEffect(() => {\n    props.form.resetFields();\n  }, [props.visible]);\n  const handleSubmit = (e: React.MouseEvent) => {\n    e.preventDefault();\n    props.form.validateFields((err, values) => {\n      if (err) {\n        toastformError(err);\n        return;\n      }\n      props.onSubmit({\n        id: props.orginInfo.id,\n        ...props.orginInfo,\n        name: values.name,\n        description: values.description,\n        data: { ...props.orginInfo.data, ...values.time, type: values.type, timeUnit: values.timeUnit }\n      });\n      props.onClose(false);\n    });\n  };\n  return (\n    <Modal onOk={handleSubmit} title='快捷设置' visible={props.visible} onCancel={() => props.onClose(false)}>\n      <Form layout='horizontal' {...formItemLayout}>\n        <Form.Item label='报表名称'>\n          {getFieldDecorator('name', {\n            initialValue: props.orginInfo.name,\n            rules: [{ required: true, message: '请输入报表名称' }]\n          })(<Input placeholder='请输入报表名称' />)}\n        </Form.Item>\n        <Form.Item label='显示方式'>\n          {getFieldDecorator('type', {\n            initialValue: props.orginInfo.data.type,\n            rules: [{ required: true, message: '选择显示方式' }]\n          })(\n            <Select style={{ width: 120 }}>\n              <Option value='LINE'>线图</Option>\n              <Option value='BAR'>柱状图</Option>\n              <Option value='PIE'>饼图</Option>\n              <Option value='FUNNEL'>漏斗图</Option>\n              <Option value='LIST'>列表</Option>\n              <Option value='TABLE'>表格</Option>\n              <Option value='TEXT'>数值</Option>\n            </Select>\n          )}\n        </Form.Item>\n        <Form.Item label='时间范围'>\n          {getFieldDecorator('time', {\n            initialValue: {\n              dateStart: Number(props.orginInfo.dateStart),\n              dateEnd: Number(props.orginInfo.dateEnd),\n              dateType: props.orginInfo.dateType\n            }\n          })(<AnalyseRangePicker pickerProps={{ allowClear: false }} />)}\n        </Form.Item>\n        <Form.Item label='时间纬度'>\n          {getFieldDecorator('timeUnit', { initialValue: props.orginInfo.data.timeUnit })(\n            <Select style={{ width: 120 }}>\n              <Option value='HOUR'>按小时</Option>\n              <Option value='DAY'>按天</Option>\n              <Option value='WEEK'>按周</Option>\n              <Option value='MONTH'>按月</Option>\n              <Option value='YEAR'>按年</Option>\n            </Select>\n          )}\n        </Form.Item>\n        <Form.Item label='报表描述'>\n          {getFieldDecorator('description', { initialValue: props.orginInfo.description })(\n            <Input placeholder='请输入报表描述' />\n          )}\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default Form.create<Props>()(ReportUpdateModel);\n","import * as React from 'react';\nimport { Icon, Input } from 'antd';\n\ninterface Props {\n  value: string;\n  onChange: (value: string) => any;\n}\nconst TitleEditAble = ({ value, onChange }: Props) => {\n  const [editing, setediting] = React.useState(false);\n  const [newValue, setnewValue] = React.useState(value);\n  React.useEffect(() => {\n    setnewValue(value);\n  }, [value]);\n\n  const handleComplete = () => {\n    setediting(false);\n    if (value === newValue) {\n      return;\n    }\n    onChange(newValue);\n  };\n\n  const titleStyle = {\n    fontSize: 16,\n    lineHeight: '32px',\n    margin: 0\n  };\n\n  return (\n    <div style={{ display: 'inline-block' }}>\n      {!editing ? (\n        <h2 style={titleStyle}>\n          {value}\n          &nbsp;\n          <Icon type='edit' onClick={() => setediting(true)} />\n        </h2>\n      ) : (\n        <Input\n          className='app-no-border-input'\n          autoFocus\n          style={{ width: 500 }}\n          type='text'\n          onChange={(e) => setnewValue(e.target.value)}\n          value={newValue}\n          onBlur={handleComplete}\n          onPressEnter={handleComplete}\n        />\n      )}\n    </div>\n  );\n};\nexport default TitleEditAble;\n","import RGL from 'react-grid-layout';\nimport * as React from 'react';\n\nimport BoardGridPane from './components/BoardGridPane';\nimport { connect } from 'react-redux';\nimport style from './Board.module.less';\nimport { IStoreState, IAction, IPageData, IDate, IDeleteParam } from '@/types';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { Icon, Button, Popover, Drawer, Modal, message, Input } from 'antd';\nimport {\n  IReportInfo,\n  IBoardInfo,\n  IBoardUpdateParam,\n  IReportListParam,\n  IReportAddParam,\n  IReportAppendToBoard,\n  IReportUpdateParam\n} from '@/api';\nimport {\n  doUpdateBoard,\n  doGetReportList,\n  doAddReport,\n  doAppendReportToBoard,\n  doChangeBoardGlobalDate,\n  doDeleteBoard,\n  doUpdateReport\n} from '@/store/actions';\nimport ReportDrawerContent from './components/ReportDrawerContent';\nimport AnalyseRangePicker from '@/components/AnalyseRangePicker';\nimport ReportUpdateModel from './components/ReportUpdateModel';\nimport ReportAddModal from '../report/components/ReportAddModal';\nimport TitleEditAble from '@/components/TitleEditAble';\n\nconst { confirm } = Modal;\nconst ButtonGroup = Button.Group;\n\nconst ReactGridLayout = RGL.WidthProvider(RGL);\n\ninterface Props {\n  reportList: IPageData<IReportInfo>;\n  boardInfo: IBoardInfo;\n  globalDate: IDate;\n  addReport: (params: IReportAddParam) => IAction;\n  onSave: (params: IBoardUpdateParam) => IAction;\n  reportListParams: IReportListParam;\n  onAppendReportToBoard: (params: IReportAppendToBoard) => IAction;\n  onGetReportList: (params: IReportListParam) => IAction;\n  onChangeBoardGlobalDate: (params: IDate) => IAction;\n  onDeleteBoard: (params: IDeleteParam) => IAction;\n  onUpdateReport: (params: IReportUpdateParam) => IAction;\n}\n\nconst BasicLayout = ({\n  reportList,\n  boardInfo,\n  onSave,\n  globalDate,\n  reportListParams,\n  onGetReportList,\n  onAppendReportToBoard,\n  onChangeBoardGlobalDate,\n  onDeleteBoard,\n  onUpdateReport\n}: Props) => {\n  const [addReportDrawerVisible, setaddReportDrawerVisible] = React.useState(false);\n  const [refresh, setrefresh] = React.useState(1);\n  const [updateReportModelVisible, setupdateReportModelVisible] = React.useState(false);\n  const [curReportInfo, setcurReportInfo] = React.useState<IReportInfo>(null);\n\n  const [addReportVisible, setaddReportVisible] = React.useState(false);\n\n  const [layout, setlayout] = React.useState(boardInfo.layout);\n\n  React.useEffect(() => {\n    setlayout(boardInfo.layout);\n  }, [boardInfo]);\n\n  function generateDOM(reportList: IReportInfo[]) {\n    return reportList.map((item) => (\n      <div key={item.id}>\n        <BoardGridPane\n          onSetPane={handlePaneUpdate}\n          refresh={refresh}\n          globalDate={globalDate}\n          reportInfo={item}\n          onDeletePane={handleDeletePane}\n        />\n      </div>\n    ));\n  }\n\n  const handleDeletePane = (id: number) => {\n    const newBoardInfo: IBoardInfo = JSON.parse(JSON.stringify(boardInfo));\n\n    const index = newBoardInfo.reports.findIndex((item) => item.id === id);\n    if (index >= 0) {\n      newBoardInfo.reports.splice(index, 1);\n      onSave(newBoardInfo);\n    }\n  };\n\n  function handleLayoutChange(layout: RGL.Layout[]) {\n    setlayout(layout);\n    //onSave({ id, projectId, layout });\n  }\n\n  function handleSave() {\n    const { id, projectId } = boardInfo;\n    if (JSON.stringify(layout) === JSON.stringify(boardInfo.layout)) {\n      message.info('当前布局未修改');\n      return;\n    }\n    onSave({ id, projectId, layout });\n  }\n\n  function handleOpenReportDrawer() {\n    if (reportList.list.length === 0) {\n      onGetReportList({ page: 1, pageSize: 100, projectId: boardInfo.projectId });\n    }\n    setaddReportDrawerVisible(true);\n  }\n\n  function handleAppendSubmit(info: IReportAppendToBoard) {\n    onAppendReportToBoard(info);\n    setaddReportDrawerVisible(false);\n  }\n\n  function handleDelete() {\n    const { id, projectId } = boardInfo;\n    confirm({\n      title: '提示',\n      content: '确认删除该看板',\n      okText: '确定',\n      cancelText: '取消',\n      onOk() {\n        onDeleteBoard({ id, projectId });\n      }\n    });\n  }\n\n  function handleAddReport() {\n    setaddReportVisible(true);\n  }\n\n  const content = (\n    <div className={style.addRportMenu}>\n      <div onClick={handleOpenReportDrawer}>添加已有报表</div>\n\n      <div onClick={handleAddReport}>新增报表</div>\n    </div>\n  );\n\n  const handleReportUpdateSubmit = (param: IReportUpdateParam) => {\n    onUpdateReport(param);\n  };\n  function handlePaneUpdate(info: IReportInfo) {\n    setupdateReportModelVisible(true);\n    setcurReportInfo(info);\n  }\n  return (\n    <div className={style.wrapper}>\n      <ReportAddModal\n        projectId={boardInfo.projectId}\n        visible={addReportVisible}\n        onClose={setaddReportVisible}\n      ></ReportAddModal>\n\n      {curReportInfo && (\n        <ReportUpdateModel\n          orginInfo={curReportInfo}\n          visible={updateReportModelVisible}\n          onClose={setupdateReportModelVisible}\n          onSubmit={handleReportUpdateSubmit}\n        ></ReportUpdateModel>\n      )}\n      <Drawer\n        title='报表列表'\n        width={300}\n        placement='right'\n        closable={false}\n        onClose={() => setaddReportDrawerVisible(false)}\n        visible={addReportDrawerVisible}\n      >\n        <ReportDrawerContent\n          onSearch={(name) => onGetReportList({ page: 1, pageSize: 100, projectId: boardInfo.projectId, name })}\n          reportList={reportList}\n          name={reportListParams.name}\n          boardId={boardInfo.id}\n          onSubmit={handleAppendSubmit}\n        ></ReportDrawerContent>\n      </Drawer>\n      <div className={style.header}>\n        <TitleEditAble value={boardInfo.name} onChange={(name) => onSave({ ...boardInfo, name })}></TitleEditAble>\n        <div className={style.btnBox}>\n          <AnalyseRangePicker\n            defalutShowIcon\n            value={globalDate}\n            onChange={onChangeBoardGlobalDate}\n          ></AnalyseRangePicker>\n          &nbsp;\n          <ButtonGroup>\n            <Button icon='save' onClick={handleSave}></Button>\n            <Button icon='delete' onClick={handleDelete}></Button>\n            <Button icon='reload' onClick={() => setrefresh(refresh + 1)}></Button>\n            <Popover placement='bottom' content={content} title='添加报表'>\n              <Button type='primary' icon='plus'></Button>\n            </Popover>\n          </ButtonGroup>\n        </div>\n      </div>\n      <div className={style.main}>\n        <ReactGridLayout\n          key={boardInfo.id}\n          className='layout'\n          layout={layout}\n          onLayoutChange={handleLayoutChange}\n          cols={24}\n          rowHeight={30}\n        >\n          {generateDOM(boardInfo.reports)}\n        </ReactGridLayout>\n      </div>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) =>\n  bindActionCreators(\n    {\n      onSave: (params) => doUpdateBoard.request(params),\n      onChangeBoardGlobalDate: (params) => doChangeBoardGlobalDate(params),\n      onAppendReportToBoard: (params: IReportAppendToBoard) => {\n        return doAppendReportToBoard.request(params);\n      },\n      onUpdateReport: (params: IReportUpdateParam) => doUpdateReport.request(params),\n      onGetReportList: (params: IReportListParam) => doGetReportList.request(params),\n      onDeleteBoard: (params) => doDeleteBoard.request(params)\n    },\n    dispatch\n  );\n\nconst mapStateToProps = (state: IStoreState) => {\n  const { boardInfo, globalDate } = state.board;\n  const { reportList, reportListParams } = state.report;\n  return {\n    reportList,\n    boardInfo,\n    reportListParams,\n    globalDate\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BasicLayout);\n"],"sourceRoot":""}