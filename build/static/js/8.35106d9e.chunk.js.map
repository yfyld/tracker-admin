{"version":3,"sources":["components/Filter.tsx","components/Indicator.module.less","components/Indicator.tsx","components/Filter.module.less","pages/analyse/components/AnalyseHeader.module.less","components/ReportAppendBoard.tsx","pages/analyse/components/AnalyseHeader.tsx","components/Dimension.tsx","components/Dimension.module.less","pages/analyse/AnalyseEvent.module.less","pages/analyse/AnalyseEvent.tsx"],"names":["Option","Select","OptGroup","Filter","fieldList","list","EVENT_ATTRS","filterInfo","onChange","React","recommend","setrecommend","handleFieldChange","value","index","newFilterInfo","JSON","parse","stringify","filterValues","key","type","field","find","handleFilterTypeChange","handleFilterValueChange","length","className","style","wrapper","size","onClick","filterType","line","form","map","filter","gutter","id","span","val","name","mode","width","tokenSeparators","item","dataSource","splice","handleClose","close","push","uuidv4","add","module","exports","Search","Input","connect","state","metadata","activeMetadataList","activeMetadataListParams","tagList","fieldListMap","projectInfo","project","dispatch","bindActionCreators","onGetActiveMetadataList","param","doGetActiveMetadataList","request","onGetFieldList","doGetFieldList","indicators","hasType","addText","hasCustomName","metadataparam","setmetadataparam","handleSelectMetadata","info","newIndicators","metadataCode","code","metadataName","projectId","handleFilterChange","handleTypeChange","handleSearch","setTimeout","allMetadata","indicatorInfo","center","color","trigger","overlay","content","e","stopPropagation","placeholder","target","onSearch","tags","split","Number","join","projectIds","associationProjects","metadataBox","active","readOnly","select","defaultValue","customName","onBlur","event","handleNameChange","handleRemove","boardList","board","onAppendReportToBoard","params","doAppendReportToBoard","reportInfo","children","appendedBoardIds","setappendedBoardIds","placement","onVisibleChange","isExist","boards","disabled","record","reportId","boardIds","message","title","report","onAddReport","doAddReport","onUpdateReport","doUpdateReport","data","useState","newReportInfo","setnewReportInfo","useEffect","btns","icon","newInfo","description","Dimension","dimension","Group","Collapse","Panel","analyse","eventAnalyseData","eventAnalyseParam","analyseLoading","onGetEventAnalyseData","doGetEventAnalyse","handleChange","rule","ruleSection","ruleTitle","preview","pickerProps","allowClear","time","dateType","dateEnd","dateStart","offset","compact","timeUnit","spinning","height"],"mappings":"sOAQQA,EAAqBC,IAArBD,OAAqBC,IAAbC,SA6JDC,IArJA,SAAC,GAAwE,IAAD,IAArEC,iBAAqE,MAAzD,CAAEC,KAAMC,KAAiD,EAAlCC,EAAkC,EAAlCA,WAAYC,EAAsB,EAAtBA,SAAsB,EACnDC,WAAyB,IAD0B,mBAC9EC,EAD8E,KACnEC,EADmE,KAE/EC,EAAoB,SAACC,EAAeC,GACxC,IAAMC,EAA6BC,KAAKC,MAAMD,KAAKE,UAAUX,IAC7DQ,EAAcI,aAAaL,GAAOM,IAAMP,EACxCE,EAAcI,aAAaL,GAAOO,KAAO,QACzCN,EAAcI,aAAaL,GAAOD,MAAQ,GAC1C,IAAMS,EAAQlB,EAAUC,KAAKkB,MAAK,SAAAD,GAAK,OAAIA,EAAMT,QAAUA,KACvDS,GACFX,EAAaW,EAAMZ,WAGrBF,EAASO,IAGLS,EAAyB,SAACX,EAAeC,GAC7C,IAAMC,EAA6BC,KAAKC,MAAMD,KAAKE,UAAUX,IAC7DQ,EAAcI,aAAaL,GAAOO,KAAOR,EAEvCE,EAAcI,aAAaL,GAAOD,MADtB,UAAVA,GAA+B,aAAVA,EACmB,GACvB,YAAVA,EACiC,CAAC,KAAM,MAEP,KAE5CL,EAASO,IAGLU,EAA0B,SAACZ,EAAeC,GAC9C,IAAMC,EAA6BC,KAAKC,MAAMD,KAAKE,UAAUX,IAC7DQ,EAAcI,aAAaL,GAAOD,MAAQA,EAC1CL,EAASO,IA0BX,OACE,2BACGR,EAAWY,aAAaO,OAAS,GAChC,uBAAKC,UAAWC,IAAMC,SACnBtB,EAAWY,aAAaO,OAAS,GAChC,uBAAKC,UAAWC,IAAMP,MACpB,gBAAC,IAAD,CAAQS,KAAK,QAAQC,QAZF,WAC7B,IAAMhB,EAA6BC,KAAKC,MAAMD,KAAKE,UAAUX,IAC7DQ,EAAciB,WAA0C,QAA7BjB,EAAciB,WAAuB,KAAO,MACvExB,EAASO,KAU8B,QAA1BR,EAAWyB,WAAuB,SAAM,UAE3C,uBAAKL,UAAWC,IAAMK,QAG1B,uBAAKN,UAAWC,IAAMM,MACnB3B,EAAWY,aAAagB,KAAI,SAACC,EAAQtB,GAAT,OAC3B,gBAAC,IAAD,CAAKuB,OAAQ,GAAIjB,IAAKgB,EAAOE,IAC3B,gBAAC,IAAD,CAAKC,KAAM,GACT,gBAAC,IAAD,CAAQ1B,MAAOuB,EAAOhB,IAAKZ,SAAU,SAACgC,GAAD,OAAiB5B,EAAkB4B,EAAK1B,KAC1EV,EAAUC,KAAK8B,KAAI,SAAAb,GAAK,OACvB,gBAACtB,EAAD,CAAQa,MAAOS,EAAMT,MAAOO,IAAKE,EAAMT,OACpCS,EAAMmB,WAKf,gBAAC,IAAD,CAAKF,KAAM,GACT,gBAAC,IAAD,CAAQ1B,MAAOuB,EAAOf,KAAMb,SAAU,SAACgC,GAAD,OAAiBhB,EAAuBgB,EAAK1B,KACjF,gBAACd,EAAD,CAAQa,MAAM,SAAd,gBACA,gBAACb,EAAD,CAAQa,MAAM,YAAd,sBACA,gBAACb,EAAD,CAAQa,MAAM,SAAd,gBACA,gBAACb,EAAD,CAAQa,MAAM,UAAd,gBAEA,gBAACb,EAAD,CAAQa,MAAM,WAAd,gBACA,gBAACb,EAAD,CAAQa,MAAM,QAAd,gBACA,gBAACb,EAAD,CAAQa,MAAM,WAAd,gBAEA,gBAACb,EAAD,CAAQa,MAAM,WAAd,gBACA,gBAACb,EAAD,CAAQa,MAAM,cAAd,sBACA,gBAACb,EAAD,CAAQa,MAAM,WAAd,gBACA,gBAACb,EAAD,CAAQa,MAAM,cAAd,sBACA,gBAACb,EAAD,CAAQa,MAAM,SAAd,4BACA,gBAACb,EAAD,CAAQa,MAAM,YAAd,oCAGa,YAAhBuB,EAAOf,MACU,eAAhBe,EAAOf,MACS,UAAhBe,EAAOf,MACS,WAAhBe,EAAOf,MACS,UAAhBe,EAAOf,MACS,aAAhBe,EAAOf,MACL,gBAAC,IAAD,CAAKkB,KAAM,GACQ,UAAhBH,EAAOf,MAAoC,aAAhBe,EAAOf,KACjC,gBAAC,IAAD,CACER,MAAOuB,EAAOvB,MACdL,SAAU,SAACgC,GAAD,OAAiBf,EAAwBe,EAAK1B,IACxD4B,KAAK,OACLd,MAAO,CAAEe,MAAO,QAChBC,gBAAiB,CAAC,MAEjBlC,EAAUyB,KAAI,SAAAU,GAAI,OACjB,gBAAC7C,EAAD,CAAQoB,IAAKyB,EAAMhC,MAAOgC,GACvBA,OAKP,gBAAC,IAAD,CACEhC,MAAOuB,EAAOvB,MACdiC,WAAYpC,EACZkB,MAAO,CAAEe,MAAO,QAChBnC,SAAU,SAACgC,GAAD,OAAcf,EAAwBe,EAAK1B,OAK/D,gBAAC,IAAD,CAAKyB,KAAM,GACT,uBAAKR,QAAS,kBAlGV,SAACjB,GACnB,IAAMC,EAA6BC,KAAKC,MAAMD,KAAKE,UAAUX,IAC7DQ,EAAcI,aAAa4B,OAAOjC,EAAO,GACzCN,EAASO,GA+FyBiC,CAAYlC,IAAQa,UAAW,YAAcC,IAAMqB,OACrE,gBAAC,IAAD,CAAM5B,KAAK,yBAQzB,qBAAGU,QArGW,WAChB,IAAMhB,EAA6BC,KAAKC,MAAMD,KAAKE,UAAUX,IAC7DQ,EAAcI,aAAa+B,KAAK,CAC9B7B,KAAM,KACND,IAAK,KACLP,MAAO,KACPyB,GAAIa,gBAEN3C,EAASO,IA6FgBY,UAAWC,IAAMwB,KACtC,gBAAC,IAAD,CAAM/B,KAAK,gBADb,+B,qBC5JNgC,EAAOC,QAAU,CAAC,QAAU,2BAA2B,OAAS,0BAA0B,QAAU,2BAA2B,OAAS,0BAA0B,YAAc,+BAA+B,OAAS,0BAA0B,OAAS,4B,iwBCqBnPtD,EAAqBC,IAArBD,OAEAuD,GAFqBtD,IAAbC,SAEGsD,IAAXD,QA4TOE,iBAtBS,SAACC,GAAwB,IAAD,EACkCA,EAAMC,SAEtF,MAAO,CACLC,mBAJ4C,EACtCA,mBAINC,yBAL4C,EAClBA,yBAK1BC,QAN4C,EACQA,QAMpDC,aAP4C,EACiBA,aAO7DC,YANsBN,EAAMO,QAAtBD,gBAUiB,SAACE,GAAD,OACzBC,YACE,CACEC,wBAAyB,SAACC,GAAD,OAAWC,IAAwBC,QAAQF,IACpEG,eAAgB,SAACH,GAAD,OAAWI,IAAeF,QAAQF,KAGpDH,KAGWT,EAzSG,SAAC,GAcL,IAbZiB,EAaW,EAbXA,WACAd,EAYW,EAZXA,mBACAC,EAWW,EAXXA,yBACArD,EAUW,EAVXA,SACAuD,EASW,EATXA,aACAY,EAQW,EARXA,QAQW,IAPXC,eAOW,MAPD,4BAOC,MANXC,qBAMW,aALXxD,YAKW,MALJ,KAKI,EAJXyC,EAIW,EAJXA,QACAM,EAGW,EAHXA,wBACAI,EAEW,EAFXA,eACAR,EACW,EADXA,YACW,EAC+BvD,WAAA,KAAoBoD,IADnD,mBACJiB,EADI,KACWC,EADX,KAMX,SAASC,EAAqBC,EAAqBnE,GACjD,IAAMoE,EAAkClE,KAAKC,MAAMD,KAAKE,UAAUwD,IAClEQ,EAAcpE,GAAOqE,aAAeF,EAAKG,KACzCF,EAAcpE,GAAOuE,aAAeJ,EAAKxC,KACzCyC,EAAcpE,GAAOwE,UAAYL,EAAKK,UACtC9E,EAAS0E,EAAeR,EAAW5D,IACnC0D,EAAe,CAAEc,UAAWL,EAAKK,UAAWH,aAAcF,EAAKG,OAGjE,SAASG,EAAmBN,EAAmBnE,GAC7C,IAAMoE,EAAkClE,KAAKC,MAAMD,KAAKE,UAAUwD,IAClEQ,EAAcpE,GAAOsB,OAAS6C,EAC9BzE,EAAS0E,GAGX,SAASM,EAAiB3E,EAAeC,GACvC,IAAMoE,EAAkClE,KAAKC,MAAMD,KAAKE,UAAUwD,IAClEQ,EAAcpE,GAAOO,KAAOR,EAC5BL,EAAS0E,GA+BX,SAASO,EAAapB,GACpBU,EAAiBV,GACjBqB,YAAW,WACTtB,EAAwBC,KACvB,KAzDL5D,aAAgB,WACdsE,EAAiBlB,KAChB,CAACA,IA0DJ,IAAM8B,EAAc,CAClBlD,KAAM,2BACN2C,KAAM,iBAGR,OACE,uBAAKzD,UAAWC,IAAMC,SACpB,2BACG6C,EAAWvC,KAAI,SAACyD,EAAe9E,GAAhB,OACd,uBAAKM,IAAKwE,EAActD,IACtB,gBAAC,IAAD,CAAKX,UAAWC,IAAMiB,KAAMR,OAAQ,IAClC,gBAAC,IAAD,CAAKE,KAAM,GACT,uBAAKZ,UAAWC,IAAMiE,QACpB,gBAAC,IAAD,CAAKC,MAAM,QAAQhF,EAAQ,KAG/B,gBAAC,IAAD,CAAKyB,KAAM,GACT,gBAAC,IAAD,CACEwD,QAAS,CAAC,SACVC,QACE,uBAAKrE,UAAWC,IAAMqE,SACpB,uBAAKlE,QAAS,SAACmE,GAAD,OAAOA,EAAEC,oBACrB,gBAAC5C,EAAD,CACE6C,YAAY,2BACZvF,MAAOiE,EAAcrC,KACrBjC,SAAU,SAAC0F,GAAD,OAAOnB,EAAiB,EAAD,GAAMD,EAAN,CAAqBrC,KAAMyD,EAAEG,OAAOxF,UACrEyF,SAAU,SAAC7D,GAAD,OAAUgD,EAAa,EAAD,GAAMX,EAAN,CAAqBrC,WACrDb,MAAO,CAAEe,MAAO,OANpB,OASE,gBAAC,IAAD,CACEyD,YAAY,uCACZxE,MAAO,CAAEe,MAAO,KAChBD,KAAK,WACL7B,MAAOiE,EAAcyB,KAAOzB,EAAcyB,KAAKC,MAAM,KAAKrE,KAAI,SAACU,GAAD,OAAU4D,OAAO5D,MAAS,GACxFrC,SAAU,SAAC+F,GAAD,OAAoBd,EAAa,EAAD,GAAMX,EAAN,CAAqByB,KAAMA,EAAKG,KAAK,UAE9E5C,EAAQzD,KAAK8B,KAAI,SAACU,GAAD,OAChB,gBAAC7C,EAAD,CAAQoB,IAAKyB,EAAKP,GAAIzB,MAAOgC,EAAKP,IAC/BO,EAAKJ,UAlBd,OAuBE,gBAAC,IAAD,CACE2D,YAAY,2BACZxE,MAAO,CAAEe,MAAO,KAChBD,KAAK,WACL7B,MACEiE,EAAc6B,WACV7B,EAAc6B,WAAWH,MAAM,KAAKrE,KAAI,SAACU,GAAD,OAAU4D,OAAO5D,MACzD,GAENrC,SAAU,SAACmG,GAAD,OACRlB,EAAa,EAAD,GAAMX,EAAN,CAAqB6B,WAAYA,EAAWD,KAAK,UAG9D1C,EAAY4C,oBAAoBzE,KAAI,SAACU,GAAD,OACnC,gBAAC7C,EAAD,CAAQoB,IAAKyB,EAAKP,GAAIzB,MAAOgC,EAAKP,IAC/BO,EAAKJ,WAMd,uBAAKd,UAAWC,IAAMiF,aACnB7C,EAAY4C,oBACX,gCACE,wBACE7E,QAAS,kBAAMiD,EAAqB,EAAD,GAAMW,GAAe7E,IACxDa,UACEgE,EAAYP,OAASQ,EAAcT,cAAiBS,EAAcN,UAE9D,GADA1D,IAAMkF,OAGZ1F,IAAKuE,EAAYP,MAPnB,8BAWGpB,EAAY4C,oBAAoBlF,QACjC,wBACEK,QAAS,kBACPiD,EAAqB,EAAD,GACbW,EADa,CACAlD,KAAMuB,EAAYvB,KAAO,2BAAQ6C,UAAWtB,EAAY1B,KAC1ExB,IAGJa,UACEgE,EAAYP,OAASQ,EAAcT,cACnCS,EAAcN,YAActB,EAAY1B,GACpCV,IAAMkF,OACN,GAEN1F,IAAKuE,EAAYP,KAAOpB,EAAY1B,IAEnC0B,EAAYvB,KAff,4BAkBDuB,EAAY4C,oBAAoBzE,KAAI,SAACU,GAAD,OACnC,wBACEd,QAAS,kBACPiD,EAAqB,EAAD,GACbW,EADa,CACAlD,KAAMI,EAAKJ,KAAO,2BAAQ6C,UAAWzC,EAAKP,KAC5DxB,IAGJa,UACEgE,EAAYP,OAASQ,EAAcT,cAAgBS,EAAcN,YAAczC,EAAKP,GAChFV,IAAMkF,OACN,GAEN1F,IAAKuE,EAAYP,KAAOvC,EAAKP,IAE5BO,EAAKJ,KAdR,gCAmBJ,wBACEV,QAAS,kBAAMiD,EAAqB,EAAD,GAAMW,EAAN,CAAmBL,UAAWtB,EAAY1B,KAAMxB,IACnFa,UAAWgE,EAAYP,OAASQ,EAAcT,aAAevD,IAAMkF,OAAS,GAC5E1F,IAAKuE,EAAYP,KAAOpB,EAAY1B,IAHtC,4BASDsB,EAAmBvD,KACjB+B,QAAO,SAACS,GACP,OAAKxB,GAGEwB,EAAKxB,OAASA,KAEtBc,KAAI,SAACU,GAAD,OACH,wBACEd,QAAS,kBAAMiD,EAAqBnC,EAAM/B,IAC1Ca,UAAWkB,EAAKuC,OAASQ,EAAcT,aAAevD,IAAMkF,OAAS,GACrE1F,IAAKyB,EAAKuC,MAETvC,EAAKJ,YAOlB,gBAAC,IAAD,CAAO5B,MAAO+E,EAAcP,aAAc0B,UAAQ,EAACpF,UAAWC,IAAMoF,WAGvEnC,GACC,gBAAC,IAAD,CAAKtC,KAAM,GACT,gBAAC,IAAD,CACE0E,aAAcrB,EAAcsB,WAC5Bd,YAAY,iCACZe,OAAQ,SAACC,GAAD,OA9L1B,SAA0BvG,EAAeC,GACvC,IAAMoE,EAAkClE,KAAKC,MAAMD,KAAKE,UAAUwD,IAClEQ,EAAcpE,GAAOoG,WAAarG,EAClCL,EAAS0E,GA2L0BmC,CAAiBD,EAAMf,OAAOxF,MAAOC,OAI7D6D,GACC,gCACE,gBAAC,IAAD,CAAKpC,KAAM,GACT,uBAAKZ,UAAWC,IAAMiE,QAAtB,WAEF,gBAAC,IAAD,CAAKtD,KAAM,GACT,gBAAC,IAAD,CAAQ/B,SAAU,SAACgC,GAAD,OAAiBgD,EAAiBhD,EAAK1B,IAAQD,MAAO+E,EAAcvE,MACpF,gBAACrB,EAAD,CAAQa,MAAM,MAAd,sBACA,gBAACb,EAAD,CAAQa,MAAM,MAAd,sBACA,gBAACb,EAAD,CAAQa,MAAM,OAAd,4BACA,gBAACb,EAAD,CAAQa,MAAM,OAAd,4BACA,gBAACb,EAAD,CAAQa,MAAM,OAAd,qCAMP6D,EAAWhD,OAAS,GACnB,gBAAC,IAAD,CAAKa,KAAM,GACT,uBAAKR,QAAS,kBA/L9B,SAAsBjB,GACpB,IAAMoE,EAAkClE,KAAKC,MAAMD,KAAKE,UAAUwD,IAClEQ,EAAcnC,OAAOjC,EAAO,GAC5BN,EAAS0E,EAAeR,EAAW5D,IA4LDwG,CAAaxG,IAAQa,UAAW,YAAcC,IAAMiE,QACtE,gBAAC,IAAD,CAAMxE,KAAK,aAKnB,uBAAKM,UAAWC,IAAMQ,QACpB,gBAAC,IAAD,CACEhC,UAAW2D,EAAa6B,EAAcT,eAAiB,CAAE9E,KAAMC,KAC/DC,WAAYqF,EAAcxD,OAC1B5B,SAAU,SAAC4B,GAAD,OAAYmD,EAAmBnD,EAAQtB,YAM3D,qBAAGiB,QA/NP,WACE,IAAMmD,EAAkClE,KAAKC,MAAMD,KAAKE,UAAUwD,IAClEQ,EAAchC,KAAK,CACjBiC,aAAc,gBACdE,aAAc,2BACdC,UAAW,KACXjE,KAAM,KACNiB,GAAIa,cACJf,OAAQ,CACNJ,WAAY,MACZb,aAAc,MAGlBX,EAAS0E,KAkNiBN,Q,qBCxT9BvB,EAAOC,QAAU,CAAC,QAAU,wBAAwB,KAAO,qBAAqB,KAAO,qBAAqB,KAAO,qBAAqB,MAAQ,sBAAsB,IAAM,sB,qBCA5KD,EAAOC,QAAU,CAAC,QAAU,+BAA+B,KAAO,4BAA4B,MAAQ,6BAA6B,YAAc,qC,uKC4ElIG,eAhBS,SAACC,GAEvB,MAAO,CACL6D,UAFoB7D,EAAM8D,MAApBD,cAKiB,SAACrD,GAAD,OACzBC,YACE,CACEsD,sBAAuB,SAACC,GACtB,OAAOC,IAAsBpD,QAAQmD,KAGzCxD,KAGWT,EA9DW,SAAC,GAAuE,IAArEgE,EAAoE,EAApEA,sBAAuBF,EAA6C,EAA7CA,UAAWK,EAAkC,EAAlCA,WAAYC,EAAsB,EAAtBA,SAAsB,EAC/CpH,WAAe,IADgC,mBACxFqH,EADwF,KACtEC,EADsE,KAW/F,OACE,gBAAC,IAAD,CACEC,UAAU,SACVjC,QAAQ,QACRkC,gBAAiB,SAACpH,GAAD,OAAWA,GAASkH,EAAoB,KACzD9B,QACE,2BACE,gBAAC,IAAD,CACEnE,KAAK,QACLtB,SAAU,SAAC0F,GAAD,OAAiB6B,EAAoB7B,IAC/CrF,MAAOiH,EACPlG,MAAO,CAAEe,MAAO,KAChBD,KAAK,YAEJ6E,EAAUlH,KAAK8B,KAAI,SAACU,GACnB,IAAMqF,IAAYN,EAAWO,OAAO5G,MAAK,SAACiB,GAAD,OAASA,EAAIF,KAAOO,EAAKP,MAClE,OACE,gBAAC,IAAOtC,OAAR,CAAeoB,IAAKyB,EAAKP,GAAIzB,MAAOgC,EAAKP,GAAI8F,SAAUF,GACpDrF,EAAKJ,UAZhB,OAkBE,gBAAC,IAAD,CAAQX,KAAK,QAAQC,QAAS,kBAhCLsG,EAgCmCT,OA/B7DE,EAAiBpG,OAItB+F,EAAsB,CAAEa,SAAUD,EAAO/F,GAAIiG,SAAUT,EAAkBxC,UAAWsC,EAAWtC,YAH7FkD,IAAQvD,KAAK,mCAFjB,IAAiCoD,IAgCzB,iBAKJI,MAAM,4BAELZ,M,yjBCiCQpE,iBAnBS,SAACC,GAEvB,MAAO,CACLkE,WAFqBlE,EAAMgF,OAArBd,eAKiB,SAAC1D,GAAD,OACzBC,YACE,CACEwE,YAAa,SAACjB,GACZ,OAAOkB,IAAYrE,QAAQmD,IAE7BmB,eAAgB,SAACnB,GACf,OAAOoB,KAAevE,QAAQmD,KAGlCxD,KAGWT,EA3EO,SAAC,GAA8D,IAA5DmE,EAA2D,EAA3DA,WAAYiB,EAA+C,EAA/CA,eAAgBF,EAA+B,EAA/BA,YAAaI,EAAkB,EAAlBA,KAAkB,EACxCtI,IAAMuI,SAASpB,GADyB,mBAC3EqB,EAD2E,KAC5DC,EAD4D,OAElCzI,IAAMuI,SAAS,IAFmB,6BAGlFvI,IAAM0I,WAAU,WACdD,EAAiBtB,KAChB,CAACA,IAeJ,OACE,yBAAKjG,UAAWC,IAAMC,SACpB,wBAAIF,UAAWC,IAAM6G,OACnB,kBAAC,IAAD,CACEpH,KAAK,OACLb,SAAU,SAAC0F,GAAD,OAAOgD,EAAiB,EAAD,GAAMD,EAAN,CAAqBxG,KAAMyD,EAAEG,OAAOxF,UACrEA,MAAOoI,EAAcxG,QAGzB,yBAAKd,UAAWC,IAAMwH,MACpB,kBAAC,IAAD,CAAQ/H,KAAK,OAAOgI,KAAK,OAAOtH,QAvBnB,WACY,qBAAlB6F,EAAWtF,GACpBuG,EAAe,EAAD,CAAGvG,GAAI,MAAS2G,EAAhB,CAA+BF,UAE7CJ,EAAY,EAAD,GAAMM,EAAN,CAAqBF,YAmB9B,gBAGCE,EAAc3G,IACb,kBAAC,IAAD,CAAQjB,KAAK,OAAOgI,KAAK,OAAOtH,QAnBnB,WACQkH,EAAnB3G,GADkB,IACXgH,EADU,YACEL,EADF,QAEzBN,EAAY,EAAD,GAAMW,EAAN,CAAeP,YAiBpB,sBAKDE,EAAc3G,IACb,kBAAC,EAAD,CAAmBsF,WAAYqB,GAC7B,kBAAC,IAAD,CAAQ5H,KAAK,OAAOgI,KAAK,eAAzB,wBAMN,yBAAK1H,UAAWC,IAAM2H,aACpB,kBAAC,IAAD,CACE/I,SAAU,SAAC0F,GAAD,OAAOgD,EAAiB,EAAD,GAAMD,EAAN,CAAqBM,YAAarD,EAAEG,OAAOxF,UAC5EA,MAAOoI,EAAcM,oB,kCCjE/B,mEAMQvJ,EAAqBC,IAArBD,OAAqBC,IAAbC,SAiCDsJ,IAzBG,SAAC,GAAuE,IAAD,IAApEpJ,iBAAoE,MAAxD,CAAEC,KAAMC,KAAgD,EAAjCmJ,EAAiC,EAAjCA,UAAWjJ,EAAsB,EAAtBA,SACjE,OACE,uBAAKmB,UAAWC,IAAMC,SACpB,gBAAC,IAAD,CAAKF,UAAWC,IAAMiB,MACpB,gBAAC,IAAD,CAAKN,KAAM,GACT,uBAAKZ,UAAWC,IAAMiE,QAAtB,WAEF,gBAAC,IAAD,CAAKtD,KAAM,GACT,gBAAC,IAAD,CAAQ1B,MAAO4I,EAAWjJ,SAAUA,GAClC,gBAACR,EAAD,CAAQa,MAAM,IAAd,gBACCT,EAAUC,KAAK8B,KAAI,SAAAb,GAAK,OACvB,gBAACtB,EAAD,CAAQa,MAAOS,EAAMT,MAAOO,IAAKE,EAAMT,OACpCS,EAAMmB,WAKf,gBAAC,IAAD,CAAKF,KAAM,GACT,uBAAKZ,UAAWC,IAAMiE,QAAtB,qB,qBC/BVxC,EAAOC,QAAU,CAAC,QAAU,2BAA2B,OAAS,4B,qBCAhED,EAAOC,QAAU,CAAC,QAAU,8BAA8B,QAAU,8BAA8B,YAAc,kCAAkC,UAAY,kC,wyBCgBtJtD,EAAWC,IAAXD,OAEA0J,GADUC,IAAVC,MACUpG,IAAVkG,OAgIOjG,uBAnBS,SAACC,GACvB,IAAM4B,EAAY5B,EAAMO,QAAQD,YAAY1B,GADE,EAEkBoB,EAAMmG,QACtE,MAAO,CACLvE,YACAwE,iBAL4C,EAEtCA,iBAINC,kBAN4C,EAEpBA,kBAKxBC,eAP4C,EAEDA,mBASpB,SAAC9F,GAAD,OACzBC,YACE,CACE8F,sBAAuB,SAAC5F,GAAD,OAA+B6F,IAAkB3F,QAAQF,KAElFH,KAGWT,EAvHM,SAAC,GAOR,IANZuG,EAMW,EANXA,eAEAC,EAIW,EAJXA,sBACA3E,EAGW,EAHXA,UACAwE,EAEW,EAFXA,iBACAC,EACW,EADXA,kBAEMI,EAAe,SAAClF,GACpBA,EAAKK,UAAYA,EACjB2E,EAAsBhF,IAGxB,OACE,yBAAKtD,UAAWC,IAAMC,SACpB,kBAAC,IAAD,CAAekH,KAAI,KAAOgB,EAAP,CAA0BzE,gBAC7C,yBAAK3D,UAAWC,IAAMwI,MACpB,yBAAKzI,UAAWC,IAAMyI,aACpB,0BAAM1I,UAAWC,IAAM0I,WAAvB,iBACA,6BACE,kBAAC,IAAD,CACE3F,SAAO,EACPD,WAAYqF,EAAkBrF,WAC9BlE,SAAU,SAACkE,GAAD,OAAgByF,EAAa,EAAD,GAAMJ,EAAN,CAAyBrF,qBAOrE,yBAAK/C,UAAWC,IAAMyI,aACpB,0BAAM1I,UAAWC,IAAM0I,WAAvB,iBACA,kBAAC,IAAD,CACEb,UAAWM,EAAkBN,UAC7BjJ,SAAU,SAACiJ,GAAD,OAAeU,EAAa,EAAD,GAAMJ,EAAN,CAAyBN,mBAIlE,yBAAK9H,UAAWC,IAAMyI,aACpB,0BAAM1I,UAAWC,IAAM0I,WAAvB,iBACA,kBAAC,IAAD,CACE/J,WAAYwJ,EAAkB3H,OAC9B5B,SAAU,SAAC4B,GAAD,OAAY+H,EAAa,EAAD,GAAMJ,EAAN,CAAyB3H,iBAKjE,yBAAKT,UAAWC,IAAM2I,SACpB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKhI,KAAM,IACT,kBAAC,IAAD,CACEiI,YAAa,CAAEC,YAAY,GAC3BjK,SAAU,SAACkK,GAAD,OAAUP,EAAa,EAAD,GAAMJ,EAAN,GAA4BW,KAC5D7J,MAAO,CACL8J,SAAUZ,EAAkBY,SAC5BC,QAASb,EAAkBa,QAC3BC,UAAWd,EAAkBc,cAInC,kBAAC,IAAD,CAAKtI,KAAM,EAAGuI,OAAQ,GACpB,kBAACpB,EAAD,CAAOqB,SAAO,GACZ,kBAAC,IAAD,CACEnJ,MAAO,CAAEe,MAAO,OAChB9B,MAAOkJ,EAAkB1I,KACzBb,SAAU,SAACa,GAAD,OAAkB8I,EAAa,EAAD,GAAMJ,EAAN,CAAyB1I,YAEjE,kBAACrB,EAAD,CAAQa,MAAM,QAAd,sBACA,kBAACb,EAAD,CAAQa,MAAM,OAAd,gBACA,kBAACb,EAAD,CAAQa,MAAM,SAAd,gBACA,kBAACb,EAAD,CAAQa,MAAM,QAAd,iBAEF,kBAAC,IAAD,CACEe,MAAO,CAAEe,MAAO,OAChB9B,MAAOkJ,EAAkBiB,SACzBxK,SAAU,SAACwK,GAAD,OAAsBb,EAAa,EAAD,GAAMJ,EAAN,CAAyBiB,gBAErE,kBAAChL,EAAD,CAAQa,MAAM,QAAd,sBACA,kBAACb,EAAD,CAAQa,MAAM,OAAd,gBACA,kBAACb,EAAD,CAAQa,MAAM,QAAd,gBACA,kBAACb,EAAD,CAAQa,MAAM,SAAd,gBACA,kBAACb,EAAD,CAAQa,MAAM,QAAd,iBAEF,kBAAC,IAAD,CAAQwI,KAAK,YAAb,mBAIN,6BACA,6BACA,kBAAC,IAAD,CAAM4B,SAAUjB,GACd,yBAAKpI,MAAO,CAAEsJ,OAAmC,UAA3BnB,EAAkB1I,KAAmB,IAAM,MAC/D,kBAAC,IAAD,CAAmB0H,KAAMe,MAG7B","file":"static/js/8.35106d9e.chunk.js","sourcesContent":["import * as React from 'react';\nimport { Select, Row, Col, Icon, AutoComplete, Button } from 'antd';\nimport style from './Filter.module.less';\nimport { IListData } from '@/types';\nimport { IFieldInfo, IFilterInfo, IFilterValue } from '@/api';\nimport { SelectValue } from 'antd/lib/select';\nimport { v4 as uuidv4 } from 'uuid';\nimport { EVENT_ATTRS } from '@/constants';\nconst { Option, OptGroup } = Select;\n\ninterface Props {\n  fieldList?: IListData<IFieldInfo>;\n  filterInfo: IFilterInfo;\n  onChange: (filterInfo: IFilterInfo) => any;\n}\n\nconst Filter = ({ fieldList = { list: EVENT_ATTRS }, filterInfo, onChange }: Props) => {\n  const [recommend, setrecommend] = React.useState<string[]>([]);\n  const handleFieldChange = (value: string, index: number) => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterValues[index].key = value;\n    newFilterInfo.filterValues[index].type = 'equal';\n    newFilterInfo.filterValues[index].value = [];\n    const field = fieldList.list.find(field => field.value === value);\n    if (field) {\n      setrecommend(field.recommend);\n    }\n\n    onChange(newFilterInfo);\n  };\n\n  const handleFilterTypeChange = (value: string, index: number) => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterValues[index].type = value;\n    if (value === 'equal' || value === 'notEqual') {\n      newFilterInfo.filterValues[index].value = [];\n    } else if (value === 'between') {\n      newFilterInfo.filterValues[index].value = [null, null];\n    } else {\n      newFilterInfo.filterValues[index].value = null;\n    }\n    onChange(newFilterInfo);\n  };\n\n  const handleFilterValueChange = (value: string, index: number) => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterValues[index].value = value;\n    onChange(newFilterInfo);\n  };\n\n  const handleClose = (index: number) => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterValues.splice(index, 1);\n    onChange(newFilterInfo);\n  };\n\n  const handleAdd = () => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterValues.push({\n      type: null,\n      key: null,\n      value: null,\n      id: uuidv4()\n    });\n    onChange(newFilterInfo);\n  };\n\n  const handleChangeFilterType = () => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterType = newFilterInfo.filterType === 'AND' ? 'OR' : 'AND';\n    onChange(newFilterInfo);\n  };\n\n  return (\n    <div>\n      {filterInfo.filterValues.length > 0 && (\n        <div className={style.wrapper}>\n          {filterInfo.filterValues.length > 1 && (\n            <div className={style.type}>\n              <Button size='small' onClick={handleChangeFilterType}>\n                {filterInfo.filterType === 'AND' ? '且' : '或'}\n              </Button>\n              <div className={style.line}></div>\n            </div>\n          )}\n          <div className={style.form}>\n            {filterInfo.filterValues.map((filter, index) => (\n              <Row gutter={16} key={filter.id}>\n                <Col span={5}>\n                  <Select value={filter.key} onChange={(val: string) => handleFieldChange(val, index)}>\n                    {fieldList.list.map(field => (\n                      <Option value={field.value} key={field.value}>\n                        {field.name}\n                      </Option>\n                    ))}\n                  </Select>\n                </Col>\n                <Col span={3}>\n                  <Select value={filter.type} onChange={(val: string) => handleFilterTypeChange(val, index)}>\n                    <Option value='equal'>等于</Option>\n                    <Option value='notEqual'>不等于</Option>\n                    <Option value='isSet'>有值</Option>\n                    <Option value='notSet'>没值</Option>\n\n                    <Option value='greater'>大于</Option>\n                    <Option value='less'>小于</Option>\n                    <Option value='between'>区间</Option>\n\n                    <Option value='contain'>包含</Option>\n                    <Option value='notContain'>不包含</Option>\n                    <Option value='isEmpty'>为空</Option>\n                    <Option value='isNotEmpty'>不为空</Option>\n                    <Option value='rlike'>正则匹配</Option>\n                    <Option value='notrlike'>正则不匹配</Option>\n                  </Select>\n                </Col>\n                {filter.type !== 'isEmpty' &&\n                  filter.type !== 'isNotEmpty' &&\n                  filter.type !== 'isSet' &&\n                  filter.type !== 'notSet' &&\n                  filter.type !== 'rlike' &&\n                  filter.type !== 'notrlike' && (\n                    <Col span={8}>\n                      {filter.type === 'equal' || filter.type === 'notEqual' ? (\n                        <Select\n                          value={filter.value}\n                          onChange={(val: string) => handleFilterValueChange(val, index)}\n                          mode='tags'\n                          style={{ width: '100%' }}\n                          tokenSeparators={[',']}\n                        >\n                          {recommend.map(item => (\n                            <Option key={item} value={item}>\n                              {item}\n                            </Option>\n                          ))}\n                        </Select>\n                      ) : (\n                        <AutoComplete\n                          value={filter.value}\n                          dataSource={recommend}\n                          style={{ width: '100%' }}\n                          onChange={(val: any) => handleFilterValueChange(val, index)}\n                        />\n                      )}\n                    </Col>\n                  )}\n                <Col span={1}>\n                  <div onClick={() => handleClose(index)} className={'app-link ' + style.close}>\n                    <Icon type='minus-circle' />\n                  </div>\n                </Col>\n              </Row>\n            ))}\n          </div>\n        </div>\n      )}\n      <a onClick={handleAdd} className={style.add}>\n        <Icon type='plus-square' />\n        添加筛选\n      </a>\n    </div>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Indicator_wrapper__3B5qd\",\"select\":\"Indicator_select__1kP-z\",\"content\":\"Indicator_content__3-BaR\",\"center\":\"Indicator_center__3Oax_\",\"metadataBox\":\"Indicator_metadataBox__3wnAQ\",\"active\":\"Indicator_active__1aD9o\",\"filter\":\"Indicator_filter__lBazH\"};","import * as React from 'react';\nimport { Tag, Select, Row, Col, Icon, Popover, Input, Dropdown, Divider } from 'antd';\nimport style from './Indicator.module.less';\nimport {\n  IMetadataInfo,\n  IMetadataListParam,\n  IIndicatorInfo,\n  IFieldInfo,\n  IFilterInfo,\n  ITagList,\n  IFieldListParam,\n  IProjectInfo\n} from '@/api';\nimport { IPageData, IAction, IStoreState, IListData } from '@/types';\nimport { connect } from 'react-redux';\n\nimport { bindActionCreators, Dispatch } from 'redux';\nimport Filter from './Filter';\nimport { v4 as uuidv4 } from 'uuid';\nimport { doGetActiveMetadataList, doGetFieldList } from '../store/actions';\nimport { IFieldListMap } from '@/store/reducers/metadata.reducer';\nimport { EVENT_ATTRS } from '@/constants';\nconst { Option, OptGroup } = Select;\n\nconst { Search } = Input;\n\ninterface Props {\n  activeMetadataList: IPageData<IMetadataInfo>;\n  activeMetadataListParams: IMetadataListParam;\n  index?: number;\n  fieldListMap: IFieldListMap;\n  indicators: IIndicatorInfo[];\n  onChange: (param: IIndicatorInfo[], changedValue?: IIndicatorInfo) => any;\n  hasType?: boolean;\n  addText?: string;\n  hasCustomName?: boolean;\n  type?: number;\n  tagList: ITagList;\n  onGetActiveMetadataList: (param: IMetadataListParam) => IAction;\n  onGetFieldList: (param: IFieldListParam) => IAction;\n  projectInfo: IProjectInfo;\n}\n\nconst Indicator = ({\n  indicators,\n  activeMetadataList,\n  activeMetadataListParams,\n  onChange,\n  fieldListMap,\n  hasType,\n  addText = '+添加指标',\n  hasCustomName = false,\n  type = null,\n  tagList,\n  onGetActiveMetadataList,\n  onGetFieldList,\n  projectInfo\n}: Props) => {\n  const [metadataparam, setmetadataparam] = React.useState({ ...activeMetadataListParams });\n  React.useEffect(() => {\n    setmetadataparam(activeMetadataListParams);\n  }, [activeMetadataListParams]);\n\n  function handleSelectMetadata(info: IMetadataInfo, index: number) {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators[index].metadataCode = info.code;\n    newIndicators[index].metadataName = info.name;\n    newIndicators[index].projectId = info.projectId;\n    onChange(newIndicators, indicators[index]);\n    onGetFieldList({ projectId: info.projectId, metadataCode: info.code });\n  }\n\n  function handleFilterChange(info: IFilterInfo, index: number) {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators[index].filter = info;\n    onChange(newIndicators);\n  }\n\n  function handleTypeChange(value: string, index: number) {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators[index].type = value;\n    onChange(newIndicators);\n  }\n\n  function handleNameChange(value: string, index: number) {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators[index].customName = value;\n    onChange(newIndicators);\n  }\n\n  function handleAdd() {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators.push({\n      metadataCode: '_ALL_METADATA',\n      metadataName: '所有事件',\n      projectId: null,\n      type: 'PV',\n      id: uuidv4(),\n      filter: {\n        filterType: 'AND',\n        filterValues: []\n      }\n    });\n    onChange(newIndicators);\n  }\n\n  function handleRemove(index: number) {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators.splice(index, 1);\n    onChange(newIndicators, indicators[index]);\n  }\n\n  function handleSearch(param: IMetadataListParam) {\n    setmetadataparam(param);\n    setTimeout(() => {\n      onGetActiveMetadataList(param);\n    }, 300);\n  }\n\n  const allMetadata = {\n    name: '所有事件',\n    code: '_ALL_METADATA'\n  } as IMetadataInfo;\n\n  return (\n    <div className={style.wrapper}>\n      <div>\n        {indicators.map((indicatorInfo, index) => (\n          <div key={indicatorInfo.id}>\n            <Row className={style.item} gutter={10}>\n              <Col span={1}>\n                <div className={style.center}>\n                  <Tag color='gold'>{index + 1}</Tag>\n                </div>\n              </Col>\n              <Col span={3}>\n                <Dropdown\n                  trigger={['click']}\n                  overlay={\n                    <div className={style.content}>\n                      <div onClick={(e) => e.stopPropagation()}>\n                        <Search\n                          placeholder='搜索事件'\n                          value={metadataparam.name}\n                          onChange={(e) => setmetadataparam({ ...metadataparam, name: e.target.value })}\n                          onSearch={(name) => handleSearch({ ...metadataparam, name })}\n                          style={{ width: 120 }}\n                        />\n                        &nbsp;\n                        <Select\n                          placeholder='根据标签筛选'\n                          style={{ width: 120 }}\n                          mode='multiple'\n                          value={metadataparam.tags ? metadataparam.tags.split(',').map((item) => Number(item)) : []}\n                          onChange={(tags: number[]) => handleSearch({ ...metadataparam, tags: tags.join(',') })}\n                        >\n                          {tagList.list.map((item) => (\n                            <Option key={item.id} value={item.id}>\n                              {item.name}\n                            </Option>\n                          ))}\n                        </Select>\n                        &nbsp;\n                        <Select\n                          placeholder='关联项目'\n                          style={{ width: 160 }}\n                          mode='multiple'\n                          value={\n                            metadataparam.projectIds\n                              ? metadataparam.projectIds.split(',').map((item) => Number(item))\n                              : []\n                          }\n                          onChange={(projectIds: number[]) =>\n                            handleSearch({ ...metadataparam, projectIds: projectIds.join(',') })\n                          }\n                        >\n                          {projectInfo.associationProjects.map((item) => (\n                            <Option key={item.id} value={item.id}>\n                              {item.name}\n                            </Option>\n                          ))}\n                        </Select>\n                      </div>\n\n                      <div className={style.metadataBox}>\n                        {projectInfo.associationProjects ? (\n                          <>\n                            <span\n                              onClick={() => handleSelectMetadata({ ...allMetadata }, index)}\n                              className={\n                                allMetadata.code === indicatorInfo.metadataCode && !indicatorInfo.projectId\n                                  ? style.active\n                                  : ''\n                              }\n                              key={allMetadata.code}\n                            >\n                              所有事件\n                            </span>\n                            {!!projectInfo.associationProjects.length && (\n                              <span\n                                onClick={() =>\n                                  handleSelectMetadata(\n                                    { ...allMetadata, name: projectInfo.name + '所有事件', projectId: projectInfo.id },\n                                    index\n                                  )\n                                }\n                                className={\n                                  allMetadata.code === indicatorInfo.metadataCode &&\n                                  indicatorInfo.projectId === projectInfo.id\n                                    ? style.active\n                                    : ''\n                                }\n                                key={allMetadata.code + projectInfo.id}\n                              >\n                                {projectInfo.name}所有事件\n                              </span>\n                            )}\n                            {projectInfo.associationProjects.map((item) => (\n                              <span\n                                onClick={() =>\n                                  handleSelectMetadata(\n                                    { ...allMetadata, name: item.name + '所有事件', projectId: item.id },\n                                    index\n                                  )\n                                }\n                                className={\n                                  allMetadata.code === indicatorInfo.metadataCode && indicatorInfo.projectId === item.id\n                                    ? style.active\n                                    : ''\n                                }\n                                key={allMetadata.code + item.id}\n                              >\n                                {item.name}所有事件\n                              </span>\n                            ))}\n                          </>\n                        ) : (\n                          <span\n                            onClick={() => handleSelectMetadata({ ...allMetadata, projectId: projectInfo.id }, index)}\n                            className={allMetadata.code === indicatorInfo.metadataCode ? style.active : ''}\n                            key={allMetadata.code + projectInfo.id}\n                          >\n                            所有事件\n                          </span>\n                        )}\n\n                        {activeMetadataList.list\n                          .filter((item) => {\n                            if (!type) {\n                              return true;\n                            }\n                            return item.type === type;\n                          })\n                          .map((item) => (\n                            <span\n                              onClick={() => handleSelectMetadata(item, index)}\n                              className={item.code === indicatorInfo.metadataCode ? style.active : ''}\n                              key={item.code}\n                            >\n                              {item.name}\n                            </span>\n                          ))}\n                      </div>\n                    </div>\n                  }\n                >\n                  <Input value={indicatorInfo.metadataName} readOnly className={style.select} />\n                </Dropdown>\n              </Col>\n              {hasCustomName && (\n                <Col span={3}>\n                  <Input\n                    defaultValue={indicatorInfo.customName}\n                    placeholder='自定义名称'\n                    onBlur={(event) => handleNameChange(event.target.value, index)}\n                  />\n                </Col>\n              )}\n              {hasType && (\n                <>\n                  <Col span={1}>\n                    <div className={style.center}>的</div>\n                  </Col>\n                  <Col span={3}>\n                    <Select onChange={(val: string) => handleTypeChange(val, index)} value={indicatorInfo.type}>\n                      <Option value='PV'>总次数</Option>\n                      <Option value='UV'>用户数</Option>\n                      <Option value='APV'>人均次数</Option>\n                      <Option value='DPV'>日均次数</Option>\n                      <Option value='DUV'>日均用户数</Option>\n                    </Select>\n                  </Col>\n                </>\n              )}\n\n              {indicators.length > 1 && (\n                <Col span={1}>\n                  <div onClick={() => handleRemove(index)} className={'app-link ' + style.center}>\n                    <Icon type='close' />\n                  </div>\n                </Col>\n              )}\n            </Row>\n            <div className={style.filter}>\n              <Filter\n                fieldList={fieldListMap[indicatorInfo.metadataCode] || { list: EVENT_ATTRS }}\n                filterInfo={indicatorInfo.filter}\n                onChange={(filter) => handleFilterChange(filter, index)}\n              ></Filter>\n            </div>\n          </div>\n        ))}\n      </div>\n      <a onClick={handleAdd}>{addText}</a>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IStoreState) => {\n  const { activeMetadataList, activeMetadataListParams, tagList, fieldListMap } = state.metadata;\n  const { projectInfo } = state.project;\n  return {\n    activeMetadataList,\n    activeMetadataListParams,\n    tagList,\n    fieldListMap,\n    projectInfo\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) =>\n  bindActionCreators(\n    {\n      onGetActiveMetadataList: (param) => doGetActiveMetadataList.request(param),\n      onGetFieldList: (param) => doGetFieldList.request(param)\n    },\n\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Indicator);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__9rptJ\",\"line\":\"Filter_line__eOPS4\",\"type\":\"Filter_type__2GtXQ\",\"form\":\"Filter_form__1lfK0\",\"close\":\"Filter_close__1AZpi\",\"add\":\"Filter_add__2YNj8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AnalyseHeader_wrapper__1r0g1\",\"btns\":\"AnalyseHeader_btns__G6iwS\",\"title\":\"AnalyseHeader_title__1X3LF\",\"description\":\"AnalyseHeader_description__1fJOY\"};","import * as React from 'react';\nimport { Popover, Select, Button, message } from 'antd';\nimport { IAction, IStoreState } from '@/types';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { IBoardList, IReportInfo, IReportAppendToBoard } from '@/api';\nimport { doAppendReportToBoard } from '@/store/actions';\n\ninterface Props {\n  boardList: IBoardList;\n  reportInfo: IReportInfo;\n  onAppendReportToBoard: (param: IReportAppendToBoard) => IAction;\n  children: React.ReactNode;\n}\n\nconst ReportAppendBoard = ({ onAppendReportToBoard, boardList, reportInfo, children }: Props) => {\n  const [appendedBoardIds, setappendedBoardIds] = React.useState([]);\n\n  function handleReportAppendBoard(record: IReportInfo) {\n    if (!appendedBoardIds.length) {\n      message.info('请选择看板');\n      return;\n    }\n    onAppendReportToBoard({ reportId: record.id, boardIds: appendedBoardIds, projectId: reportInfo.projectId });\n  }\n\n  return (\n    <Popover\n      placement='bottom'\n      trigger='click'\n      onVisibleChange={(value) => value && setappendedBoardIds([])}\n      content={\n        <div>\n          <Select\n            size='small'\n            onChange={(e: number[]) => setappendedBoardIds(e)}\n            value={appendedBoardIds}\n            style={{ width: 240 }}\n            mode='multiple'\n          >\n            {boardList.list.map((item) => {\n              const isExist = !!reportInfo.boards.find((val) => val.id === item.id);\n              return (\n                <Select.Option key={item.id} value={item.id} disabled={isExist}>\n                  {item.name}\n                </Select.Option>\n              );\n            })}\n          </Select>\n          &nbsp;\n          <Button size='small' onClick={() => handleReportAppendBoard(reportInfo)}>\n            确定\n          </Button>\n        </div>\n      }\n      title='选择看板'\n    >\n      {children}\n    </Popover>\n  );\n};\nconst mapStateToProps = (state: IStoreState) => {\n  const { boardList } = state.board;\n  return {\n    boardList\n  };\n};\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) =>\n  bindActionCreators(\n    {\n      onAppendReportToBoard: (params: IReportAppendToBoard) => {\n        return doAppendReportToBoard.request(params);\n      }\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReportAppendBoard);\n","import React from 'react';\nimport { Icon, Button, Input, message, Select, Popover } from 'antd';\nimport { connect } from 'react-redux';\nimport { IAction, IStoreState } from '@/types';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { doAddReport, doUpdateReport, doAppendReportToBoard } from '@/store/actions';\nimport { IReportAddParam, IReportUpdateParam, IReportInfo, IReportAppendToBoard } from '@/api';\nimport style from './AnalyseHeader.module.less';\nimport ReportAppendBoard from '@/components/ReportAppendBoard';\ninterface Props {\n  reportInfo: IReportInfo;\n  onAddReport: (params: IReportAddParam) => IAction;\n  onUpdateReport: (params: IReportUpdateParam) => IAction;\n  data: Object;\n}\nconst AnalyseHeader = ({ reportInfo, onUpdateReport, onAddReport, data }: Props) => {\n  const [newReportInfo, setnewReportInfo] = React.useState(reportInfo);\n  const [appendedBoardIds, setappendedBoardIds] = React.useState([]);\n  React.useEffect(() => {\n    setnewReportInfo(reportInfo);\n  }, [reportInfo]);\n\n  const handleSave = () => {\n    if (typeof reportInfo.id !== 'undefined') {\n      onUpdateReport({ id: null, ...newReportInfo, data });\n    } else {\n      onAddReport({ ...newReportInfo, data });\n    }\n  };\n\n  const handleSaveAs = () => {\n    const { id, ...newInfo } = newReportInfo;\n    onAddReport({ ...newInfo, data });\n  };\n\n  return (\n    <div className={style.wrapper}>\n      <h2 className={style.title}>\n        <Input\n          type='text'\n          onChange={(e) => setnewReportInfo({ ...newReportInfo, name: e.target.value })}\n          value={newReportInfo.name}\n        />\n      </h2>\n      <div className={style.btns}>\n        <Button type='link' icon='save' onClick={handleSave}>\n          保存\n        </Button>\n        {newReportInfo.id && (\n          <Button type='link' icon='save' onClick={handleSaveAs}>\n            另存为\n          </Button>\n        )}\n\n        {newReportInfo.id && (\n          <ReportAppendBoard reportInfo={newReportInfo}>\n            <Button type='link' icon='plus-circle'>\n              添加到\n            </Button>\n          </ReportAppendBoard>\n        )}\n      </div>\n      <div className={style.description}>\n        <Input\n          onChange={(e) => setnewReportInfo({ ...newReportInfo, description: e.target.value })}\n          value={newReportInfo.description}\n        ></Input>\n      </div>\n    </div>\n  );\n};\nconst mapStateToProps = (state: IStoreState) => {\n  const { reportInfo } = state.report;\n  return {\n    reportInfo\n  };\n};\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) =>\n  bindActionCreators(\n    {\n      onAddReport: (params: IReportAddParam) => {\n        return doAddReport.request(params);\n      },\n      onUpdateReport: (params: IReportUpdateParam) => {\n        return doUpdateReport.request(params);\n      }\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AnalyseHeader);\n","import * as React from 'react';\nimport { Select, Row, Col, Icon } from 'antd';\nimport style from './Dimension.module.less';\nimport { IFieldInfo } from '@/api';\nimport { IListData } from '@/types';\nimport { EVENT_ATTRS } from '@/constants';\nconst { Option, OptGroup } = Select;\n\ninterface Props {\n  fieldList?: IListData<IFieldInfo>;\n  dimension: string;\n  onChange: (param: string) => any;\n}\n\nconst Dimension = ({ fieldList = { list: EVENT_ATTRS }, dimension, onChange }: Props) => {\n  return (\n    <div className={style.wrapper}>\n      <Row className={style.item}>\n        <Col span={1}>\n          <div className={style.center}>按</div>\n        </Col>\n        <Col span={3}>\n          <Select value={dimension} onChange={onChange}>\n            <Option value=''>总体</Option>\n            {fieldList.list.map(field => (\n              <Option value={field.value} key={field.value}>\n                {field.name}\n              </Option>\n            ))}\n          </Select>\n        </Col>\n        <Col span={1}>\n          <div className={style.center}>查看</div>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default Dimension;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Dimension_wrapper__Ew76P\",\"center\":\"Dimension_center__1BCis\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preview\":\"AnalyseEvent_preview__k46p_\",\"wrapper\":\"AnalyseEvent_wrapper__2ShCs\",\"ruleSection\":\"AnalyseEvent_ruleSection__2a3iF\",\"ruleTitle\":\"AnalyseEvent_ruleTitle__3uJQg\"};","import { Icon, Collapse, Divider, Select, Input, Row, Col, Button, Spin } from 'antd';\nimport React from 'react';\nimport AnalyseRangePicker from '@/components/AnalyseRangePicker';\nimport moment from 'moment';\nimport style from './AnalyseEvent.module.less';\nimport ReactEcharts from 'echarts-for-react';\nimport Indicator from '@/components/Indicator';\nimport Dimension from '@/components/Dimension';\nimport Filter from '@/components/Filter';\nimport AnalyseHeader from './components/AnalyseHeader';\nimport { IReportInfo, IFieldInfo, IEventAnalyseData, IEventAnalyseParam } from '@/api';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { doAddReport, doUpdateReport, doGetEventAnalyse } from '@/store/actions';\nimport { IAction, IStoreState, IListData, IDate } from '@/types';\nimport { DYNAMIC_TIME, EVENT_ATTRS } from '@/constants';\nimport AnalyseEventChart from './components/AnalyseEventChart';\nconst { Option } = Select;\nconst { Panel } = Collapse;\nconst { Group } = Input;\ninterface Props {\n  onGetEventAnalyseData: (param: IEventAnalyseParam) => IAction;\n  projectId: number;\n  eventAnalyseData: IEventAnalyseData;\n  eventAnalyseParam: IEventAnalyseParam;\n  analyseLoading: boolean;\n}\n\nconst AnalyseEvent = ({\n  analyseLoading,\n\n  onGetEventAnalyseData,\n  projectId,\n  eventAnalyseData,\n  eventAnalyseParam\n}: Props) => {\n  const handleChange = (info: IEventAnalyseParam) => {\n    info.projectId = projectId;\n    onGetEventAnalyseData(info);\n  };\n\n  return (\n    <div className={style.wrapper}>\n      <AnalyseHeader data={{ ...eventAnalyseParam, projectId }}></AnalyseHeader>\n      <div className={style.rule}>\n        <div className={style.ruleSection}>\n          <span className={style.ruleTitle}>指标:</span>\n          <div>\n            <Indicator\n              hasType\n              indicators={eventAnalyseParam.indicators}\n              onChange={(indicators) => handleChange({ ...eventAnalyseParam, indicators })}\n            />\n\n            {/* <Filter fieldList={fieldList} filterInfo={filter} /> */}\n          </div>\n        </div>\n\n        <div className={style.ruleSection}>\n          <span className={style.ruleTitle}>纬度:</span>\n          <Dimension\n            dimension={eventAnalyseParam.dimension}\n            onChange={(dimension) => handleChange({ ...eventAnalyseParam, dimension })}\n          />\n        </div>\n\n        <div className={style.ruleSection}>\n          <span className={style.ruleTitle}>筛选:</span>\n          <Filter\n            filterInfo={eventAnalyseParam.filter}\n            onChange={(filter) => handleChange({ ...eventAnalyseParam, filter })}\n          />\n        </div>\n      </div>\n\n      <div className={style.preview}>\n        <Row>\n          <Col span={14}>\n            <AnalyseRangePicker\n              pickerProps={{ allowClear: false }}\n              onChange={(time) => handleChange({ ...eventAnalyseParam, ...time })}\n              value={{\n                dateType: eventAnalyseParam.dateType,\n                dateEnd: eventAnalyseParam.dateEnd,\n                dateStart: eventAnalyseParam.dateStart\n              }}\n            />\n          </Col>\n          <Col span={6} offset={4}>\n            <Group compact>\n              <Select\n                style={{ width: '33%' }}\n                value={eventAnalyseParam.type}\n                onChange={(type: string) => handleChange({ ...eventAnalyseParam, type })}\n              >\n                <Option value='LINE'>折线图</Option>\n                <Option value='PIE'>饼图</Option>\n                <Option value='TABLE'>表格</Option>\n                <Option value='TEXT'>数值</Option>\n              </Select>\n              <Select\n                style={{ width: '33%' }}\n                value={eventAnalyseParam.timeUnit}\n                onChange={(timeUnit: string) => handleChange({ ...eventAnalyseParam, timeUnit })}\n              >\n                <Option value='HOUR'>按小时</Option>\n                <Option value='DAY'>按天</Option>\n                <Option value='WEEK'>按周</Option>\n                <Option value='MONTH'>按月</Option>\n                <Option value='YEAR'>按年</Option>\n              </Select>\n              <Button icon='download'>导出</Button>\n            </Group>\n          </Col>\n        </Row>\n        <br />\n        <br />\n        <Spin spinning={analyseLoading}>\n          <div style={{ height: eventAnalyseParam.type === 'TABLE' ? 800 : 400 }}>\n            <AnalyseEventChart data={eventAnalyseData}></AnalyseEventChart>\n          </div>\n        </Spin>\n        <div></div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IStoreState) => {\n  const projectId = state.project.projectInfo.id;\n  const { eventAnalyseData, eventAnalyseParam, analyseLoading } = state.analyse;\n  return {\n    projectId,\n    eventAnalyseData,\n    eventAnalyseParam,\n    analyseLoading\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) =>\n  bindActionCreators(\n    {\n      onGetEventAnalyseData: (param: IEventAnalyseParam) => doGetEventAnalyse.request(param)\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AnalyseEvent);\n"],"sourceRoot":""}