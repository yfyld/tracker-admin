{"version":3,"sources":["pages/metadata/MetadataList.module.less","pages/metadata/components/TagManagement.module.less","pages/metadata/components/MetadataAddModal.tsx","pages/metadata/components/MetadataEditModal.tsx","pages/metadata/components/TagAddModal.tsx","pages/metadata/components/TagEditModal.tsx","pages/metadata/components/TagManagement.tsx","pages/metadata/components/MetadataListForm.tsx","pages/metadata/MetadataList.tsx"],"names":["module","exports","connect","state","projectId","project","projectInfo","id","tagList","metadata","dispatch","bindActionCreators","onAddMetadata","params","doAddMetadata","request","Form","create","props","getFieldDecorator","form","Option","Select","TextArea","Input","React","resetFields","visible","onOk","e","preventDefault","validateFields","err","values","toastformError","newTags","newTagsTemp","tags","forEach","item","test","push","parseInt","status","log","onClose","title","onCancel","layout","formItemLayout","Item","label","rules","required","message","placeholder","value","EMetadataType","page","event","mode","list","map","key","name","onUpdateMetadata","doUpdateMetadata","console","defaultValue","initialValue","code","type","url","description","handleSubmit","onSubmit","confirm","Modal","onDelTag","doDelTag","onAddTag","doAddTag","onUpdateTag","doUpdateTag","addTagVisible","setAddTagVisible","editTagVisible","setEditTagVisible","curTagInfo","setCurTagInfo","columns","dataIndex","render","text","record","size","onClick","handleUpdateMetadata","handleDeleteMetadata","tagId","content","okText","okType","cancelText","className","style","wrapper","btnBox","rowKey","pagination","dataSource","htmlType","metadataList","metadataListParams","tagListFilters","tagListFiltersSelector","onGetMetadataList","doGetMetadataList","onDeleteMetadata","doDeleteMetadata","onEnableMetadata","doEnableMetadata","onDisableMetadata","doDisableMetadata","onAddMetadataByExcel","doAddMetadataByExcel","addMetadataVisible","setAddMetadataVisible","editMetadataVisible","setEditMetadataVisible","recentLog","curMetadataInfo","setCurMetadataInfo","tagDrawerVisible","setTagDrawerVisible","sorter","sortDirections","filters","filterMultiple","filterMetadataType","color","width","metadataId","MetadataAddModal","MetadataEditModal","placement","closable","showUploadList","display","action","config","baseURL","onChange","info","file","path","response","result","current","pageSize","sortKey","sortType","field","order","join"],"mappings":"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","file":"static/js/17.1288f718.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MetadataList_wrapper__6f7Dg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"TagManagement_wrapper__13Kz3\",\"btnBox\":\"TagManagement_btnBox__z6WLz\"};","import { Modal, Form, Input, Select, Button } from 'antd';\nimport * as React from 'react';\nimport { formItemLayout } from '@/constants';\nimport { FormComponentProps } from 'antd/lib/form';\nimport { IMetadataAddParam, ITagList, EMetadataType } from '@/api';\nimport { toastformError } from '@/utils';\nimport { connect } from 'react-redux';\nimport { IAction, IStoreState } from '@/types';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { doAddMetadata } from '@/store/actions';\n\ninterface Props extends FormComponentProps {\n  visible: boolean;\n  onClose: (param: boolean) => any;\n  projectId: number;\n  tagList: ITagList;\n  onAddMetadata: (param: IMetadataAddParam) => IAction;\n}\n\nconst MetadataAddModel = (props: Props) => {\n  const { getFieldDecorator } = props.form;\n  const { Option } = Select;\n  const { TextArea } = Input;\n  React.useEffect(() => {\n    props.form.resetFields();\n  }, [props.visible]);\n\n  const handleSubmit = (e: React.MouseEvent) => {\n    e.preventDefault();\n    props.form.validateFields((err, values) => {\n      if (err) {\n        toastformError(err);\n        return;\n      }\n      if (values.newTags) {\n        const newTagsTemp: string[] = [];\n        if (!values.tags) {\n          values.tags = [];\n        }\n        values.newTags.forEach((item: string) => {\n          if (/^\\+?[1-9][0-9]*$/g.test(item)) {\n            values.tags.push(parseInt(item));\n          } else {\n            newTagsTemp.push(item);\n          }\n        });\n        values.newTags = newTagsTemp;\n      }\n      props.onAddMetadata({ projectId: props.projectId, status: 0, log: 0, ...values });\n      props.onClose(false);\n    });\n  };\n\n  return (\n    <Modal onOk={handleSubmit} title='新增元数据' visible={props.visible} onCancel={() => props.onClose(false)}>\n      <Form layout='horizontal' {...formItemLayout}>\n        <Form.Item label='事件code'>\n          {getFieldDecorator('code', {\n            rules: [{ required: true, message: '请输入事件code' }]\n          })(<Input placeholder='请输入事件code' />)}\n        </Form.Item>\n        <Form.Item label='事件名称'>\n          {getFieldDecorator('name', { rules: [{ required: true, message: '请输入事件名称' }] })(\n            <Input placeholder='请输入事件名称' />\n          )}\n        </Form.Item>\n        <Form.Item label='事件类型'>\n          {getFieldDecorator('type', { rules: [{ required: true, message: '请选择事件类型' }] })(\n            <Select placeholder='请选择事件类型'>\n              <Option value={EMetadataType.page}>页面</Option>\n              <Option value={EMetadataType.event}>事件</Option>\n            </Select>\n          )}\n        </Form.Item>\n        <Form.Item label='标签'>\n          {getFieldDecorator(\n            'newTags',\n            {}\n          )(\n            <Select mode='tags' placeholder='选择或添加事件标签'>\n              {props.tagList.list.map(item => (\n                <Option key={item.id} value={'' + item.id}>\n                  {item.name}\n                </Option>\n              ))}\n            </Select>\n          )}\n        </Form.Item>\n        <Form.Item label='事件备注'>\n          {getFieldDecorator('description', {})(<TextArea placeholder='请输入事件备注' />)}\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nconst mapStateToProps = (state: IStoreState) => {\n  const projectId = state.project.projectInfo.id;\n  const tagList = state.metadata.tagList;\n  return {\n    projectId,\n    tagList\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) =>\n  bindActionCreators(\n    {\n      onAddMetadata: (params: IMetadataAddParam) => {\n        return doAddMetadata.request(params);\n      }\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create<Props>()(MetadataAddModel));\n","import { Modal, Form, Input, Select } from 'antd';\nimport * as React from 'react';\nimport { formItemLayout } from '@/constants';\nimport { FormComponentProps } from 'antd/lib/form';\nimport { IMetadataUpdateParam, ITagList, IMetadataInfo, EMetadataType } from '@/api';\nimport { toastformError } from '@/utils';\nimport { connect } from 'react-redux';\nimport { IAction, IStoreState } from '@/types';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { doUpdateMetadata } from '@/store/actions';\n\ninterface Props extends FormComponentProps {\n  visible: boolean;\n  onClose: (param: boolean) => any;\n  projectId: number;\n  tagList: ITagList;\n  defaultValue: IMetadataInfo;\n  onUpdateMetadata: (param: IMetadataUpdateParam) => IAction;\n}\n\nconst MetadataEditModel = (props: Props) => {\n  const { getFieldDecorator } = props.form;\n  const { Option } = Select;\n  const { TextArea } = Input;\n  React.useEffect(() => {\n    props.form.resetFields();\n  }, [props.visible]);\n  const handleSubmit = (e: React.MouseEvent) => {\n    e.preventDefault();\n    props.form.validateFields((err, values) => {\n      console.log('values', values);\n      if (err) {\n        toastformError(err);\n        return;\n      }\n      if (values.newTags) {\n        const newTagsTemp: string[] = [];\n        if (!values.tags) {\n          values.tags = [];\n        }\n        values.newTags.forEach((item: string) => {\n          if (/^\\+?[1-9][0-9]*$/g.test(item)) {\n            values.tags.push(parseInt(item));\n          } else {\n            newTagsTemp.push(item);\n          }\n        });\n        values.newTags = newTagsTemp;\n      }\n      props.onUpdateMetadata({ ...props.defaultValue, ...values });\n      props.onClose(false);\n    });\n  };\n  return (\n    <Modal onOk={handleSubmit} title='新增元数据' visible={props.visible} onCancel={() => props.onClose(false)}>\n      <Form layout='horizontal' {...formItemLayout}>\n        <Form.Item label='事件code'>\n          {getFieldDecorator('code', {\n            initialValue: props.defaultValue.code,\n            rules: [{ required: true, message: '请输入事件code' }]\n          })(<Input placeholder='请输入事件code' />)}\n        </Form.Item>\n        <Form.Item label='事件名称'>\n          {getFieldDecorator('name', {\n            initialValue: props.defaultValue.name,\n            rules: [{ required: true, message: '请输入事件名称' }]\n          })(<Input placeholder='请输入事件名称' />)}\n        </Form.Item>\n        <Form.Item label='事件类型'>\n          {getFieldDecorator('type', {\n            initialValue: props.defaultValue.type,\n            rules: [{ required: true, message: '请选择事件类型' }]\n          })(\n            <Select placeholder='请选择事件类型'>\n              <Option value={EMetadataType.page}>页面</Option>\n              <Option value={EMetadataType.event}>事件</Option>\n            </Select>\n          )}\n        </Form.Item>\n        <Form.Item label='标签'>\n          {getFieldDecorator('newTags', {\n            initialValue: props.defaultValue.tags.map(item => '' + item.id)\n          })(\n            <Select mode='tags' placeholder='选择事件标签'>\n              {props.tagList.list.map(item => (\n                <Option key={item.id} value={'' + item.id}>\n                  {item.name}\n                </Option>\n              ))}\n            </Select>\n          )}\n        </Form.Item>\n        <Form.Item label='URL'>\n          {getFieldDecorator('url', {\n            initialValue: props.defaultValue.url\n          })(<TextArea placeholder='请输入埋点所在页面地址' />)}\n        </Form.Item>\n        <Form.Item label='事件备注'>\n          {getFieldDecorator('description', {\n            initialValue: props.defaultValue.description\n          })(<TextArea placeholder='请输入事件备注' />)}\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nconst mapStateToProps = (state: IStoreState) => {\n  const projectId = state.project.projectInfo.id;\n  const tagList = state.metadata.tagList;\n  return {\n    projectId,\n    tagList\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) =>\n  bindActionCreators(\n    {\n      onUpdateMetadata: (params: IMetadataUpdateParam) => {\n        return doUpdateMetadata.request(params);\n      }\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create<Props>()(MetadataEditModel));\n","import { Form, Input, Modal } from 'antd';\nimport * as React from 'react';\nimport { FormComponentProps } from 'antd/lib/form';\nimport { ITagAddParam } from '@/api';\nimport { toastformError } from '@/utils';\nimport { formItemLayout } from '@/constants';\nconst { TextArea } = Input;\ninterface Props extends FormComponentProps {\n  visible: boolean;\n  onSubmit: (param: ITagAddParam) => any;\n  onClose: (param: boolean) => any;\n}\n\nconst TagAddModal = (props: Props) => {\n  const { getFieldDecorator } = props.form;\n\n  const handleSubmit = () => {\n    props.form.validateFields((err, values) => {\n      if (err) {\n        toastformError(err);\n        return;\n      }\n      props.onSubmit(values);\n      props.onClose(false);\n    });\n  };\n  return (\n    <Modal title='新增标签' visible={props.visible} onOk={handleSubmit} onCancel={() => props.onClose(false)}>\n      <Form onSubmit={handleSubmit} {...formItemLayout}>\n        <Form.Item label='名称'>\n          {getFieldDecorator('name', {\n            initialValue: ''\n          })(<Input placeholder='名称' />)}\n        </Form.Item>\n        <Form.Item label='描述'>\n          {getFieldDecorator('description', {\n            initialValue: ''\n          })(<TextArea placeholder='description' />)}\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default Form.create<Props>()(TagAddModal);\n","import { Form, Input, Modal } from 'antd';\nimport * as React from 'react';\nimport { FormComponentProps } from 'antd/lib/form';\nimport { ITagUpdateParam, ITagInfo } from '@/api';\nimport { toastformError } from '@/utils';\nimport { formItemLayout } from '@/constants';\nconst { TextArea } = Input;\ninterface Props extends FormComponentProps {\n  visible: boolean;\n  onSubmit: (param: ITagUpdateParam) => any;\n  onClose: (param: boolean) => any;\n  defaultValue: ITagInfo;\n}\n\nconst TagEditModal = (props: Props) => {\n  const { getFieldDecorator } = props.form;\n\n  const handleSubmit = () => {\n    props.form.validateFields((err, values) => {\n      if (err) {\n        toastformError(err);\n        return;\n      }\n      props.onSubmit({ ...props.defaultValue, ...values });\n      props.onClose(false);\n    });\n  };\n  return (\n    <Modal title='编辑标签' visible={props.visible} onOk={handleSubmit} onCancel={() => props.onClose(false)}>\n      <Form onSubmit={handleSubmit} {...formItemLayout}>\n        <Form.Item label='名称'>\n          {getFieldDecorator('name', {\n            initialValue: props.defaultValue.name\n          })(<Input placeholder='名称' />)}\n        </Form.Item>\n        <Form.Item label='描述'>\n          {getFieldDecorator('description', {\n            initialValue: props.defaultValue.description\n          })(<TextArea placeholder='description' />)}\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default Form.create<Props>()(TagEditModal);\n","import * as React from 'react';\nimport style from './TagManagement.module.less';\nimport { connect } from 'react-redux';\nimport { IStoreState, IAction, IDeleteParam } from '@/types';\n\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { Table, Button, Modal } from 'antd';\nimport { ColumnProps } from 'antd/lib/table';\nimport TagAddModal from './TagAddModal';\nimport { doDelTag, doUpdateTag, doAddTag } from '@/store/actions';\nimport { ITagAddParam, ITagUpdateParam, ITagList, ITagInfo } from '@/api';\nimport TagEditModal from './TagEditModal';\n\nconst { confirm } = Modal;\n\ninterface Props {\n  onDelTag: (params: number) => IAction;\n  onAddTag: (params: ITagAddParam) => IAction;\n  onUpdateTag: (params: ITagUpdateParam) => IAction;\n  projectId: number;\n  tagList: ITagList;\n}\n\nconst TagManagement = (props: Props) => {\n  const [addTagVisible, setAddTagVisible] = React.useState(false);\n  const [editTagVisible, setEditTagVisible] = React.useState(false);\n  const [curTagInfo, setCurTagInfo] = React.useState<ITagInfo>({\n    id: null,\n    name: '',\n    description: '',\n    projectId: null\n  });\n  const columns: ColumnProps<any>[] = [\n    {\n      key: 'name',\n      title: '名称',\n      dataIndex: 'name'\n    },\n    {\n      key: 'description',\n      title: '描述',\n      dataIndex: 'description'\n    },\n    {\n      title: '操作',\n      key: 'action',\n      render: (text: any, record: any) => (\n        <span>\n          <Button type='link' size='small' onClick={() => handleUpdateMetadata(record)}>\n            编辑\n          </Button>\n          <Button type='link' size='small' onClick={() => handleDeleteMetadata(record.id)}>\n            删除\n          </Button>\n        </span>\n      )\n    }\n  ];\n\n  const handleUpdateMetadata = (record: ITagInfo) => {\n    setCurTagInfo(record);\n    setEditTagVisible(true);\n  };\n\n  const handleDeleteMetadata = (tagId: number) => {\n    confirm({\n      title: '提示',\n      content: '确定要删除选中的标签',\n      okText: '删除',\n      okType: 'danger',\n      cancelText: '取消',\n      onOk() {\n        props.onDelTag(tagId);\n      }\n    });\n  };\n\n  return (\n    <div className={style.wrapper}>\n      <TagAddModal\n        visible={addTagVisible}\n        onClose={setAddTagVisible}\n        onSubmit={values => props.onAddTag({ projectId: props.projectId, ...values })}\n      ></TagAddModal>\n      <TagEditModal\n        defaultValue={curTagInfo}\n        visible={editTagVisible}\n        onClose={setEditTagVisible}\n        onSubmit={props.onUpdateTag}\n      ></TagEditModal>\n      <div className={style.btnBox}>\n        <Button onClick={() => setAddTagVisible(true)}>新增标签</Button>\n      </div>\n      <Table rowKey='id' pagination={false} columns={columns} dataSource={props.tagList.list} />\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) =>\n  bindActionCreators(\n    {\n      onDelTag: (params: number) => doDelTag.request(params),\n      onAddTag: (params: ITagAddParam) => doAddTag.request(params),\n      onUpdateTag: (params: ITagUpdateParam) => doUpdateTag.request(params)\n    },\n    dispatch\n  );\n\nconst mapStateToProps = (state: IStoreState) => {\n  const projectId = state.project.projectInfo.id;\n  const tagList = state.metadata.tagList;\n  return {\n    projectId,\n    tagList\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TagManagement);\n","import { Form, Input, Button } from 'antd';\nimport * as React from 'react';\nimport { FormComponentProps } from 'antd/lib/form';\nimport { IMetadataListParam } from '@/api';\nimport { toastformError } from '@/utils';\ninterface Props extends FormComponentProps {\n  onSubmit: (param: IMetadataListParam) => any;\n  defaultValue: IMetadataListParam;\n}\n\nconst MetadataListForm = (props: Props) => {\n  const { getFieldDecorator } = props.form;\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    props.form.validateFields((err, values) => {\n      if (err) {\n        toastformError(err);\n        return;\n      }\n      props.onSubmit({ ...props.defaultValue, ...values });\n    });\n  };\n  return (\n    <Form onSubmit={handleSubmit} layout='inline'>\n      <Form.Item label=''>\n        {getFieldDecorator('name', {\n          initialValue: props.defaultValue.name\n        })(<Input placeholder='名称' />)}\n      </Form.Item>\n      <Form.Item label=''>\n        {getFieldDecorator('code', {\n          initialValue: props.defaultValue.code\n        })(<Input placeholder='Code' />)}\n      </Form.Item>\n      <Form.Item>\n        <Button htmlType='submit'>查询</Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default Form.create<Props>()(MetadataListForm);\n","import * as React from 'react';\nimport style from './MetadataList.module.less';\nimport { connect } from 'react-redux';\nimport { IStoreState, IAction, IPageData } from '@/types';\nimport {\n  doGetMetadataList,\n  doDeleteMetadata,\n  doEnableMetadata,\n  doDisableMetadata,\n  doAddMetadataByExcel\n} from '@/store/actions';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { Table, Button, Modal, Drawer, Tag, Upload, Icon, Avatar } from 'antd';\nimport { PaginationConfig, SorterResult, ColumnProps, ColumnFilterItem } from 'antd/lib/table';\nimport {\n  IMetadataListParam,\n  IMetadataInfo,\n  ITagInfo,\n  EMetadataType,\n  fetchMetadataAddByExcel,\n  IMetadataAddByExcelParam\n} from '@/api';\nimport MetadataAddModal from './components/MetadataAddModal';\nimport MetadataEditModal from './components/MetadataEditModal';\nimport TagManagement from './components/TagManagement';\nimport MetadataListForm from './components/MetadataListForm';\nimport { tagListFiltersSelector } from '@/store/selectors';\nimport { UploadChangeParam } from 'antd/lib/upload';\nimport { UploadFile } from 'antd/lib/upload/interface';\nimport config from '@/config';\nconst { confirm } = Modal;\n\ninterface Props {\n  onGetMetadataList: (params: IMetadataListParam) => IAction;\n  onDeleteMetadata: (params: number) => IAction;\n  onEnableMetadata: (params: number) => IAction;\n  onDisableMetadata: (params: number) => IAction;\n  onAddMetadataByExcel: (params: IMetadataAddByExcelParam) => IAction;\n  metadataList: IPageData<IMetadataInfo>;\n  metadataListParams: IMetadataListParam;\n  tagListFilters: ColumnFilterItem[];\n  projectId: number;\n}\n\nconst MetadataList = ({\n  metadataList,\n  onGetMetadataList,\n  onDeleteMetadata,\n  onEnableMetadata,\n  onDisableMetadata,\n  metadataListParams,\n  tagListFilters,\n  onAddMetadataByExcel,\n  projectId\n}: Props) => {\n  const [addMetadataVisible, setAddMetadataVisible] = React.useState(false);\n  const [editMetadataVisible, setEditMetadataVisible] = React.useState(false);\n  const [curMetadataInfo, setCurMetadataInfo] = React.useState<IMetadataInfo>({\n    id: null,\n    code: '',\n    name: '',\n    type: null,\n    description: '',\n    projectId: null,\n    status: null,\n    tags: [],\n    log: 0,\n    recentLog: 0\n  });\n  const [tagDrawerVisible, setTagDrawerVisible] = React.useState(false);\n\n  const columns: ColumnProps<IMetadataInfo>[] = [\n    {\n      key: 'name',\n      title: '名称',\n      dataIndex: 'name'\n    },\n    {\n      key: 'code',\n      title: 'Code',\n      dataIndex: 'code',\n      sorter: true,\n      sortDirections: ['descend', 'ascend']\n    },\n    {\n      key: 'type',\n      title: '类型',\n      dataIndex: 'type',\n      filters: [\n        {\n          text: '页面',\n          value: '' + EMetadataType.page\n        },\n        {\n          text: '事件',\n          value: '' + EMetadataType.event\n        }\n      ],\n      filterMultiple: false,\n      render: (text: number) => <span>{filterMetadataType(text)}</span>\n    },\n    {\n      key: 'status',\n      title: '启用',\n      dataIndex: 'status',\n      filters: [\n        {\n          text: '是',\n          value: '1'\n        },\n        {\n          text: '否',\n          value: '0'\n        }\n      ],\n      filterMultiple: false,\n      render: (text: number) => <span>{text === 1 ? '是' : '否'}</span>\n    },\n    {\n      key: 'log',\n      title: '产生日志',\n      dataIndex: 'log',\n      filters: [\n        {\n          text: '有',\n          value: '1'\n        },\n        {\n          text: '无',\n          value: '0'\n        }\n      ],\n      filterMultiple: false,\n      render: (text: number, record) =>\n        record.log ? (\n          <span>\n            {record.log}条(最新:{record.recentLog}条)\n          </span>\n        ) : (\n          <span>无</span>\n        )\n    },\n    {\n      key: 'tags',\n      title: '标签',\n      dataIndex: 'tags',\n      filters: tagListFilters,\n      filterMultiple: true,\n      render: (tags: ITagInfo[], record: any) => {\n        return (\n          <div>\n            {tags.map(item => (\n              <Tag color='#1890ff' key={item.id}>\n                {item.name}\n              </Tag>\n            ))}\n          </div>\n        );\n      }\n    },\n    {\n      key: 'url',\n      title: 'URL',\n      dataIndex: 'url'\n    },\n    {\n      key: 'description',\n      title: '备注',\n      dataIndex: 'description'\n    },\n    {\n      title: '操作',\n      key: 'action',\n      width: 180,\n      render: (text: any, record: any) => (\n        <span>\n          <Button type='link' size='small' onClick={() => handleUpdateMetadata(record)}>\n            编辑\n          </Button>\n          {record.status === 1 && (\n            <Button type='link' size='small' onClick={() => onDisableMetadata(record.id)}>\n              禁用\n            </Button>\n          )}\n          {record.status === 0 && (\n            <Button type='link' size='small' onClick={() => onEnableMetadata(record.id)}>\n              启用\n            </Button>\n          )}\n          <Button type='link' size='small' onClick={() => handleDeleteMetadata(record.id)}>\n            删除\n          </Button>\n        </span>\n      )\n    }\n  ];\n\n  const filterMetadataType = (type: number) => {\n    switch (type) {\n      case EMetadataType.page:\n        return '页面';\n      case EMetadataType.event:\n        return '事件';\n      default:\n        return '';\n    }\n  };\n\n  function handleChange(\n    pagination: PaginationConfig,\n    filters: Record<string | number | symbol, string[]>,\n    sorter: SorterResult<any>\n  ) {\n    const params: any = {\n      page: pagination.current,\n      pageSize: pagination.pageSize,\n      sortKey: null,\n      sortType: null,\n      tags: null,\n      type: null,\n      status: null\n    };\n    if (sorter.field) {\n      params.sortKey = sorter.field;\n      params.sortType = sorter.order;\n    }\n    if (filters.tags) {\n      params.tags = filters.tags.join(',');\n    }\n    if (filters.status) {\n      params.status = filters.status[0];\n    }\n    if (filters.type) {\n      params.type = filters.type[0];\n    }\n    if (filters.log) {\n      params.log = filters.log[0];\n    }\n\n    onGetMetadataList({ ...metadataListParams, ...params });\n  }\n\n  const handleDeleteMetadata = (metadataId: number) => {\n    confirm({\n      title: '提示',\n      content: '确定要删除选中的元数据',\n      okText: '删除',\n      okType: 'danger',\n      cancelText: '取消',\n      onOk() {\n        onDeleteMetadata(metadataId);\n      }\n    });\n  };\n\n  const handleUpdateMetadata = (record: IMetadataInfo) => {\n    setCurMetadataInfo(record);\n    setEditMetadataVisible(true);\n  };\n\n  const handleImportChange = (info: UploadChangeParam<UploadFile<any>>) => {\n    if (info.file.status === 'done') {\n      onAddMetadataByExcel({ path: info.file.response.result.path, projectId });\n    }\n  };\n\n  return (\n    <div className={style.wrapper}>\n      <MetadataAddModal visible={addMetadataVisible} onClose={setAddMetadataVisible}></MetadataAddModal>\n      <MetadataEditModal\n        defaultValue={curMetadataInfo}\n        visible={editMetadataVisible}\n        onClose={setEditMetadataVisible}\n      ></MetadataEditModal>\n      <Drawer\n        width={640}\n        title='标签管理'\n        placement='right'\n        closable={false}\n        onClose={() => setTagDrawerVisible(false)}\n        visible={tagDrawerVisible}\n      >\n        <TagManagement></TagManagement>\n      </Drawer>\n      <div className='app-card'>\n        <div className='app-fl'>\n          <MetadataListForm defaultValue={metadataListParams} onSubmit={onGetMetadataList}></MetadataListForm>\n        </div>\n        <div className='app-fr'>\n          <Upload\n            showUploadList={false}\n            style={{ display: 'inline-block' }}\n            action={config.baseURL + '/common/upload'}\n            onChange={handleImportChange}\n          >\n            <Button>\n              <Icon type='upload' /> 导入元数据\n            </Button>\n          </Upload>\n          &nbsp;\n          <Button onClick={() => setAddMetadataVisible(true)}>新增元数据</Button>\n          &nbsp;\n          <Button onClick={() => setTagDrawerVisible(true)}>标签管理</Button>\n        </div>\n      </div>\n      <div className='app-card'>\n        <Table rowKey='id' columns={columns} dataSource={metadataList.list} onChange={handleChange} />\n      </div>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) =>\n  bindActionCreators(\n    {\n      onGetMetadataList: params => {\n        return doGetMetadataList.request(params);\n      },\n      onDeleteMetadata: params => {\n        return doDeleteMetadata.request(params);\n      },\n      onEnableMetadata: params => {\n        return doEnableMetadata.request(params);\n      },\n      onDisableMetadata: params => {\n        return doDisableMetadata.request(params);\n      },\n      onAddMetadataByExcel: params => {\n        return doAddMetadataByExcel.request(params);\n      }\n    },\n    dispatch\n  );\n\nconst mapStateToProps = (state: IStoreState) => {\n  const { metadataList, metadataListParams, tagList } = state.metadata;\n  const projectId = state.project.projectInfo.id;\n  const tagListFilters = tagListFiltersSelector(state);\n  return {\n    metadataList,\n    metadataListParams,\n    tagList,\n    tagListFilters,\n    projectId\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MetadataList);\n"],"sourceRoot":""}