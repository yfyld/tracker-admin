{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","pages/project/components/ProjectInfo.tsx","pages/project/components/ProjectMemberAddModal.tsx","pages/project/components/ProjectMember.tsx","pages/project/Project.tsx"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","connect","state","project","projectInfo","projectList","dispatch","bindActionCreators","handleUpdateProject","params","doUpdateProject","request","Form","create","form","getFieldDecorator","onSubmit","e","preventDefault","validateFields","values","toastformError","id","style","maxWidth","formItemLayout","Item","label","initialValue","name","rules","required","message","btoa","associationProjects","map","item","mode","list","filter","Option","tailFormItemLayout","type","htmlType","allRoleList","role","onAddProjectMember","doAddProjectMember","props","Select","React","totalCount","userList","setuserList","fetching","setfetching","resetFields","handleSearch","visible","a","fetchUserList","page","pageSize","nickname","username","response","data","onOk","projectId","onClose","title","onCancel","layout","placeholder","notFoundContent","size","filterOption","onSearch","disabled","members","find","val","code","onDeleteProjectMember","param","doDeleteProjectMember","onUpdateProjectMember","doUpdateProjectMember","addMemberModalVisible","setaddMemberModalVisible","columns","dataIndex","render","text","record","onClick","roleCode","Modal","confirm","content","width","onChange","userIds","handleUpdateMember","warning","okText","ProjectMemberAddModal","background","dataSource","TabPane","Tabs","defaultActiveKey","tab"],"mappings":"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","file":"static/js/25.03703b3c.chunk.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import { Form, Button, Input, Select } from 'antd';\nimport * as React from 'react';\nimport { FormComponentProps } from 'antd/lib/form/Form';\nimport { formItemLayout, tailFormItemLayout } from '@/constants';\nimport { connect } from 'react-redux';\nimport { IAction, IStoreState, IPageData } from '@/types';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { doUpdateProject } from '@/store/actions';\nimport { IProjectUpdateParam, IProjectInfo, IProjectListItem } from '@/api';\nimport { toastformError } from '@/utils';\n\ninterface Props extends FormComponentProps {\n  handleUpdateProject: (params: IProjectUpdateParam) => IAction;\n  projectInfo: IProjectInfo;\n  projectList: IPageData<IProjectListItem>;\n}\n\nconst ProjectInfo = ({ form, projectInfo, handleUpdateProject, projectList }: Props) => {\n  const { getFieldDecorator } = form;\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    form.validateFields((err, values) => {\n      if (err) {\n        toastformError(err);\n        return;\n      }\n      handleUpdateProject({ id: projectInfo.id, ...values });\n    });\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} style={{ maxWidth: 500 }} {...formItemLayout}>\n      <Form.Item label='项目名称'>\n        {getFieldDecorator('name', {\n          initialValue: projectInfo.name,\n          rules: [\n            {\n              required: true,\n              message: '项目名称不能为空'\n            }\n          ]\n        })(<Input />)}\n      </Form.Item>\n      <Form.Item label='trackKey'>{btoa(`{\"projectId\":${projectInfo.id}}`)}</Form.Item>\n\n      <Form.Item label='关联项目'>\n        {getFieldDecorator('associationProjectIds', {\n          initialValue: projectInfo.associationProjects.map((item) => item.id)\n        })(\n          <Select mode='multiple'>\n            {projectList.list\n              .filter((item) => item.id !== projectInfo.id)\n              .map((item) => (\n                <Select.Option value={item.id} key={item.id}>\n                  {item.name}\n                </Select.Option>\n              ))}\n          </Select>\n        )}\n      </Form.Item>\n      <Form.Item {...tailFormItemLayout}>\n        <Button type='primary' htmlType='submit'>\n          保存\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nconst mapStateToProps = (state: IStoreState) => {\n  const { projectInfo, projectList } = state.project;\n  return {\n    projectInfo,\n    projectList\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) =>\n  bindActionCreators(\n    {\n      handleUpdateProject: (params) => {\n        return doUpdateProject.request(params);\n      }\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create<Props>()(Form.create()(ProjectInfo)));\n","import { Modal, Form, Input, Select, Button, Spin } from 'antd';\nimport * as React from 'react';\nimport { formItemLayout } from '@/constants';\nimport { FormComponentProps } from 'antd/lib/form';\n\nimport { toastformError } from '@/utils';\nimport { connect } from 'react-redux';\nimport { IAction, IStoreState } from '@/types';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { doAddProjectMember } from '@/store/actions';\nimport { IProjectMemberAddParam, IRoleList, IUserList, fetchUserList, IProjectInfo } from '@/api';\n\ninterface Props extends FormComponentProps {\n  visible: boolean;\n  onClose: (param: boolean) => any;\n  projectInfo: IProjectInfo;\n  allRoleList: IRoleList;\n\n  onAddProjectMember: (param: IProjectMemberAddParam) => IAction;\n}\n\nconst ProjectMemberAddModel = (props: Props) => {\n  const { getFieldDecorator } = props.form;\n  const { Option } = Select;\n\n  const [userList, setuserList] = React.useState<IUserList>({ list: [], totalCount: 0 });\n\n  const [fetching, setfetching] = React.useState(false);\n\n  React.useEffect(() => {\n    props.form.resetFields();\n    if (!userList.totalCount) {\n      handleSearch('');\n    }\n  }, [props.visible]);\n\n  const handleSubmit = (e: React.MouseEvent) => {\n    e.preventDefault();\n    props.form.validateFields((err, values) => {\n      if (err) {\n        toastformError(err);\n        return;\n      }\n\n      props.onAddProjectMember({ projectId: props.projectInfo.id, ...values });\n      props.onClose(false);\n    });\n  };\n\n  const handleSearch = async (value: string) => {\n    setfetching(true);\n    const response = await fetchUserList({\n      page: 1,\n      pageSize: 50,\n      nickname: value,\n      username: value\n    });\n    setuserList(response.data);\n    setfetching(false);\n  };\n\n  return (\n    <Modal onOk={handleSubmit} title='添加项目成员' visible={props.visible} onCancel={() => props.onClose(false)}>\n      <Form layout='horizontal' {...formItemLayout}>\n        <Form.Item label='添加成员'>\n          {getFieldDecorator(\n            'userIds',\n            {}\n          )(\n            <Select\n              mode='multiple'\n              placeholder='选择用户'\n              notFoundContent={fetching ? <Spin size='small' /> : null}\n              filterOption={false}\n              onSearch={handleSearch}\n            >\n              {userList.list.map((item) => (\n                <Option\n                  key={item.id}\n                  value={'' + item.id}\n                  disabled={!!props.projectInfo.members.find((val) => val.id === item.id)}\n                >\n                  {item.nickname || item.username}\n                </Option>\n              ))}\n            </Select>\n          )}\n        </Form.Item>\n\n        <Form.Item label='角色'>\n          {getFieldDecorator(\n            'roleCode',\n            {}\n          )(\n            <Select placeholder='选择角色'>\n              {props.allRoleList.list\n                .filter((item) => item.type === 1)\n                .map((item) => (\n                  <Option key={item.id} value={'' + item.code}>\n                    {item.name}\n                  </Option>\n                ))}\n            </Select>\n          )}\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nconst mapStateToProps = (state: IStoreState) => {\n  const { projectInfo } = state.project;\n\n  const { allRoleList } = state.role;\n  return {\n    projectInfo,\n\n    allRoleList\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) =>\n  bindActionCreators(\n    {\n      onAddProjectMember: (params: IProjectMemberAddParam) => {\n        return doAddProjectMember.request(params);\n      }\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create<Props>()(ProjectMemberAddModel));\n","import { Table, Button, Modal, Select } from 'antd';\nimport * as React from 'react';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { IAction, IStoreState } from '@/types';\nimport { connect } from 'react-redux';\nimport { IProjectInfo, IProjectMemberDelParam, IProjectMemberUpdateParam, IRoleList } from '@/api';\nimport ProjectMemberAddModal from './ProjectMemberAddModal';\nimport { doDeleteProjectMember, doUpdateProjectMember } from '@/store/actions';\nconst { Option } = Select;\n\ninterface Props {\n  projectInfo: IProjectInfo;\n  onDeleteProjectMember: (param: IProjectMemberDelParam) => IAction;\n  onUpdateProjectMember: (param: IProjectMemberUpdateParam) => IAction;\n  allRoleList: IRoleList;\n}\nconst ProjectMember = ({ projectInfo, onDeleteProjectMember, onUpdateProjectMember, allRoleList }: Props) => {\n  const [addMemberModalVisible, setaddMemberModalVisible] = React.useState(false);\n\n  const columns = [\n    {\n      title: '姓名',\n      dataIndex: 'nickname',\n      key: 'nickname'\n    },\n    {\n      title: '账号',\n      dataIndex: 'username',\n      key: 'username'\n    },\n    {\n      title: '角色',\n      dataIndex: 'roleName',\n      key: 'roleName'\n    },\n    {\n      title: '操作',\n      key: 'action',\n      render: (text: any, record: any) => {\n        return (\n          <span>\n            <Button size='small' onClick={() => handleUpdateMember(record.id)}>\n              编辑\n            </Button>\n            &nbsp;\n            <Button onClick={() => handleRemoveMember(record.id)} size='small'>\n              移除\n            </Button>\n          </span>\n        );\n      }\n    }\n  ];\n\n  function handleRemoveMember(id: number) {\n    Modal.warning({\n      title: '提示',\n      content: '确定移除该成员吗',\n      okText: '移除',\n      onOk: () => {\n        onDeleteProjectMember({\n          projectId: projectInfo.id,\n          userIds: [id]\n        });\n      }\n    });\n  }\n\n  function handleUpdateMember(id: number) {\n    let roleCode = '';\n    Modal.confirm({\n      title: '编辑成员',\n      content: (\n        <Select\n          style={{ width: '100%' }}\n          placeholder='选择角色'\n          value={roleCode}\n          onChange={(val: string) => {\n            roleCode = val;\n          }}\n        >\n          {allRoleList.list\n            .filter((item) => item.type === 1)\n            .map((item) => (\n              <Option key={item.id} value={'' + item.code}>\n                {item.name}\n              </Option>\n            ))}\n        </Select>\n      ),\n      onOk: () => {\n        onUpdateProjectMember({\n          projectId: projectInfo.id,\n          userIds: [id],\n          roleCode\n        });\n      }\n    });\n  }\n\n  return (\n    <div>\n      <ProjectMemberAddModal visible={addMemberModalVisible} onClose={setaddMemberModalVisible}></ProjectMemberAddModal>\n      <Button onClick={() => setaddMemberModalVisible(true)}>添加成员</Button>\n      <br />\n      <br />\n      <Table\n        style={{ background: '#fff' }}\n        columns={columns}\n        dataSource={projectInfo.members.map((item) => ({ key: item.id, ...item }))}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IStoreState) => {\n  const { projectInfo } = state.project;\n  const { allRoleList } = state.role;\n  return {\n    projectInfo,\n    allRoleList\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) =>\n  bindActionCreators(\n    {\n      onDeleteProjectMember: (param: IProjectMemberDelParam) => doDeleteProjectMember.request(param),\n      onUpdateProjectMember: (param: IProjectMemberUpdateParam) => doUpdateProjectMember.request(param)\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectMember);\n","import { Tabs, Form } from 'antd';\nimport * as React from 'react';\nimport ProjectInfo from './components/ProjectInfo';\nimport ProjectMember from './components/ProjectMember';\n\nconst TabPane = Tabs.TabPane;\n\ninterface Props {}\n\nconst Project = (props: Props) => {\n  return (\n    <div>\n      <Tabs defaultActiveKey='1'>\n        <TabPane tab='基本信息' key='1'>\n          <ProjectInfo></ProjectInfo>\n        </TabPane>\n        <TabPane tab='成员' key='2'>\n          <ProjectMember></ProjectMember>\n        </TabPane>\n        {/* <TabPane tab=\"设置\" key=\"3\">\n          Content of Tab Pane 3\n        </TabPane> */}\n      </Tabs>\n    </div>\n  );\n};\n\nexport default Form.create()(Project);\n"],"sourceRoot":""}