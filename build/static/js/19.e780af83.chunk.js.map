{"version":3,"sources":["pages/myBoard/MyBoard.module.less","pages/myBoard/components/BoardPane.module.less","pages/myBoard/components/BoardPane.tsx","pages/myBoard/components/MyBoardForm.tsx","pages/myBoard/MyBoard.tsx"],"names":["module","exports","Meta","Card","confirm","Modal","connect","dispatch","bindActionCreators","doDeleteProject","id","request","boardInfo","className","style","wrapper","to","projectId","width","cover","alt","src","noimg","actions","key","type","onClick","e","preventDefault","title","content","okText","okType","cancelText","onOk","onCancel","console","log","avatar","AvatarText","info","creator","name","description","Form","create","props","getFieldDecorator","form","onSubmit","validateFields","err","values","toastformError","defaultValue","page","pageSize","layout","formItemLayout","Item","label","initialValue","placeholder","htmlType","state","board","myBoardList","myBoardListParams","onGetMyBoardList","params","doGetMyBoardList","Option","Select","React","selectBoardType","setSelectBoardType","selectBox","onChange","value","listBox","list","map","BoardPane","current","total","totalCount"],"mappings":"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","file":"static/js/19.e780af83.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectBox\":\"MyBoard_selectBox__3JYvW\",\"listBox\":\"MyBoard_listBox__cRHcp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"BoardPane_wrapper__J1THT\"};","import noimg from '@/assets/imgs/noimg.jpg';\nimport AvatarText from '@/components/AvatarText';\nimport { Card, Icon, Popover, Modal, Input, message } from 'antd';\nimport { Link } from 'react-router-dom';\nimport React from 'react';\nimport style from './BoardPane.module.less';\nimport { IMyBoardListItem } from '@/api';\nimport { connect } from 'react-redux';\nimport { IAction } from '@/types';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { doDeleteProject } from '@/store/actions';\nconst { Meta } = Card;\nconst { confirm } = Modal;\n\ninterface Props {\n  boardInfo: IMyBoardListItem;\n  doDeleteProject: (id: number) => IAction;\n}\n\nconst ProjectPane = ({ boardInfo, doDeleteProject }: Props) => {\n  const handleDelete = () => {\n    confirm({\n      title: '警告',\n      content: '您确定要删除该面板吗?',\n      okText: '删除',\n      okType: 'danger',\n      cancelText: '取消',\n      onOk() {\n        doDeleteProject(boardInfo.id);\n      },\n      onCancel() {\n        console.log('Cancel');\n      }\n    });\n  };\n  return (\n    <Link className={style.wrapper} to={`/project/board?projectId=${boardInfo.projectId}&boardId=${boardInfo.id}`}>\n      <Card\n        style={{ width: 300 }}\n        cover={<img alt='image' src={noimg} />}\n        actions={[\n          <Icon key='eye' type='eye' />,\n          <Icon key='share-alt' type='share-alt' />,\n          <Icon\n            type='delete'\n            key='delete'\n            onClick={e => {\n              e.preventDefault();\n              handleDelete();\n            }}\n          />\n        ]}\n      >\n        <Meta\n          avatar={<AvatarText info={boardInfo.creator} />}\n          title={boardInfo.name}\n          description={boardInfo.description || '这人太懒了,没写描述'}\n        />\n      </Card>\n    </Link>\n  );\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) =>\n  bindActionCreators(\n    {\n      doDeleteProject: (id: number) => {\n        return doDeleteProject.request(id);\n      }\n    },\n    dispatch\n  );\n\nexport default connect(null, mapDispatchToProps)(ProjectPane);\n","import { Form, Input, Button } from 'antd';\nimport * as React from 'react';\nimport { formItemLayout } from '@/constants';\nimport { FormComponentProps } from 'antd/lib/form';\nimport { IMyBoardListParam } from '@/api';\nimport { toastformError } from '@/utils';\ninterface Props extends FormComponentProps {\n  onSubmit: (param: IMyBoardListParam) => any;\n  defaultValue: IMyBoardListParam;\n}\n\nconst MyBoardForm = (props: Props) => {\n  const { getFieldDecorator } = props.form;\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    props.form.validateFields((err, values) => {\n      if (err) {\n        toastformError(err);\n        return;\n      }\n      props.onSubmit({ ...props.defaultValue, ...values, page: 1, pageSize: 20 });\n    });\n  };\n  return (\n    <Form onSubmit={handleSubmit} layout='inline' {...formItemLayout}>\n      <Form.Item label='看板名称'>\n        {getFieldDecorator('name', {\n          initialValue: props.defaultValue.name\n        })(<Input placeholder='请输入项目名称' />)}\n      </Form.Item>\n      <Form.Item>\n        <Button type='primary' htmlType='submit'>\n          查询\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default Form.create<Props>()(MyBoardForm);\n","import * as React from 'react';\nimport style from './MyBoard.module.less';\nimport { connect } from 'react-redux';\nimport { IStoreState, IPageData } from '@/types';\n\nimport { Select, Pagination } from 'antd';\nimport AppHeader from '@/components/AppHeader';\nimport BoardPane from './components/BoardPane';\nimport { IMyBoardListItem, IMyBoardListParam } from '@/api';\n\nimport { IAction } from '@/types';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { doGetMyBoardList } from '@/store/actions';\n\nimport MyBoardForm from './components/MyBoardForm';\n\ninterface Props {\n  myBoardList: IPageData<IMyBoardListItem>;\n  myBoardListParams: IMyBoardListParam;\n  onGetMyBoardList: (param: IMyBoardListParam) => IAction;\n}\n\nconst MyBoard = ({ myBoardList, onGetMyBoardList, myBoardListParams }: Props) => {\n  const { Option } = Select;\n  const [selectBoardType, setSelectBoardType] = React.useState(0);\n  function handleSelectChange(value: number) {\n    setSelectBoardType(value);\n    onGetMyBoardList({ ...myBoardListParams, type: value });\n  }\n  return (\n    <div className={style.wrapper}>\n      <div className={style.selectBox}>\n        <MyBoardForm\n          defaultValue={{ ...myBoardListParams, type: selectBoardType }}\n          onSubmit={onGetMyBoardList}\n        ></MyBoardForm>\n        <Select style={{ width: 200 }} defaultValue={selectBoardType} onChange={handleSelectChange}>\n          <Option value={0}>所有看板</Option>\n          <Option value={1}>我创建的看板</Option>\n        </Select>\n      </div>\n      <div className={style.listBox}>\n        {myBoardList.list.map(board => (\n          <BoardPane key={board.id} boardInfo={board} />\n        ))}\n      </div>\n      <Pagination\n        onChange={(page, pageSize) => onGetMyBoardList({ ...myBoardListParams, page, pageSize })}\n        pageSize={myBoardListParams.pageSize}\n        current={myBoardListParams.page}\n        total={myBoardList.totalCount}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IStoreState) => {\n  const { myBoardList, myBoardListParams } = state.board;\n  return {\n    myBoardList,\n    myBoardListParams\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) =>\n  bindActionCreators(\n    {\n      onGetMyBoardList: (params: IMyBoardListParam) => {\n        return doGetMyBoardList.request(params);\n      }\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyBoard);\n"],"sourceRoot":""}