{"version":3,"sources":["pages/project/components/ProjectCode.module.less","pages/project/components/ProjectInfo.tsx","pages/project/components/ProjectMemberAddModal.tsx","pages/project/components/ProjectMember.tsx","pages/project/components/ProjectCode.tsx","pages/project/Project.tsx"],"names":["module","exports","connect","state","project","projectInfo","projectList","dispatch","bindActionCreators","handleUpdateProject","params","doUpdateProject","request","Form","create","form","getFieldDecorator","permissionCodesMap","useSelector","permission","userPermissionCodes","onSubmit","e","preventDefault","validateFields","err","values","toastformError","id","style","maxWidth","formItemLayout","Item","label","initialValue","name","rules","required","message","disabled","PERMISSION_CODE","PROJECT_UPDATE","trackKey","associationProjects","map","item","mode","list","filter","Option","value","key","tailFormItemLayout","type","htmlType","allRoleList","role","onAddProjectMember","doAddProjectMember","props","Select","React","totalCount","userList","setuserList","fetching","setfetching","resetFields","handleSearch","visible","a","fetchUserList","page","pageSize","nickname","username","response","data","onOk","projectId","onClose","title","onCancel","layout","placeholder","notFoundContent","size","filterOption","onSearch","members","find","val","code","onDeleteProjectMember","param","doDeleteProjectMember","onUpdateProjectMember","doUpdateProjectMember","addMemberModalVisible","setaddMemberModalVisible","columns","dataIndex","render","text","record","Permission","PROJECT_MEMBER_UPDATE","onClick","roleCode","Modal","confirm","content","width","onChange","userIds","handleUpdateMember","PROJECT_MEMBER_DEL","warning","okText","className","ProjectMemberAddModal","PROJECT_MEMBER_ADD","background","dataSource","scriptCode","wrapper","language","TabPane","Tabs","defaultActiveKey","tab"],"mappings":"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","file":"static/js/23.ed3dca9a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ProjectCode_wrapper__3ZQlm\"};","import { Form, Button, Input, Select } from 'antd';\nimport * as React from 'react';\nimport { FormComponentProps } from 'antd/lib/form/Form';\nimport { formItemLayout, tailFormItemLayout, PERMISSION_CODE } from '@/constants';\nimport { connect, useSelector } from 'react-redux';\nimport { IAction, IStoreState, IPageData } from '@/types';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { doUpdateProject } from '@/store/actions';\nimport { IProjectUpdateParam, IProjectInfo, IProjectListItem } from '@/api';\nimport { toastformError } from '@/utils';\n\ninterface Props extends FormComponentProps {\n  handleUpdateProject: (params: IProjectUpdateParam) => IAction;\n  projectInfo: IProjectInfo;\n  projectList: IPageData<IProjectListItem>;\n}\n\nconst ProjectInfo = ({ form, projectInfo, handleUpdateProject, projectList }: Props) => {\n  const { getFieldDecorator } = form;\n  const permissionCodesMap = useSelector<IStoreState, { [prop: string]: boolean }>(\n    (state) => state.permission.userPermissionCodes.permissionCodesMap\n  );\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    form.validateFields((err, values) => {\n      if (err) {\n        toastformError(err);\n        return;\n      }\n      handleUpdateProject({ id: projectInfo.id, ...values });\n    });\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} style={{ maxWidth: 500 }} {...formItemLayout}>\n      <Form.Item label='应用名称'>\n        {getFieldDecorator('name', {\n          initialValue: projectInfo.name,\n          rules: [\n            {\n              required: true,\n              message: '应用名称不能为空'\n            }\n          ]\n        })(<Input disabled={permissionCodesMap[PERMISSION_CODE.PROJECT_UPDATE]} />)}\n      </Form.Item>\n      <Form.Item label='trackKey'>{projectInfo.trackKey}</Form.Item>\n\n      <Form.Item label='关联应用'>\n        {getFieldDecorator('associationProjectIds', {\n          initialValue: projectInfo.associationProjects.map((item) => item.id)\n        })(\n          <Select mode='multiple' disabled={permissionCodesMap[PERMISSION_CODE.PROJECT_UPDATE]}>\n            {projectList.list\n              .filter((item) => item.id !== projectInfo.id)\n              .map((item) => (\n                <Select.Option value={item.id} key={item.id}>\n                  {item.name}\n                </Select.Option>\n              ))}\n          </Select>\n        )}\n      </Form.Item>\n      <Form.Item {...tailFormItemLayout}>\n        <Button type='primary' htmlType='submit' disabled={permissionCodesMap[PERMISSION_CODE.PROJECT_UPDATE]}>\n          保存\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nconst mapStateToProps = (state: IStoreState) => {\n  const { projectInfo, projectList } = state.project;\n  return {\n    projectInfo,\n    projectList\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) =>\n  bindActionCreators(\n    {\n      handleUpdateProject: (params) => {\n        return doUpdateProject.request(params);\n      }\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create<Props>()(Form.create()(ProjectInfo)));\n","import { Modal, Form, Input, Select, Button, Spin } from 'antd';\nimport * as React from 'react';\nimport { formItemLayout } from '@/constants';\nimport { FormComponentProps } from 'antd/lib/form';\n\nimport { toastformError } from '@/utils';\nimport { connect } from 'react-redux';\nimport { IAction, IStoreState } from '@/types';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { doAddProjectMember } from '@/store/actions';\nimport { IProjectMemberAddParam, IRoleList, IUserList, fetchUserList, IProjectInfo } from '@/api';\n\ninterface Props extends FormComponentProps {\n  visible: boolean;\n  onClose: (param: boolean) => any;\n  projectInfo: IProjectInfo;\n  allRoleList: IRoleList;\n\n  onAddProjectMember: (param: IProjectMemberAddParam) => IAction;\n}\n\nconst ProjectMemberAddModel = (props: Props) => {\n  const { getFieldDecorator } = props.form;\n  const { Option } = Select;\n\n  const [userList, setuserList] = React.useState<IUserList>({ list: [], totalCount: 0 });\n\n  const [fetching, setfetching] = React.useState(false);\n\n  React.useEffect(() => {\n    props.form.resetFields();\n    if (!userList.totalCount) {\n      handleSearch('');\n    }\n  }, [props.visible]);\n\n  const handleSubmit = (e: React.MouseEvent) => {\n    e.preventDefault();\n    props.form.validateFields((err, values) => {\n      if (err) {\n        toastformError(err);\n        return;\n      }\n\n      props.onAddProjectMember({ projectId: props.projectInfo.id, ...values });\n      props.onClose(false);\n    });\n  };\n\n  const handleSearch = async (value: string) => {\n    setfetching(true);\n    const response = await fetchUserList({\n      page: 1,\n      pageSize: 50,\n      nickname: value,\n      username: value\n    });\n    setuserList(response.data);\n    setfetching(false);\n  };\n\n  return (\n    <Modal onOk={handleSubmit} title='添加应用成员' visible={props.visible} onCancel={() => props.onClose(false)}>\n      <Form layout='horizontal' {...formItemLayout}>\n        <Form.Item label='添加成员'>\n          {getFieldDecorator(\n            'userIds',\n            {}\n          )(\n            <Select\n              mode='multiple'\n              placeholder='选择用户'\n              notFoundContent={fetching ? <Spin size='small' /> : null}\n              filterOption={false}\n              onSearch={handleSearch}\n            >\n              {userList.list.map((item) => (\n                <Option\n                  key={item.id}\n                  value={'' + item.id}\n                  disabled={!!props.projectInfo.members.find((val) => val.id === item.id)}\n                >\n                  {item.nickname || item.username}\n                </Option>\n              ))}\n            </Select>\n          )}\n        </Form.Item>\n\n        <Form.Item label='角色'>\n          {getFieldDecorator(\n            'roleCode',\n            {}\n          )(\n            <Select placeholder='选择角色'>\n              {props.allRoleList.list\n                .filter((item) => item.type === 1)\n                .map((item) => (\n                  <Option key={item.id} value={'' + item.code}>\n                    {item.name}\n                  </Option>\n                ))}\n            </Select>\n          )}\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nconst mapStateToProps = (state: IStoreState) => {\n  const { projectInfo } = state.project;\n\n  const { allRoleList } = state.role;\n  return {\n    projectInfo,\n\n    allRoleList\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) =>\n  bindActionCreators(\n    {\n      onAddProjectMember: (params: IProjectMemberAddParam) => {\n        return doAddProjectMember.request(params);\n      }\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create<Props>()(ProjectMemberAddModel));\n","import { Table, Button, Modal, Select } from 'antd';\nimport * as React from 'react';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { IAction, IStoreState } from '@/types';\nimport { connect, useSelector } from 'react-redux';\nimport { IProjectInfo, IProjectMemberDelParam, IProjectMemberUpdateParam, IRoleList } from '@/api';\nimport ProjectMemberAddModal from './ProjectMemberAddModal';\nimport { doDeleteProjectMember, doUpdateProjectMember } from '@/store/actions';\nimport Permission from '@/components/Permission';\nimport { PERMISSION_CODE } from '@/constants';\nconst { Option } = Select;\n\ninterface Props {\n  projectInfo: IProjectInfo;\n  onDeleteProjectMember: (param: IProjectMemberDelParam) => IAction;\n  onUpdateProjectMember: (param: IProjectMemberUpdateParam) => IAction;\n  allRoleList: IRoleList;\n}\nconst ProjectMember = ({ projectInfo, onDeleteProjectMember, onUpdateProjectMember, allRoleList }: Props) => {\n  const [addMemberModalVisible, setaddMemberModalVisible] = React.useState(false);\n\n  const columns = [\n    {\n      title: '姓名',\n      dataIndex: 'nickname',\n      key: 'nickname'\n    },\n    {\n      title: '账号',\n      dataIndex: 'username',\n      key: 'username'\n    },\n    {\n      title: '角色',\n      dataIndex: 'roleName',\n      key: 'roleName'\n    },\n    {\n      title: '操作',\n      key: 'action',\n      render: (text: any, record: any) => {\n        return (\n          <span>\n            <Permission code={PERMISSION_CODE.PROJECT_MEMBER_UPDATE}>\n              <Button size='small' onClick={() => handleUpdateMember(record.id)}>\n                编辑\n              </Button>\n            </Permission>\n            &nbsp;\n            <Permission code={PERMISSION_CODE.PROJECT_MEMBER_DEL}>\n              <Button onClick={() => handleRemoveMember(record.id)} size='small'>\n                移除\n              </Button>\n            </Permission>\n          </span>\n        );\n      }\n    }\n  ];\n\n  function handleRemoveMember(id: number) {\n    Modal.warning({\n      title: '提示',\n      content: '确定移除该成员吗',\n      okText: '移除',\n      onOk: () => {\n        onDeleteProjectMember({\n          projectId: projectInfo.id,\n          userIds: [id]\n        });\n      }\n    });\n  }\n\n  function handleUpdateMember(id: number) {\n    let roleCode = '';\n    Modal.confirm({\n      title: '编辑成员',\n      content: (\n        <Select\n          style={{ width: '100%' }}\n          placeholder='选择角色'\n          value={roleCode}\n          onChange={(val: string) => {\n            roleCode = val;\n          }}\n        >\n          {allRoleList.list\n            .filter((item) => item.type === 1)\n            .map((item) => (\n              <Option key={item.id} value={'' + item.code}>\n                {item.name}\n              </Option>\n            ))}\n        </Select>\n      ),\n      onOk: () => {\n        onUpdateProjectMember({\n          projectId: projectInfo.id,\n          userIds: [id],\n          roleCode\n        });\n      }\n    });\n  }\n\n  return (\n    <div className='app-tablePage-wrapper'>\n      <ProjectMemberAddModal visible={addMemberModalVisible} onClose={setaddMemberModalVisible}></ProjectMemberAddModal>\n\n      <div className='app-tablePage-title'>成员列表</div>\n      <div className='app-tablePage-form'>\n        <div>\n          <Permission code={PERMISSION_CODE.PROJECT_MEMBER_ADD}>\n            <Button size='large' onClick={() => setaddMemberModalVisible(true)}>\n              添加成员\n            </Button>\n          </Permission>\n        </div>\n      </div>\n\n      <div className='app-tablePage-table'>\n        <Table\n          style={{ background: '#fff' }}\n          columns={columns}\n          dataSource={projectInfo.members.map((item) => ({ key: item.id, ...item }))}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IStoreState) => {\n  const { projectInfo } = state.project;\n  const { allRoleList } = state.role;\n  return {\n    projectInfo,\n    allRoleList\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) =>\n  bindActionCreators(\n    {\n      onDeleteProjectMember: (param: IProjectMemberDelParam) => doDeleteProjectMember.request(param),\n      onUpdateProjectMember: (param: IProjectMemberUpdateParam) => doUpdateProjectMember.request(param)\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectMember);\n","import * as React from 'react';\nimport { IProjectInfo } from '@/api';\nimport { connect } from 'react-redux';\nimport { IStoreState } from '@/types';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport style from './ProjectCode.module.less';\ninterface Props {\n  projectInfo: IProjectInfo;\n}\n\nconst ProjectCode = ({ projectInfo }: Props) => {\n  const scriptCode = `<script\n  src='//static.91jkys.com/f2e/telescope-sdk/telescope.min.js'\n  trackKey='${projectInfo.trackKey}'\n  crossorigin='anonymous'\n></script>`;\n\n  return (\n    <div className={style.wrapper}>\n      <h2>H5 引入SDK</h2>\n      <div>\n        <h3>Script 标签引入</h3>\n        <SyntaxHighlighter language='html'>{scriptCode}</SyntaxHighlighter>\n      </div>\n\n      <div>\n        <h3>npm 包</h3>\n        <SyntaxHighlighter language='javascript'>{`npm i @zyf2e/telescope -S`}</SyntaxHighlighter>\n        <SyntaxHighlighter language='javascript'>{`import * as Telescope from '@zyf2e/telescope';\nTelescope.setConfig({ trackKey: '${projectInfo.trackKey}', version: '1.0.0' });`}</SyntaxHighlighter>\n      </div>\n\n      <br />\n      <br />\n      <br />\n\n      <h2>Flutter 引入SDK</h2>\n      <div>待补充</div>\n\n      <br />\n      <br />\n      <br />\n\n      <h2>H5埋点技巧</h2>\n      <div>\n        <h3>页面跳转,埋点发送失败?</h3>\n        <div>\n          <p>\n            1.针对a标签使用html属性data-track或者指令v-track-event时,sdk默认延迟a标签跳转300ms(可以通过配置项delayLinkTime调整或取消)\n          </p>\n          <p>2.在存在跳转的方法里埋点,可以通过指令@tracker(before())埋点</p>\n          <SyntaxHighlighter language='javascript'>{`jumpToBaidu(){\n  Telescope.trackEvent({trackId:\"zyyh-click-baidu\"}); //0分 页面跳走,容易导致埋点发送失败\n  location.href='http://www.baidu.com'\n}`}</SyntaxHighlighter>\n          <SyntaxHighlighter language='javascript'>{`jumpToBaidu(){\n  Telescope.trackEvent({trackId:\"zyyh-click-baidu\"}); //60分 修改业务代码 延迟发送\n  setTimeout(() => {\n    location.href='http://www.baidu.com'\n  }, 300);\n}`}</SyntaxHighlighter>\n          <SyntaxHighlighter language='javascript'>{`@tracker(before('zyyh-click-baidu')) //100分 通过装饰器处理\njumpToBaidu(){\n  location.href='http://www.baidu.com'\n}`}</SyntaxHighlighter>\n        </div>\n\n        <h3>埋点日志需要上传自定义参数?</h3>\n        <div>\n          <p>自定义字段挂custom字段下,如果时JSON会序列化成字符串,统计分析当字符串处理</p>\n          <SyntaxHighlighter language='javascript'>{`Telescope.trackEvent({trackId:\"zyyh-click-submit\",custom:{role:\"admin\"}})\n}`}</SyntaxHighlighter>\n        </div>\n\n        <h3>处理日志</h3>\n        <div>\n          <p>如:给所有日志加上自定义字段 custom:'admin'</p>\n          <SyntaxHighlighter language='javascript'>\n            {`Telescope.setConfig({beforeGenerateLog:(log)=>({...log,custom:'admin'})})})`}\n          </SyntaxHighlighter>\n        </div>\n      </div>\n\n      <br />\n      <br />\n      <br />\n\n      <h2>H5 SDK 使用文档</h2>\n      <div>\n        <h3>设置</h3>\n        <SyntaxHighlighter language='javascript'>{`Telescope.setConfig({ autoTrackClick: false, trackKey: \"${projectInfo.trackKey}\", version: '1.0.0' });`}</SyntaxHighlighter>\n        <h4>配置项</h4>\n\n        <SyntaxHighlighter language='javascript'>{`{\n  trackKey: '', //应用key\n  serverUrl: //日志收集接口,\n  pageTime: true, //是否记录页面停留时间\n  watchHistoryAndHash: true, //单页面应用监听url变化\n  version: null, //应用版本\n  sendType: SEND_TYPE.ASYNC, //发送日志方式 (同步发,异步延迟发,关闭浏览器前发送)\n  delayTime: 1000, //延迟发送的时间\n  autoTrackPage: false, //自动埋点页面\n  autoTrackClick: false, //自动埋点a,button,input\n  autoInstall: true, //自动开始埋点监控\n  delayLink: true, //a标签跳转延迟\n  delayLinkTime: 200,\n  useServerTime: true, //使用服务器时间\n  corssSubdomain: false, //false 域名不同认作为两个用户\n  utokenKey: \"TRYCATCH_TOKEN\",\n  beforeGenerateLog:(log)=>(log) //生成日志前hook function\n};`}</SyntaxHighlighter>\n      </div>\n\n      <div>\n        <h3>记录登录信息</h3>\n        <SyntaxHighlighter language='javascript'>{`Telescope.login({ uid: 123 });//记录登录状态 uid可选\nTelescope.logout();//移出登录状态`}</SyntaxHighlighter>\n      </div>\n\n      <div>\n        <h3>收集埋点信息方法</h3>\n\n        <div>\n          <h4>无痕埋点</h4>\n          <SyntaxHighlighter language='javascript'>{`Telescope.setConfig({ autoTrackPage:true,//路由发生变化时,自动埋点\nautoTrackClick:true//button,a,img,input标签发送点击事件,自动埋点\n})`}</SyntaxHighlighter>\n        </div>\n        <div>\n          <h4>调用方法发送埋点</h4>\n          <SyntaxHighlighter language='javascript'>{`Telescope.trackPage({trackId: \"zyyh-page-pay\"});\nTelescope.trackEvent({trackId:\"zyyh-click-submit\"})`}</SyntaxHighlighter>\n        </div>\n        <div>\n          <h4>注册DOM属性,发生点击后触发埋点</h4>\n          <SyntaxHighlighter language='html'>{`<button data-track=\"zyyh-click-submit\">提交</button>`}</SyntaxHighlighter>\n        </div>\n\n        <div>\n          <h4>VUE应用,使用指令埋点</h4>\n\n          <SyntaxHighlighter language='javascript'>{`//注册指令\nVue.directive('track-event', Telescope.vTrackEvent);\n// Vue.directive('track-view', Telescope.vTrackView);\nVue.directive('track-page', Telescope.vTrackPage);`}</SyntaxHighlighter>\n\n          <SyntaxHighlighter language='html'>{`<div class=\"content\">\n  <div v-if=\"status\" v-track-page=\"'zyyh-page-one'\">\n    页面一\n    <input v-track-event.blur=\"'zyyh-event-member-detail-conversion'\"/>\n    <button v-track-event.click=\"'zyyh-event-member-detail-conversion'\">\n      使用兑换码\n    </button>\n    <button v-track-event=\"'zyyh-event-member-detail-conversion'\">\n      使用兑换码\n    </button>\n   <button v-track-event=\"{trackId:'zyyh-event-member-detail-conversion'}\">\n      使用兑换码\n    </button>\n  </div>\n  <div v-else  v-track-page=\"'zyyh-page-two'\">\n   页面二\n  </div>\n</div`}</SyntaxHighlighter>\n        </div>\n      </div>\n\n      <div>\n        <h4>装饰器埋点</h4>\n        <SyntaxHighlighter language='javascript'>{`import {tracker,before,after} from '@zyf2e/telescope';\n//trackId\n@tracker(\"zyyh-event-submit\")\nhandleSubmit(){\n\n}\n\n//after\n@tracker(after(){\n  return 'zyyh-event-submit-success'\n})\nhandleSubmit(){\n  return new Promise()\n}\n\n//after\n@tracker(after('zyyh-event-submit-success'))\nhandleSubmit(){\n  return new Promise()\n}\n\n//before\n@tracker(before(){\n   return 'zyyh-event-submit-success'\n })\nhandleSubmit(){\n  \n}\n\n//before\n@tracker(before(\"zyyh-event-submit-success\"))\nhandleSubmit(){\n  \n}\n\n//obj\n@tracker({\n  actionType:'PAGE'\n  trackId:'zyyh-page-pay-success'\n})\nhandleSubmit(){\n\n}\n\n//function\n@tracker(function(){\n  return 'zyyh-event-submit-success'\n})\nhandleSubmit(){\n\n}`}</SyntaxHighlighter>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IStoreState) => {\n  const { projectInfo } = state.project;\n  return {\n    projectInfo\n  };\n};\n\nexport default connect(mapStateToProps, null)(ProjectCode);\n","import { Tabs, Form } from 'antd';\nimport * as React from 'react';\nimport ProjectInfo from './components/ProjectInfo';\nimport ProjectMember from './components/ProjectMember';\nimport ProjectCode from './components/ProjectCode';\n\nconst TabPane = Tabs.TabPane;\n\ninterface Props {}\n\nconst Project = (props: Props) => {\n  return (\n    <div>\n      <Tabs defaultActiveKey='1'>\n        <TabPane tab='基本信息' key='1'>\n          <ProjectInfo></ProjectInfo>\n        </TabPane>\n        <TabPane tab='成员' key='2'>\n          <ProjectMember></ProjectMember>\n        </TabPane>\n        <TabPane tab='SDK' key='3'>\n          <ProjectCode></ProjectCode>\n        </TabPane>\n        {/* <TabPane tab=\"设置\" key=\"3\">\n          Content of Tab Pane 3\n        </TabPane> */}\n      </Tabs>\n    </div>\n  );\n};\n\nexport default Form.create()(Project);\n"],"sourceRoot":""}