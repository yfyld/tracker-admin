{"version":3,"sources":["pages/admin/PermissionManage.module.less","pages/admin/components/PermissionAddModal.tsx","pages/admin/components/PermissionEditModal.tsx","pages/admin/PermissionManage.tsx"],"names":["module","exports","Option","Select","connect","state","permission","addPermissionItem","updatePermissionItem","dispatch","bindActionCreators","onAddPermission","params","doPostPermission","request","Form","create","props","getFieldDecorator","form","React","resetFields","visible","onOk","e","preventDefault","validateFields","err","values","a","toastformError","name","trimAll","code","toLocaleUpperCase","onClose","title","onCancel","layout","formItemLayout","Item","label","rules","required","message","initialValue","placeholder","type","permissionTypeDescription","map","des","index","key","value","description","style","minHeight","rows","onPutPermission","doPutPermission","disabled","permissionList","permissionListParams","onGetPermissionList","doGetPermission","onDeletePermission","doDeletePermission","onEditPermission","doEditPermission","useState","addPermissionVisible","setAddPermissionVisible","editPermissionVisible","setEditPermissionVisible","columns","dataIndex","render","text","record","width","size","onClick","onConfirm","id","className","wrapper","gutter","span","submitButtons","rightBtn","table","rowKey","dataSource","list","pagination","pageSize","total","totalCount","current","page","onChange","getFieldsValue"],"mappings":"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","file":"static/js/21.f86a70b1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PermissionManage_wrapper__3MkcM\",\"header\":\"PermissionManage_header__2G2z8\",\"listBox\":\"PermissionManage_listBox__2cv6O\",\"table\":\"PermissionManage_table__34_2s\",\"submitButtons\":\"PermissionManage_submitButtons__1Ecc_\",\"rightBtn\":\"PermissionManage_rightBtn__1tDVE\"};","import { Modal, Form, Input, Select } from 'antd';\nimport * as React from 'react';\nimport { formItemLayout, permissionTypeDescription } from '@/constants';\nimport { FormComponentProps } from 'antd/lib/form';\nimport { IBasePermission, IUpdatePermission } from '@/api';\nimport { toastformError, trimAll } from '@/utils';\nimport { connect } from 'react-redux';\nimport { IAction, IStoreState } from '@/types';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { doPostPermission } from '@/store/actions';\nimport TextArea from 'antd/lib/input/TextArea';\n\nconst { Option } = Select;\n\ninterface Props extends FormComponentProps {\n  visible: boolean;\n  onClose: (param: boolean) => any;\n  onAddPermission: (param: IBasePermission) => IAction;\n  addPermissionItem: IBasePermission;\n  updatePermissionItem: IUpdatePermission;\n}\n\nconst PermissionAddModal = (props: Props) => {\n  const { getFieldDecorator } = props.form;\n\n  React.useEffect(() => {\n    props.form.resetFields();\n  }, [props.visible]);\n\n  const handleSubmit = (e: React.MouseEvent) => {\n    e.preventDefault();\n    props.form.validateFields(async (err, values) => {\n      if (err) {\n        toastformError(err);\n        return;\n      }\n      // 格式化处理\n      values.name = trimAll(values.name);\n      values.code = trimAll(values.code.toLocaleUpperCase());\n      props.onAddPermission(values);\n      props.onClose(false);\n    });\n  };\n\n  return (\n    <Modal onOk={handleSubmit} title='新建权限' visible={props.visible} onCancel={() => props.onClose(false)}>\n      <Form layout='horizontal' {...formItemLayout}>\n        <Form.Item label='权限名'>\n          {getFieldDecorator('name', {\n            rules: [{ required: true, message: '请输入权限名' }],\n            initialValue: props.addPermissionItem.name\n          })(<Input placeholder='请输入权限名' />)}\n        </Form.Item>\n\n        <Form.Item label='权限码'>\n          {getFieldDecorator('code', {\n            rules: [{ required: true, message: '请输入权限码' }],\n            initialValue: props.addPermissionItem.code\n          })(<Input placeholder='请输入权限码' />)}\n        </Form.Item>\n        <Form.Item label='权限类型'>\n          {getFieldDecorator('type', {\n            rules: [{ required: true, message: '权限类型' }],\n            initialValue: props.addPermissionItem.type\n          })(\n            <Select placeholder='请选择'>\n              {permissionTypeDescription.map((des, index) => {\n                if (index === 0) return null;\n                return (\n                  <Option key={des} value={index}>\n                    {des}\n                  </Option>\n                );\n              })}\n            </Select>\n          )}\n        </Form.Item>\n        <Form.Item {...formItemLayout} label='权限描述'>\n          {getFieldDecorator('description', {\n            initialValue: props.addPermissionItem.description\n          })(<TextArea style={{ minHeight: 32 }} placeholder='请输入权限描述' rows={4} />)}\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nconst mapStateToProps = (state: IStoreState) => {\n  const { addPermissionItem, updatePermissionItem } = state.permission;\n  return {\n    addPermissionItem,\n    updatePermissionItem\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) =>\n  bindActionCreators(\n    {\n      onAddPermission: (params: IBasePermission) => {\n        return doPostPermission.request(params);\n      }\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create<Props>()(PermissionAddModal));\n","import { Modal, Form, Input, Select } from 'antd';\nimport * as React from 'react';\nimport { formItemLayout, permissionTypeDescription } from '@/constants';\nimport { FormComponentProps } from 'antd/lib/form';\nimport { IBasePermission, IUpdatePermission } from '@/api';\nimport { toastformError, trimAll } from '@/utils';\nimport { connect } from 'react-redux';\nimport { IAction, IStoreState } from '@/types';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { doPostPermission, doPutPermission } from '@/store/actions';\nimport TextArea from 'antd/lib/input/TextArea';\n\nconst { Option } = Select;\n\ninterface Props extends FormComponentProps {\n  visible: boolean;\n  onClose: (param: boolean) => any;\n  onPutPermission: (param: IUpdatePermission) => IAction;\n  updatePermissionItem: IUpdatePermission;\n}\n\nconst PermissionEditModal = (props: Props) => {\n  const { getFieldDecorator } = props.form;\n\n  React.useEffect(() => {\n    props.form.resetFields();\n  }, [props.visible]);\n\n  const handleSubmit = (e: React.MouseEvent) => {\n    e.preventDefault();\n    props.form.validateFields(async (err, values) => {\n      if (err) {\n        toastformError(err);\n        return;\n      }\n      props.onPutPermission({\n        ...props.updatePermissionItem,\n        ...values\n      });\n      props.onClose(false);\n    });\n  };\n\n  return (\n    <Modal onOk={handleSubmit} title='新建权限' visible={props.visible} onCancel={() => props.onClose(false)}>\n      <Form layout='horizontal' {...formItemLayout}>\n        <Form.Item label='权限名'>\n          {getFieldDecorator('name', {\n            rules: [{ required: true, message: '请输入权限名' }],\n            initialValue: props.updatePermissionItem.name\n          })(<Input placeholder='请输入权限名' />)}\n        </Form.Item>\n\n        <Form.Item label='权限码'>\n          {getFieldDecorator('code', {\n            rules: [{ required: true, message: '请输入权限码' }],\n            initialValue: props.updatePermissionItem.code\n          })(<Input placeholder='请输入权限码' disabled={true} />)}\n        </Form.Item>\n        <Form.Item label='权限类型'>\n          {getFieldDecorator('type', {\n            rules: [{ required: true, message: '权限类型' }],\n            initialValue: props.updatePermissionItem.type\n          })(\n            <Select placeholder='请选择' disabled={true}>\n              {permissionTypeDescription.map((des, index) => {\n                if (index === 0) return null;\n                return (\n                  <Option key={des} value={index}>\n                    {des}\n                  </Option>\n                );\n              })}\n            </Select>\n          )}\n        </Form.Item>\n        <Form.Item {...formItemLayout} label='权限描述'>\n          {getFieldDecorator('description', {\n            initialValue: props.updatePermissionItem.description\n          })(<TextArea style={{ minHeight: 32 }} placeholder='请输入权限描述' rows={4} />)}\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nconst mapStateToProps = (state: IStoreState) => {\n  const { updatePermissionItem } = state.permission;\n  return {\n    updatePermissionItem\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) =>\n  bindActionCreators(\n    {\n      onPutPermission: (params: IUpdatePermission) => {\n        return doPutPermission.request(params);\n      }\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create<Props>()(PermissionEditModal));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { IAction, IPageData, IStoreState } from '@/types';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { IBasePermission, IPermissionListItem, IQueryPermission, IUpdatePermission } from '@/api';\nimport { doDeletePermission, doEditPermission, doGetPermission } from '@/store/actions';\nimport { ColumnProps, PaginationConfig } from 'antd/lib/table';\nimport { Link } from 'react-router-dom';\nimport { ROUTE_PATH, permissionTypeDescription, formItemLayout } from '@/constants';\nimport { Button, Table, Popconfirm, notification, Row, Col, Input, Form, Card } from 'antd';\nimport PermissionAddModal from '@/pages/admin/components/PermissionAddModal';\nimport style from '@/pages/admin/PermissionManage.module.less';\nimport PermissionEditModal from './components/PermissionEditModal';\nimport { toastformError, trimAll } from '@/utils';\nimport { FormComponentProps } from 'antd/lib/form';\n\ninterface Props extends FormComponentProps {\n  addPermissionItem: IBasePermission;\n  updatePermissionItem: IUpdatePermission;\n  permissionList: IPageData<IPermissionListItem>;\n  permissionListParams: IQueryPermission;\n  onGetPermissionList: (params: IQueryPermission) => IAction;\n  onDeletePermission: (params: number) => IAction;\n  onEditPermission: (params: IUpdatePermission) => IAction;\n}\n\nconst PermissionManage = (props: Props) => {\n  const { getFieldDecorator } = props.form;\n  const [addPermissionVisible, setAddPermissionVisible] = React.useState(false);\n  const [editPermissionVisible, setEditPermissionVisible] = React.useState(false);\n\n  const columns: ColumnProps<IPermissionListItem>[] = [\n    {\n      key: 'name',\n      title: '权限名',\n      dataIndex: 'name'\n    },\n    {\n      key: 'code',\n      title: '权限码',\n      dataIndex: 'code'\n    },\n    {\n      key: 'type',\n      title: '权限类型',\n      render: (text, record) => <span>{permissionTypeDescription[record.type]}</span>\n    },\n    {\n      key: 'description',\n      title: '描述',\n      dataIndex: 'description'\n    },\n    {\n      key: 'action',\n      title: '操作',\n      width: 280,\n      render: (text, record) => (\n        <span>\n          <Button\n            type='link'\n            size='small'\n            onClick={() => {\n              props.onEditPermission(record);\n              setEditPermissionVisible(true);\n            }}\n          >\n            编辑\n          </Button>\n          <Popconfirm title='是否要删除此行？' onConfirm={() => props.onDeletePermission(record.id)}>\n            <Button type='link' size='small'>\n              删除\n            </Button>\n          </Popconfirm>\n        </span>\n      )\n    }\n  ];\n\n  const handleTableChange = (pagination: PaginationConfig) => {\n    props.onGetPermissionList({\n      ...props.form.getFieldsValue(),\n      page: pagination.current,\n      pageSize: pagination.pageSize\n    });\n  };\n  const handleFilter = (e: React.MouseEvent) => {\n    e.preventDefault();\n    props.form.validateFields((err, values) => {\n      if (err) {\n        toastformError(err);\n        return;\n      }\n      values.name = trimAll(values.name);\n      props.onGetPermissionList(values);\n    });\n  };\n\n  return (\n    <div className={style.wrapper}>\n      <Row gutter={24}>\n        <Col>\n          <Row>\n            <Form layout='horizontal' {...formItemLayout}>\n              <Col span={6}>\n                <Form.Item label='权限名/码'>\n                  {getFieldDecorator('name', {\n                    initialValue: props.permissionListParams.name\n                  })(<Input placeholder='请输入权限名/权限码' />)}\n                </Form.Item>\n              </Col>\n            </Form>\n            <Col span={4}>\n              <span className={style.submitButtons}>\n                <Button type='primary' onClick={handleFilter}>\n                  查询\n                </Button>\n              </span>\n            </Col>\n            <Col span={14}>\n              <PermissionAddModal visible={addPermissionVisible} onClose={setAddPermissionVisible}></PermissionAddModal>\n              <PermissionEditModal\n                visible={editPermissionVisible}\n                onClose={setEditPermissionVisible}\n              ></PermissionEditModal>\n              <div className={style.rightBtn}>\n                <Button type='primary' onClick={() => setAddPermissionVisible(true)}>\n                  新建权限\n                </Button>\n              </div>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n\n      <div className={style.table}>\n        <Table\n          rowKey='id'\n          columns={columns}\n          dataSource={props.permissionList.list}\n          pagination={{\n            pageSize: props.permissionListParams.pageSize,\n            total: props.permissionList.totalCount,\n            current: props.permissionListParams.page\n          }}\n          onChange={handleTableChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IStoreState) => {\n  const { addPermissionItem, updatePermissionItem, permissionList, permissionListParams } = state.permission;\n  return {\n    addPermissionItem,\n    updatePermissionItem,\n    permissionList,\n    permissionListParams\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) =>\n  bindActionCreators(\n    {\n      onGetPermissionList: (params: IQueryPermission) => {\n        return doGetPermission.request(params);\n      },\n      onDeletePermission: (params: number) => {\n        return doDeletePermission.request(params);\n      },\n      onEditPermission: (params: IUpdatePermission) => {\n        return doEditPermission(params);\n      }\n    },\n    dispatch\n  );\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create<Props>()(PermissionManage));\n"],"sourceRoot":""}