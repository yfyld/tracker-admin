{"version":3,"sources":["components/AvatarText.tsx","components/AvatarText.module.less","pages/team/TeamList.module.less","pages/team/components/TeamAddModal.tsx","pages/team/components/TeamUpdateModal.tsx","pages/team/components/TeamListForm.tsx","pages/team/TeamList.tsx"],"names":["AvatarText","info","size","color","name","nickname","username","content","placement","style","background","className","wrapper","test","substr","module","exports","Option","Select","Form","create","props","getFieldDecorator","form","React","resetFields","visible","userList","list","length","onSearchUser","page","pageSize","handleSearch","debounce","value","onOk","e","preventDefault","validateFields","err","values","toastformError","onSubmit","onClose","title","onCancel","layout","formItemLayout","Item","label","rules","required","message","placeholder","initialValue","Group","mode","onSearch","filterOption","notFoundContent","map","item","key","id","orginInfo","creator","showSearch","public","description","members","setFields","handleSubmit","defaultValue","relevance","onChange","setTimeout","width","connect","state","team","teamList","teamListLoading","teamListParam","app","userInfo","dispatch","bindActionCreators","onGetTeamList","params","doGetTeamList","request","onGetUserList","param","doGetUserList","onAddTeam","doAddTeam","onDeleteTeam","doDeleteTeam","onUpdateTeam","doUpdateTeam","addTeamVisible","setaddTeamVisible","updateTeamVisible","setupdateTeamVisible","selectedTeam","setselectedTeam","TeamAddModal","TeamUpdateModal","header","type","onClick","itemList","itemLayout","dataSource","renderItem","actions","onConfirm","okText","cancelText","Meta","avatar","to","ROUTE_PATH","teamInfo","memberBox","member"],"mappings":"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","file":"static/js/14.00a4577c.chunk.js","sourcesContent":["import * as React from 'react';\nimport style from './AvatarText.module.less';\nimport { Popover } from 'antd';\n\ninterface Props {\n  size?: string;\n  color?: string;\n  info: {\n    nickname: string;\n    username: string;\n  };\n}\n\nconst AvatarText = ({ info, size = '', color = null }: Props) => {\n  const name = info.nickname || info.username || '无名';\n  const content = (\n    <div>\n      <p>{info.nickname || '匿名'}</p>\n      <p>{info.username}</p>\n    </div>\n  );\n  return (\n    <Popover placement='bottom' content={content}>\n      <div style={{ background: color }} className={style.wrapper + ' ' + style[size]}>\n        {/^\\w*$/.test(name) ? name.substr(0, 4) : name.substr(-2)}\n      </div>\n    </Popover>\n  );\n};\nexport default AvatarText;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AvatarText_wrapper__G4Kdz\",\"mini\":\"AvatarText_mini__NgFQ1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"memberBox\":\"TeamList_memberBox__O9kij\",\"itemList\":\"TeamList_itemList__bn9js\",\"header\":\"TeamList_header__1jLUP\"};","import { Modal, Form, Input, Select, Radio, Spin } from 'antd';\nimport * as React from 'react';\nimport { formItemLayout } from '@/constants';\nimport { FormComponentProps } from 'antd/lib/form';\nimport { IUserListParam, IUserList, ITeamAddParam } from '@/api';\nimport { toastformError } from '@/utils';\n\nimport { IAction } from '@/types';\n\nimport debounce from 'lodash/debounce';\n\nconst { Option } = Select;\ninterface Props extends FormComponentProps {\n  visible: boolean;\n  onClose: (param: boolean) => void;\n  userList: IUserList;\n  onSearchUser: (param: IUserListParam) => IAction;\n  onSubmit: (param: ITeamAddParam) => IAction;\n}\n\nconst TeamAddModel = (props: Props) => {\n  const { getFieldDecorator } = props.form;\n  React.useEffect(() => {\n    props.form.resetFields();\n    //第一次\n    if (props.visible && !props.userList.list.length) {\n      props.onSearchUser({ page: 1, pageSize: 50 });\n    }\n  }, [props.visible]);\n  const handleSubmit = (e: React.MouseEvent) => {\n    e.preventDefault();\n    props.form.validateFields((err, values) => {\n      if (err) {\n        toastformError(err);\n        return;\n      }\n      props.onSubmit(values);\n      props.onClose(false);\n    });\n  };\n\n  const handleSearch = debounce((value: string) => {\n    props.onSearchUser({ nickname: value, page: 1, pageSize: 50 });\n  }, 800);\n  return (\n    <Modal onOk={handleSubmit} title='新增团队' visible={props.visible} onCancel={() => props.onClose(false)}>\n      <Form layout='horizontal' {...formItemLayout}>\n        <Form.Item label='团队名称'>\n          {getFieldDecorator('name', {\n            rules: [{ required: true, message: '请输入团队名称' }]\n          })(<Input placeholder='请输入团队名称' />)}\n        </Form.Item>\n\n        <Form.Item label='公开'>\n          {getFieldDecorator('public', {\n            initialValue: true\n          })(\n            <Radio.Group>\n              <Radio value={true}>公开</Radio>\n              <Radio value={false}>私有</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label='团队描述'>\n          {getFieldDecorator('description', {})(<Input placeholder='请输入团队描述' />)}\n        </Form.Item>\n        <Form.Item label='成员'>\n          {getFieldDecorator(\n            'members',\n            {}\n          )(\n            <Select\n              mode='multiple'\n              onSearch={handleSearch}\n              filterOption={false}\n              notFoundContent={null}\n              placeholder='请选择成员'\n            >\n              {props.userList.list.map(item => (\n                <Option key={item.id} value={item.id}>\n                  {item.nickname || item.username}\n                </Option>\n              ))}\n            </Select>\n          )}\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default Form.create<Props>()(TeamAddModel);\n","import { Modal, Form, Input, Select, Radio, Spin } from 'antd';\nimport * as React from 'react';\nimport { formItemLayout } from '@/constants';\nimport { FormComponentProps } from 'antd/lib/form';\nimport { IUserListParam, IUserList, ITeamAddParam, ITeamInfo, ITeamUpdateParam } from '@/api';\nimport { toastformError } from '@/utils';\n\nimport { IAction } from '@/types';\n\nimport debounce from 'lodash/debounce';\n\nconst { Option } = Select;\ninterface Props extends FormComponentProps {\n  visible: boolean;\n  onClose: (param: boolean) => void;\n  userList: IUserList;\n  orginInfo: ITeamInfo;\n  onSearchUser: (param: IUserListParam) => IAction;\n  onSubmit: (param: ITeamUpdateParam) => IAction;\n}\n\nconst TeamUpdateModel = (props: Props) => {\n  const { getFieldDecorator, resetFields, validateFields } = props.form;\n  React.useEffect(() => {\n    resetFields();\n    //第一次\n    if (props.visible && !props.userList.list.length) {\n      props.onSearchUser({ page: 1, pageSize: 50 });\n    }\n  }, [props.visible]);\n  const handleSubmit = (e: React.MouseEvent) => {\n    e.preventDefault();\n    validateFields((err, values) => {\n      if (err) {\n        toastformError(err);\n        return;\n      }\n      props.onSubmit({ id: props.orginInfo.id, ...values });\n      props.onClose(false);\n    });\n  };\n\n  const handleSearch = debounce((value: string) => {\n    props.onSearchUser({ nickname: value, page: 1, pageSize: 50 });\n  }, 800);\n\n  return (\n    <Modal onOk={handleSubmit} title='编辑团队' visible={props.visible} onCancel={() => props.onClose(false)}>\n      <Form layout='horizontal' {...formItemLayout}>\n        <Form.Item label='团队Owner'>\n          {getFieldDecorator('creatorId', {\n            initialValue: props.orginInfo.creator.id\n          })(\n            <Select\n              showSearch\n              onSearch={handleSearch}\n              filterOption={false}\n              notFoundContent={null}\n              placeholder='请选择团队owner'\n            >\n              {props.userList.list.map(item => (\n                <Option key={item.id} value={item.id}>\n                  {item.nickname || item.username}\n                </Option>\n              ))}\n            </Select>\n          )}\n        </Form.Item>\n\n        <Form.Item label='团队名称'>\n          {getFieldDecorator('name', {\n            initialValue: props.orginInfo.name,\n            rules: [{ required: true, message: '请输入团队名称' }]\n          })(<Input placeholder='请输入团队名称' />)}\n        </Form.Item>\n\n        <Form.Item label='公开'>\n          {getFieldDecorator('public', {\n            initialValue: props.orginInfo.public\n          })(\n            <Radio.Group>\n              <Radio value={true}>公开</Radio>\n              <Radio value={false}>私有</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label='团队描述'>\n          {getFieldDecorator('description', { initialValue: props.orginInfo.description })(\n            <Input placeholder='请输入团队描述' />\n          )}\n        </Form.Item>\n        <Form.Item label='成员'>\n          {getFieldDecorator('members', { initialValue: props.orginInfo.members.map(item => item.id) })(\n            <Select\n              mode='multiple'\n              onSearch={handleSearch}\n              filterOption={false}\n              notFoundContent={null}\n              placeholder='请选择成员'\n            >\n              {props.userList.list.map(item => (\n                <Option key={item.id} value={item.id}>\n                  {item.nickname || item.username}\n                </Option>\n              ))}\n            </Select>\n          )}\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default Form.create<Props>()(TeamUpdateModel);\n","import { Form, Input, Button, Select } from 'antd';\nimport * as React from 'react';\nimport { formItemLayout } from '@/constants';\nimport { FormComponentProps } from 'antd/lib/form';\nimport { ITeamListParam } from '@/api';\nimport { toastformError } from '@/utils';\n\nconst { Option } = Select;\ninterface Props extends FormComponentProps {\n  onSubmit: (param: ITeamListParam) => any;\n  defaultValue: ITeamListParam;\n}\n\nconst TeamListForm = (props: Props) => {\n  const { getFieldDecorator, setFields } = props.form;\n\n  const handleRelevanceChange = () => {\n    setFields({ name: '' });\n    setTimeout(() => {\n      handleSubmit();\n    }, 0);\n  };\n\n  const handleSubmit = (e?: React.FormEvent) => {\n    if (e) {\n      e.preventDefault();\n    }\n\n    props.form.validateFields((err, values) => {\n      if (err) {\n        toastformError(err);\n        return;\n      }\n      props.onSubmit({ ...values, page: 1, pageSize: 20 });\n    });\n  };\n  return (\n    <Form onSubmit={handleSubmit} layout='inline'>\n      <Form.Item>\n        {getFieldDecorator('relevance', {\n          initialValue: +props.defaultValue.relevance\n        })(\n          <Select onChange={handleRelevanceChange} style={{ width: 100 }}>\n            <Option value={1}>我的团队</Option>\n            <Option value={0}>所有团队</Option>\n          </Select>\n        )}\n      </Form.Item>\n      <Form.Item>\n        {getFieldDecorator('name', {\n          initialValue: props.defaultValue.name\n        })(<Input placeholder='根据团队名称查询' />)}\n      </Form.Item>\n      {/* <Form.Item>\n        <Button type='primary' htmlType='submit'>\n          查询\n        </Button>\n      </Form.Item> */}\n    </Form>\n  );\n};\n\nexport default Form.create<Props>()(TeamListForm);\n","import * as React from 'react';\nimport style from './TeamList.module.less';\nimport { connect } from 'react-redux';\nimport { IStoreState, IAction } from '@/types';\nimport { doGetTeamList, doAddTeam, doDeleteTeam, doGetUserList, doUpdateTeam } from '@/store/actions';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { Modal, List, Avatar, Skeleton, Button, Icon, Popconfirm } from 'antd';\nimport {\n  ITeamInfo,\n  ITeamListParam,\n  ITeamList,\n  IUserListParam,\n  ITeamAddParam,\n  IUserList,\n  ITeamUpdateParam,\n  IUserInfo\n} from '@/api';\nimport AvatarText from '@/components/AvatarText';\nimport TeamAddModal from './components/TeamAddModal';\nimport TeamUpdateModal from './components/TeamUpdateModal';\nimport TeamListForm from './components/TeamListForm';\nimport { ROUTE_PATH } from '@/constants';\nimport { Link } from 'react-router-dom';\n\ninterface Props {\n  onGetTeamList: (param: ITeamListParam) => IAction;\n  onGetUserList: (param: IUserListParam) => IAction;\n  onAddTeam: (param: ITeamAddParam) => IAction;\n  onUpdateTeam: (param: ITeamUpdateParam) => IAction;\n  userList: IUserList;\n  teamList: ITeamList;\n  teamListLoading: boolean;\n  teamListParam: ITeamListParam;\n  onDeleteTeam: (id: number) => IAction;\n  userInfo: IUserInfo;\n}\n\nconst TeamList = ({\n  onGetTeamList,\n  teamList,\n  teamListLoading,\n  onGetUserList,\n  userList,\n  onAddTeam,\n  onDeleteTeam,\n  onUpdateTeam,\n  teamListParam,\n  userInfo\n}: Props) => {\n  const [addTeamVisible, setaddTeamVisible] = React.useState(false);\n  const [updateTeamVisible, setupdateTeamVisible] = React.useState(false);\n  const [selectedTeam, setselectedTeam] = React.useState<ITeamInfo>({\n    name: '',\n    description: '',\n    creator: {\n      id: null,\n      nickname: '',\n      username: ''\n    },\n    members: [],\n    id: null,\n    public: false\n  });\n\n  const handleUpdateTeam = (info: ITeamInfo) => {\n    setselectedTeam(info);\n    setupdateTeamVisible(true);\n  };\n  return (\n    <div className={style.wrapper}>\n      <TeamAddModal\n        onSearchUser={onGetUserList}\n        userList={userList}\n        visible={addTeamVisible}\n        onClose={setaddTeamVisible}\n        onSubmit={onAddTeam}\n      ></TeamAddModal>\n      <TeamUpdateModal\n        orginInfo={selectedTeam}\n        onSearchUser={onGetUserList}\n        userList={userList}\n        visible={updateTeamVisible}\n        onClose={setupdateTeamVisible}\n        onSubmit={onUpdateTeam}\n      ></TeamUpdateModal>\n\n      <div className={style.header}>\n        <div className='app-fl'>\n          <TeamListForm defaultValue={teamListParam} onSubmit={onGetTeamList}></TeamListForm>\n        </div>\n        <Button type='primary' className='app-fr' onClick={() => setaddTeamVisible(true)}>\n          新建团队\n        </Button>\n      </div>\n      <List\n        className={style.itemList}\n        itemLayout='horizontal'\n        dataSource={teamList.list}\n        renderItem={item => (\n          <List.Item\n            key={item.id}\n            actions={\n              userInfo.id === item.creator.id && [\n                <a key='list-edit' onClick={() => handleUpdateTeam(item)}>\n                  <Icon type='form' />\n                  编辑\n                </a>,\n                <Popconfirm\n                  key='list-delete'\n                  onConfirm={() => onDeleteTeam(item.id)}\n                  title='团队删除后不可恢复,确定要删除?'\n                  okText='删除'\n                  cancelText='取消'\n                >\n                  <a>\n                    <Icon type='delete' />\n                    删除\n                  </a>\n                </Popconfirm>\n              ]\n            }\n          >\n            <List.Item.Meta\n              avatar={<AvatarText info={item.creator} />}\n              title={<Link to={ROUTE_PATH.teamInfo + '?teamId=' + item.id}>{item.name}</Link>}\n              description={item.description}\n            />\n            <div className={style.memberBox}>\n              {item.members.map(member => (\n                <AvatarText key={member.id} size='mini' color='#999' info={member} />\n              ))}\n            </div>\n          </List.Item>\n        )}\n      />\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) =>\n  bindActionCreators(\n    {\n      onGetTeamList: params => {\n        return doGetTeamList.request(params);\n      },\n      onGetUserList: param => {\n        return doGetUserList.request(param);\n      },\n      onAddTeam: param => {\n        return doAddTeam.request(param);\n      },\n      onDeleteTeam: param => {\n        return doDeleteTeam.request(param);\n      },\n      onUpdateTeam: param => {\n        return doUpdateTeam.request(param);\n      }\n    },\n    dispatch\n  );\n\nconst mapStateToProps = (state: IStoreState) => {\n  const { teamList, teamListLoading, teamListParam } = state.team;\n  const { userList, userInfo } = state.app;\n  return {\n    teamList,\n    userInfo,\n    userList,\n    teamListLoading,\n    teamListParam\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamList);\n"],"sourceRoot":""}