{"version":3,"sources":["pages/auth/components/AccountLayout.tsx","pages/auth/components/AccountLayout.module.less","pages/auth/Login.tsx"],"names":["LoginLayout","className","style","wrapper","content","box","form","this","props","children","footer","React","module","exports","connect","dispatch","bindActionCreators","doLoginRequest","params","doLogin","request","Form","create","getFieldDecorator","title","onSubmit","e","preventDefault","validateFields","err","values","message","error","Item","rules","required","prefix","type","color","placeholder","block","htmlType","btn","href","config","singelLoginURL","signupAble","text","to"],"mappings":"oOAMqBA,E,iLAEjB,OACE,uBAAKC,UAAWC,IAAMC,SACpB,uBAAKF,UAAWC,IAAME,SACpB,uBAAKH,UAAWC,IAAMG,KACpB,uBAAKJ,UAAWC,IAAMI,MAAOC,KAAKC,MAAMC,YAG5C,uBAAKR,UAAWC,IAAMQ,c,GATWC,c,qBCLzCC,EAAOC,QAAU,CAAC,QAAU,+BAA+B,KAAO,4BAA4B,QAAU,+BAA+B,IAAM,2BAA2B,KAAO,8B,yDCD/K,oIAqFeC,sBAAQ,MAVI,SAACC,GAAD,OACzBC,YACE,CACEC,eAAgB,SAACC,GACf,OAAOC,IAAQC,QAAQF,KAG3BH,KAGWD,CAAkCO,IAAKC,QAALD,EAtDnC,SAAC,GAAqC,IAAnCf,EAAkC,EAAlCA,KAAMW,EAA4B,EAA5BA,eACbM,EAAsBjB,EAAtBiB,kBACR,OACE,gBAAC,IAAD,KACE,sBAAItB,UAAWC,IAAMsB,OAArB,gBACA,gBAAC,IAAD,CAAMC,SAAU,SAAAC,GAAC,OAhBN,SAACA,EAAoBpB,EAAwBW,GAC5DS,EAAEC,iBACFrB,EAAKsB,gBAAe,SAACC,EAAKC,GACpBD,EACFE,IAAQC,MAAM,gEAGhBf,EAAea,MASQL,CAASC,EAAGpB,EAAMW,IAAiBhB,UAAU,cAChE,gBAAC,IAAKgC,KAAN,KACGV,EAAkB,WAAY,CAC7BW,MAAO,CAAC,CAAEC,UAAU,EAAMJ,QAAS,0CADpCR,CAEE,gBAAC,IAAD,CAAOa,OAAQ,gBAAC,IAAD,CAAMC,KAAK,SAASnC,MAAO,CAAEoC,MAAO,qBAAyBC,YAAY,2CAE7F,gBAAC,IAAKN,KAAN,KACGV,EAAkB,WAAY,CAC7BW,MAAO,CAAC,CAAEC,UAAU,EAAMJ,QAAS,oCADpCR,CAGC,gBAAC,IAAD,CACEa,OAAQ,gBAAC,IAAD,CAAMC,KAAK,OAAOnC,MAAO,CAAEoC,MAAO,qBAC1CD,KAAK,WACLE,YAAY,qCAIlB,gBAAC,IAAKN,KAAN,KACE,gBAAC,IAAD,CAAQO,OAAK,EAACH,KAAK,UAAUI,SAAS,SAASxC,UAAWC,IAAMwC,KAAhE,4BAIA,qBAAGC,KAAMC,IAAOC,gBACd,gBAAC,IAAD,CAAQL,OAAK,EAACH,KAAK,UAAUpC,UAAWC,IAAMwC,KAA9C,+CAKDE,IAAOE,YACN,uBAAK7C,UAAWC,IAAM6C,MAAtB,4BACO,gBAAC,IAAD,CAAMC,GAAG,WAAT,6BADP","file":"static/js/13.975d46d9.chunk.js","sourcesContent":["import * as React from 'react';\nimport style from './AccountLayout.module.less';\nimport logo from '@/assets/imgs/logo-b.png';\ninterface Props {\n  children: any;\n}\nexport default class LoginLayout extends React.Component<Props> {\n  render() {\n    return (\n      <div className={style.wrapper}>\n        <div className={style.content}>\n          <div className={style.box}>\n            <div className={style.form}>{this.props.children}</div>\n          </div>\n        </div>\n        <div className={style.footer} />\n      </div>\n    );\n  }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AccountLayout_wrapper__3wTAi\",\"logo\":\"AccountLayout_logo__1b9Tg\",\"content\":\"AccountLayout_content__r-UKX\",\"box\":\"AccountLayout_box__123Rj\",\"form\":\"AccountLayout_form__h1t0o\"};","import * as React from 'react';\nimport { Form, Icon, Input, Button, message } from 'antd';\nimport { WrappedFormUtils } from 'antd/lib/form/Form';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Dispatch } from 'redux';\nimport AccountLayout from './components/AccountLayout';\nimport { Link } from 'react-router-dom';\n\nimport { IAction } from '@/types';\nimport style from './Account.less';\nimport { doLogin } from '@/store/actions';\nimport { ILoginParam } from '@/api';\nimport config from '@/config';\n\ninterface Props {\n  form: WrappedFormUtils;\n  doLoginRequest: (params: ILoginParam) => {};\n}\n\nconst onSubmit = (e: React.FormEvent, form: WrappedFormUtils, doLoginRequest: (params: ILoginParam) => {}) => {\n  e.preventDefault();\n  form.validateFields((err, values) => {\n    if (err) {\n      message.error('请填写正确的账号信息');\n      return;\n    }\n    doLoginRequest(values);\n  });\n};\n\nconst Login = ({ form, doLoginRequest }: Props) => {\n  const { getFieldDecorator } = form;\n  return (\n    <AccountLayout>\n      <h2 className={style.title}>登录</h2>\n      <Form onSubmit={e => onSubmit(e, form, doLoginRequest)} className='login-form'>\n        <Form.Item>\n          {getFieldDecorator('username', {\n            rules: [{ required: true, message: '请输入手机号' }]\n          })(<Input prefix={<Icon type='mobile' style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder='请输入手机号' />)}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator('password', {\n            rules: [{ required: true, message: '请输入密码' }]\n          })(\n            <Input\n              prefix={<Icon type='lock' style={{ color: 'rgba(0,0,0,.25)' }} />}\n              type='password'\n              placeholder='请输入密码'\n            />\n          )}\n        </Form.Item>\n        <Form.Item>\n          <Button block type='primary' htmlType='submit' className={style.btn}>\n            登&emsp;&emsp;录\n          </Button>\n\n          <a href={config.singelLoginURL}>\n            <Button block type='primary' className={style.btn}>\n              内&emsp;网&emsp;登&emsp;录\n            </Button>\n          </a>\n\n          {config.signupAble && (\n            <div className={style.text}>\n              没有账号 <Link to='/signup'>马上注册!</Link>(测试用,请直接内网登录)\n            </div>\n          )}\n        </Form.Item>\n      </Form>\n    </AccountLayout>\n  );\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) =>\n  bindActionCreators(\n    {\n      doLoginRequest: (params: ILoginParam) => {\n        return doLogin.request(params);\n      }\n    },\n    dispatch\n  );\n\nexport default connect(null, mapDispatchToProps)(Form.create()(Login));\n"],"sourceRoot":""}