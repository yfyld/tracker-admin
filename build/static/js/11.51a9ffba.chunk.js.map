{"version":3,"sources":["components/Filter.tsx","components/Indicator.module.less","components/Indicator.tsx","components/Filter.module.less","pages/analyse/components/AnalyseHeader.module.less","components/ReportAppendBoard.tsx","pages/analyse/components/AnalyseHeader.tsx","pages/analyse/Analyse.module.less","components/PathData.module.less","components/ChildPage.tsx","components/PathData.tsx","pages/analyse/AnalysePath.tsx"],"names":["Option","Select","OptGroup","Filter","fieldList","list","EVENT_ATTRS","filterInfo","onChange","React","recommend","setrecommend","handleFieldChange","value","index","newFilterInfo","JSON","parse","stringify","filterValues","key","type","field","find","handleFilterTypeChange","handleFilterValueChange","length","className","style","wrapper","size","onClick","filterType","line","form","map","filter","gutter","id","span","val","showSearch","filterOption","input","option","props","children","toLowerCase","indexOf","name","mode","width","tokenSeparators","item","text","dataSource","splice","handleClose","close","push","uuidv4","add","module","exports","Search","Input","connect","state","metadata","activeMetadataList","activeMetadataListParams","tagList","fieldListMap","projectInfo","project","dispatch","bindActionCreators","onGetActiveMetadataList","param","doGetActiveMetadataList","request","onGetFieldList","doGetFieldList","indicators","hasType","addText","hasCustomName","metadataparam","setmetadataparam","handleSelectMetadata","info","newIndicators","metadataCode","code","metadataName","projectId","handleFilterChange","handleTypeChange","handleSearch","setTimeout","allMetadata","indicatorInfo","center","color","trigger","overlay","content","e","stopPropagation","placeholder","target","onSearch","tags","split","Number","join","projectIds","associationProjects","metadataBox","active","readOnly","select","defaultValue","customName","onBlur","event","handleNameChange","handleRemove","boardList","board","onAppendReportToBoard","params","doAppendReportToBoard","reportInfo","appendedBoardIds","setappendedBoardIds","placement","onVisibleChange","isExist","boards","disabled","record","reportId","boardIds","message","title","report","onAddReport","doAddReport","onUpdateReport","doUpdateReport","data","useState","newReportInfo","setnewReportInfo","useEffect","btns","icon","newInfo","description","ChildPage","pageData","parentInfo","handleSelectPage","pageId","newPageData","pageInfo","handleAddReferer","PathData","childPageData","drawerVisible","setdrawerVisible","selectedParentPageIndex","setselectedParentPageIndex","selectedParentPage","setselectedParentPage","handleChange","newChildPageData","indicatorsMap","reduce","total","closable","onClose","visible","parentId","fatherPage","pathString","handleUpdate","Group","Collapse","Panel","analyse","pathAnalyseData","pathAnalyseParam","analyseLoading","onGetPathAnalyseData","doGetPathAnalyse","indicator","i","AnalyseHeader","rule","ruleSection","ruleTitle","indicatorType","Indicator","preview","AnalyseRangePicker","time","dateType","dateEnd","dateStart","offset","compact","spinning","height","AnalysePathChart"],"mappings":"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","file":"static/js/11.51a9ffba.chunk.js","sourcesContent":["import * as React from 'react';\nimport { Select, Row, Col, Icon, AutoComplete, Button } from 'antd';\nimport style from './Filter.module.less';\nimport { IListData } from '@/types';\nimport { IFieldInfo, IFilterInfo, IFilterValue } from '@/api';\nimport { SelectValue } from 'antd/lib/select';\nimport { v4 as uuidv4 } from 'uuid';\nimport { EVENT_ATTRS } from '@/constants';\nconst { Option, OptGroup } = Select;\n\ninterface Props {\n  fieldList?: IListData<IFieldInfo>;\n  filterInfo: IFilterInfo;\n  onChange: (filterInfo: IFilterInfo) => any;\n}\n\nconst Filter = ({ fieldList = { list: EVENT_ATTRS }, filterInfo, onChange }: Props) => {\n  const [recommend, setrecommend] = React.useState<any[]>([]);\n  const handleFieldChange = (value: string, index: number) => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterValues[index].key = value;\n    newFilterInfo.filterValues[index].type = 'equal';\n    newFilterInfo.filterValues[index].value = [];\n    const field = fieldList.list.find((field) => field.value === value);\n    if (field) {\n      setrecommend(field.recommend);\n    }\n\n    onChange(newFilterInfo);\n  };\n\n  const handleFilterTypeChange = (value: string, index: number) => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterValues[index].type = value;\n    if (value === 'equal' || value === 'notEqual') {\n      newFilterInfo.filterValues[index].value = [];\n    } else if (value === 'between') {\n      newFilterInfo.filterValues[index].value = [null, null];\n    } else {\n      newFilterInfo.filterValues[index].value = null;\n    }\n    onChange(newFilterInfo);\n  };\n\n  const handleFilterValueChange = (value: string, index: number) => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterValues[index].value = value;\n    onChange(newFilterInfo);\n  };\n\n  const handleClose = (index: number) => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterValues.splice(index, 1);\n    onChange(newFilterInfo);\n  };\n\n  const handleAdd = () => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterValues.push({\n      type: null,\n      key: null,\n      value: null,\n      id: uuidv4()\n    });\n    onChange(newFilterInfo);\n  };\n\n  const handleChangeFilterType = () => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterType = newFilterInfo.filterType === 'AND' ? 'OR' : 'AND';\n    onChange(newFilterInfo);\n  };\n\n  return (\n    <div>\n      {filterInfo.filterValues.length > 0 && (\n        <div className={style.wrapper}>\n          {filterInfo.filterValues.length > 1 && (\n            <div className={style.type}>\n              <Button size='small' onClick={handleChangeFilterType}>\n                {filterInfo.filterType === 'AND' ? '且' : '或'}\n              </Button>\n              <div className={style.line}></div>\n            </div>\n          )}\n          <div className={style.form}>\n            {filterInfo.filterValues.map((filter, index) => (\n              <Row gutter={16} key={filter.id}>\n                <Col span={5}>\n                  <Select\n                    value={filter.key}\n                    onChange={(val: string) => handleFieldChange(val, index)}\n                    showSearch\n                    filterOption={(input, option) =>\n                      (option.props.children as string).toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }\n                  >\n                    {fieldList.list.map((field) => (\n                      <Option value={field.value} key={field.value}>\n                        {field.name}\n                      </Option>\n                    ))}\n                  </Select>\n                </Col>\n                <Col span={3}>\n                  <Select value={filter.type} onChange={(val: string) => handleFilterTypeChange(val, index)}>\n                    <Option value='equal'>等于</Option>\n                    <Option value='notEqual'>不等于</Option>\n                    <Option value='isSet'>有值</Option>\n                    <Option value='notSet'>没值</Option>\n\n                    <Option value='greater'>大于</Option>\n                    <Option value='less'>小于</Option>\n                    <Option value='between'>区间</Option>\n\n                    {/* <Option value='contain'>包含</Option>\n                    <Option value='notContain'>不包含</Option> */}\n                    <Option value='isEmpty'>为空</Option>\n                    <Option value='isNotEmpty'>不为空</Option>\n                    {/* <Option value='rlike'>正则匹配</Option>\n                    <Option value='notrlike'>正则不匹配</Option> */}\n                  </Select>\n                </Col>\n                {filter.type !== 'isEmpty' &&\n                  filter.type !== 'isNotEmpty' &&\n                  filter.type !== 'isSet' &&\n                  filter.type !== 'notSet' &&\n                  filter.type !== 'rlike' &&\n                  filter.type !== 'notrlike' && (\n                    <Col span={8}>\n                      {filter.type === 'equal' ||\n                      filter.type === 'notEqual' ||\n                      filter.type === 'notContain' ||\n                      filter.type === 'contain' ? (\n                        <Select\n                          value={filter.value}\n                          onChange={(val: string) => handleFilterValueChange(val, index)}\n                          mode='tags'\n                          style={{ width: '100%' }}\n                          tokenSeparators={[';;']}\n                        >\n                          {recommend.map((item) => (\n                            <Option key={item.value} value={item.value}>\n                              {item.text}\n                            </Option>\n                          ))}\n                        </Select>\n                      ) : (\n                        <AutoComplete\n                          value={filter.value}\n                          dataSource={recommend}\n                          style={{ width: '100%' }}\n                          onChange={(val: any) => handleFilterValueChange(val, index)}\n                        />\n                      )}\n                    </Col>\n                  )}\n                <Col span={1}>\n                  <div onClick={() => handleClose(index)} className={'app-link ' + style.close}>\n                    <Icon type='minus-circle' />\n                  </div>\n                </Col>\n              </Row>\n            ))}\n          </div>\n        </div>\n      )}\n      <a onClick={handleAdd} className={style.add}>\n        <Icon type='plus-square' />\n        添加筛选\n      </a>\n    </div>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Indicator_wrapper__3B5qd\",\"select\":\"Indicator_select__1kP-z\",\"content\":\"Indicator_content__3-BaR\",\"center\":\"Indicator_center__3Oax_\",\"metadataBox\":\"Indicator_metadataBox__3wnAQ\",\"active\":\"Indicator_active__1aD9o\",\"filter\":\"Indicator_filter__lBazH\"};","import * as React from 'react';\nimport { Tag, Select, Row, Col, Icon, Popover, Input, Dropdown, Divider } from 'antd';\nimport style from './Indicator.module.less';\nimport {\n  IMetadataInfo,\n  IMetadataListParam,\n  IIndicatorInfo,\n  IFieldInfo,\n  IFilterInfo,\n  ITagList,\n  IFieldListParam,\n  IProjectInfo\n} from '@/api';\nimport { IPageData, IAction, IStoreState, IListData } from '@/types';\nimport { connect } from 'react-redux';\n\nimport { bindActionCreators, Dispatch } from 'redux';\nimport Filter from './Filter';\nimport { v4 as uuidv4 } from 'uuid';\nimport { doGetActiveMetadataList, doGetFieldList } from '../store/actions';\nimport { IFieldListMap } from '@/store/reducers/metadata.reducer';\nimport { EVENT_ATTRS } from '@/constants';\nconst { Option, OptGroup } = Select;\n\nconst { Search } = Input;\n\ninterface Props {\n  activeMetadataList: IPageData<IMetadataInfo>;\n  activeMetadataListParams: IMetadataListParam;\n  index?: number;\n  fieldListMap: IFieldListMap;\n  indicators: IIndicatorInfo[];\n  onChange: (param: IIndicatorInfo[], changedValue?: IIndicatorInfo) => any;\n  hasType?: boolean;\n  addText?: string;\n  hasCustomName?: boolean;\n  type?: number;\n  tagList: ITagList;\n  onGetActiveMetadataList: (param: IMetadataListParam) => IAction;\n  onGetFieldList: (param: IFieldListParam) => IAction;\n  projectInfo: IProjectInfo;\n}\n\nconst Indicator = ({\n  indicators,\n  activeMetadataList,\n  activeMetadataListParams,\n  onChange,\n  fieldListMap,\n  hasType,\n  addText = '+添加指标',\n  hasCustomName = false,\n  type = null,\n  tagList,\n  onGetActiveMetadataList,\n  onGetFieldList,\n  projectInfo\n}: Props) => {\n  const [metadataparam, setmetadataparam] = React.useState({ ...activeMetadataListParams });\n  React.useEffect(() => {\n    setmetadataparam(activeMetadataListParams);\n  }, [activeMetadataListParams]);\n\n  function handleSelectMetadata(info: IMetadataInfo, index: number) {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators[index].metadataCode = info.code;\n    newIndicators[index].metadataName = info.name;\n    newIndicators[index].projectId = info.projectId;\n    onChange(newIndicators, indicators[index]);\n    onGetFieldList({ projectId: info.projectId, metadataCode: info.code });\n  }\n\n  function handleFilterChange(info: IFilterInfo, index: number) {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators[index].filter = info;\n    onChange(newIndicators);\n  }\n\n  function handleTypeChange(value: string, index: number) {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators[index].type = value;\n    onChange(newIndicators);\n  }\n\n  function handleNameChange(value: string, index: number) {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators[index].customName = value;\n    onChange(newIndicators);\n  }\n\n  function handleAdd() {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators.push({\n      metadataCode: '_ALL_METADATA',\n      metadataName: '所有事件',\n      projectId: null,\n      type: 'PV',\n      id: uuidv4(),\n      filter: {\n        filterType: 'AND',\n        filterValues: []\n      }\n    });\n    onChange(newIndicators);\n  }\n\n  function handleRemove(index: number) {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators.splice(index, 1);\n    onChange(newIndicators, indicators[index]);\n  }\n\n  function handleSearch(param: IMetadataListParam) {\n    setmetadataparam(param);\n    setTimeout(() => {\n      onGetActiveMetadataList(param);\n    }, 300);\n  }\n\n  const allMetadata = {\n    name: '所有事件',\n    code: '_ALL_METADATA'\n  } as IMetadataInfo;\n\n  return (\n    <div className={style.wrapper}>\n      <div>\n        {indicators.map((indicatorInfo, index) => (\n          <div key={indicatorInfo.id}>\n            <Row className={style.item} gutter={10}>\n              <Col span={1}>\n                <div className={style.center}>\n                  <Tag color='gold'>{index + 1}</Tag>\n                </div>\n              </Col>\n              <Col span={3}>\n                <Dropdown\n                  trigger={['click']}\n                  overlay={\n                    <div className={style.content}>\n                      <div onClick={(e) => e.stopPropagation()}>\n                        <Search\n                          placeholder='搜索事件'\n                          value={metadataparam.name}\n                          onChange={(e) => setmetadataparam({ ...metadataparam, name: e.target.value })}\n                          onSearch={(name) => handleSearch({ ...metadataparam, name })}\n                          style={{ width: 120 }}\n                        />\n                        &nbsp;\n                        <Select\n                          placeholder='根据标签筛选'\n                          style={{ width: 120 }}\n                          mode='multiple'\n                          value={metadataparam.tags ? metadataparam.tags.split(',').map((item) => Number(item)) : []}\n                          onChange={(tags: number[]) => handleSearch({ ...metadataparam, tags: tags.join(',') })}\n                        >\n                          {tagList.list.map((item) => (\n                            <Option key={item.id} value={item.id}>\n                              {item.name}\n                            </Option>\n                          ))}\n                        </Select>\n                        &nbsp;\n                        <Select\n                          placeholder='关联应用'\n                          style={{ width: 160 }}\n                          mode='multiple'\n                          value={\n                            metadataparam.projectIds\n                              ? metadataparam.projectIds.split(',').map((item) => Number(item))\n                              : []\n                          }\n                          onChange={(projectIds: number[]) =>\n                            handleSearch({ ...metadataparam, projectIds: projectIds.join(',') })\n                          }\n                        >\n                          {projectInfo.associationProjects.map((item) => (\n                            <Option key={item.id} value={item.id}>\n                              {item.name}\n                            </Option>\n                          ))}\n                        </Select>\n                      </div>\n\n                      <div className={style.metadataBox}>\n                        {projectInfo.associationProjects ? (\n                          <>\n                            <span\n                              onClick={() => handleSelectMetadata({ ...allMetadata }, index)}\n                              className={\n                                allMetadata.code === indicatorInfo.metadataCode && !indicatorInfo.projectId\n                                  ? style.active\n                                  : ''\n                              }\n                              key={allMetadata.code}\n                            >\n                              所有事件\n                            </span>\n                            {!!projectInfo.associationProjects.length && (\n                              <span\n                                onClick={() =>\n                                  handleSelectMetadata(\n                                    { ...allMetadata, name: projectInfo.name + '所有事件', projectId: projectInfo.id },\n                                    index\n                                  )\n                                }\n                                className={\n                                  allMetadata.code === indicatorInfo.metadataCode &&\n                                  indicatorInfo.projectId === projectInfo.id\n                                    ? style.active\n                                    : ''\n                                }\n                                key={allMetadata.code + projectInfo.id}\n                              >\n                                {projectInfo.name}所有事件\n                              </span>\n                            )}\n                            {projectInfo.associationProjects.map((item) => (\n                              <span\n                                onClick={() =>\n                                  handleSelectMetadata(\n                                    { ...allMetadata, name: item.name + '所有事件', projectId: item.id },\n                                    index\n                                  )\n                                }\n                                className={\n                                  allMetadata.code === indicatorInfo.metadataCode && indicatorInfo.projectId === item.id\n                                    ? style.active\n                                    : ''\n                                }\n                                key={allMetadata.code + item.id}\n                              >\n                                {item.name}所有事件\n                              </span>\n                            ))}\n                          </>\n                        ) : (\n                          <span\n                            onClick={() => handleSelectMetadata({ ...allMetadata, projectId: projectInfo.id }, index)}\n                            className={allMetadata.code === indicatorInfo.metadataCode ? style.active : ''}\n                            key={allMetadata.code + projectInfo.id}\n                          >\n                            所有事件\n                          </span>\n                        )}\n\n                        {activeMetadataList.list\n                          .filter((item) => {\n                            if (!type) {\n                              return true;\n                            }\n                            return item.type === type;\n                          })\n                          .map((item) => (\n                            <span\n                              onClick={() => handleSelectMetadata(item, index)}\n                              className={item.code === indicatorInfo.metadataCode ? style.active : ''}\n                              key={item.code}\n                            >\n                              {item.name}\n                            </span>\n                          ))}\n                      </div>\n                    </div>\n                  }\n                >\n                  <Input value={indicatorInfo.metadataName} readOnly className={style.select} />\n                </Dropdown>\n              </Col>\n              {hasCustomName && (\n                <Col span={3}>\n                  <Input\n                    defaultValue={indicatorInfo.customName}\n                    placeholder='自定义名称'\n                    onBlur={(event) => handleNameChange(event.target.value, index)}\n                  />\n                </Col>\n              )}\n              {hasType && (\n                <>\n                  <Col span={1}>\n                    <div className={style.center}>的</div>\n                  </Col>\n                  <Col span={3}>\n                    <Select onChange={(val: string) => handleTypeChange(val, index)} value={indicatorInfo.type}>\n                      <Option value='PV'>总次数</Option>\n                      <Option value='UV'>用户数</Option>\n                      <Option value='APV'>人均次数</Option>\n                      <Option value='DPV'>日均次数</Option>\n                      <Option value='DUV'>日均用户数</Option>\n                      {/* <Option value='RUV'>真实用户数</Option>\n                      <Option value='RAPV'>真实人均次数</Option>\n                      <Option value='DRUV'>日均真实用户数</Option> */}\n                    </Select>\n                  </Col>\n                </>\n              )}\n\n              {indicators.length > 1 && (\n                <Col span={1}>\n                  <div onClick={() => handleRemove(index)} className={'app-link ' + style.center}>\n                    <Icon type='close' />\n                  </div>\n                </Col>\n              )}\n            </Row>\n            <div className={style.filter}>\n              <Filter\n                fieldList={fieldListMap[indicatorInfo.metadataCode] || { list: EVENT_ATTRS }}\n                filterInfo={indicatorInfo.filter}\n                onChange={(filter) => handleFilterChange(filter, index)}\n              ></Filter>\n            </div>\n          </div>\n        ))}\n      </div>\n      <a onClick={handleAdd}>{addText}</a>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IStoreState) => {\n  const { activeMetadataList, activeMetadataListParams, tagList, fieldListMap } = state.metadata;\n  const { projectInfo } = state.project;\n  return {\n    activeMetadataList,\n    activeMetadataListParams,\n    tagList,\n    fieldListMap,\n    projectInfo\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) =>\n  bindActionCreators(\n    {\n      onGetActiveMetadataList: (param) => doGetActiveMetadataList.request(param),\n      onGetFieldList: (param) => doGetFieldList.request(param)\n    },\n\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Indicator);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__9rptJ\",\"line\":\"Filter_line__eOPS4\",\"type\":\"Filter_type__2GtXQ\",\"form\":\"Filter_form__1lfK0\",\"close\":\"Filter_close__1AZpi\",\"add\":\"Filter_add__2YNj8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AnalyseHeader_wrapper__1r0g1\",\"btns\":\"AnalyseHeader_btns__G6iwS\",\"title\":\"AnalyseHeader_title__1X3LF\",\"description\":\"AnalyseHeader_description__1fJOY\"};","import * as React from 'react';\nimport { Popover, Select, Button, message } from 'antd';\nimport { IAction, IStoreState } from '@/types';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { IBoardList, IReportInfo, IReportAppendToBoard } from '@/api';\nimport { doAppendReportToBoard } from '@/store/actions';\n\ninterface Props {\n  boardList: IBoardList;\n  reportInfo: IReportInfo;\n  onAppendReportToBoard: (param: IReportAppendToBoard) => IAction;\n  children: React.ReactNode;\n}\n\nconst ReportAppendBoard = ({ onAppendReportToBoard, boardList, reportInfo, children }: Props) => {\n  const [appendedBoardIds, setappendedBoardIds] = React.useState([]);\n\n  function handleReportAppendBoard(record: IReportInfo) {\n    if (!appendedBoardIds.length) {\n      message.info('请选择看板');\n      return;\n    }\n    onAppendReportToBoard({ reportId: record.id, boardIds: appendedBoardIds, projectId: reportInfo.projectId });\n  }\n\n  return (\n    <Popover\n      placement='bottom'\n      trigger='click'\n      onVisibleChange={(value) => value && setappendedBoardIds([])}\n      content={\n        <div>\n          <Select\n            size='small'\n            onChange={(e: number[]) => setappendedBoardIds(e)}\n            value={appendedBoardIds}\n            style={{ width: 240 }}\n            mode='multiple'\n          >\n            {boardList.list.map((item) => {\n              const isExist = !!reportInfo.boards.find((val) => val.id === item.id);\n              return (\n                <Select.Option key={item.id} value={item.id} disabled={isExist}>\n                  {item.name}\n                </Select.Option>\n              );\n            })}\n          </Select>\n          &nbsp;\n          <Button size='small' onClick={() => handleReportAppendBoard(reportInfo)}>\n            确定\n          </Button>\n        </div>\n      }\n      title='选择看板'\n    >\n      {children}\n    </Popover>\n  );\n};\nconst mapStateToProps = (state: IStoreState) => {\n  const { boardList } = state.board;\n  return {\n    boardList\n  };\n};\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) =>\n  bindActionCreators(\n    {\n      onAppendReportToBoard: (params: IReportAppendToBoard) => {\n        return doAppendReportToBoard.request(params);\n      }\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReportAppendBoard);\n","import React from 'react';\nimport { Icon, Button, Input, message, Select, Popover } from 'antd';\nimport { connect } from 'react-redux';\nimport { IAction, IStoreState } from '@/types';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { doAddReport, doUpdateReport, doAppendReportToBoard } from '@/store/actions';\nimport { IReportAddParam, IReportUpdateParam, IReportInfo, IReportAppendToBoard } from '@/api';\nimport style from './AnalyseHeader.module.less';\nimport ReportAppendBoard from '@/components/ReportAppendBoard';\ninterface Props {\n  reportInfo: IReportInfo;\n  onAddReport: (params: IReportAddParam) => IAction;\n  onUpdateReport: (params: IReportUpdateParam) => IAction;\n  data: Object;\n}\nconst AnalyseHeader = ({ reportInfo, onUpdateReport, onAddReport, data }: Props) => {\n  const [newReportInfo, setnewReportInfo] = React.useState(reportInfo);\n  const [appendedBoardIds, setappendedBoardIds] = React.useState([]);\n  React.useEffect(() => {\n    setnewReportInfo(reportInfo);\n  }, [reportInfo]);\n\n  const handleSave = () => {\n    if (typeof reportInfo.id !== 'undefined') {\n      onUpdateReport({ id: null, ...newReportInfo, data });\n    } else {\n      onAddReport({ ...newReportInfo, data });\n    }\n  };\n\n  const handleSaveAs = () => {\n    const { id, ...newInfo } = newReportInfo;\n    onAddReport({ ...newInfo, data });\n  };\n\n  return (\n    <div className={style.wrapper}>\n      <h2 className={style.title}>\n        <Input\n          type='text'\n          onChange={(e) => setnewReportInfo({ ...newReportInfo, name: e.target.value })}\n          value={newReportInfo.name}\n        />\n      </h2>\n      <div className={style.btns}>\n        <Button type='link' icon='save' onClick={handleSave}>\n          保存\n        </Button>\n        {newReportInfo.id && (\n          <Button type='link' icon='save' onClick={handleSaveAs}>\n            另存为\n          </Button>\n        )}\n\n        {newReportInfo.id && (\n          <ReportAppendBoard reportInfo={newReportInfo}>\n            <Button type='link' icon='plus-circle'>\n              添加到\n            </Button>\n          </ReportAppendBoard>\n        )}\n      </div>\n      <div className={style.description}>\n        <Input\n          onChange={(e) => setnewReportInfo({ ...newReportInfo, description: e.target.value })}\n          value={newReportInfo.description}\n        ></Input>\n      </div>\n    </div>\n  );\n};\nconst mapStateToProps = (state: IStoreState) => {\n  const { reportInfo } = state.report;\n  return {\n    reportInfo\n  };\n};\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) =>\n  bindActionCreators(\n    {\n      onAddReport: (params: IReportAddParam) => {\n        return doAddReport.request(params);\n      },\n      onUpdateReport: (params: IReportUpdateParam) => {\n        return doUpdateReport.request(params);\n      }\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AnalyseHeader);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ruleTitle\":\"Analyse_ruleTitle__3EBvq\",\"preview\":\"Analyse_preview__3BAIC\",\"wrapper\":\"Analyse_wrapper__14KR4\",\"ruleSection\":\"Analyse_ruleSection__3E7iy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PathData_wrapper__p7PRs\",\"select\":\"PathData_select__CdiON\",\"content\":\"PathData_content__1usJl\",\"center\":\"PathData_center__bf1Ka\",\"metadataBox\":\"PathData_metadataBox__SFkXm\",\"active\":\"PathData_active__1ZvVM\",\"pathString\":\"PathData_pathString__33FXG\",\"filter\":\"PathData_filter__dCV3V\",\"pageList\":\"PathData_pageList__3IJ0R\",\"pageItem\":\"PathData_pageItem__2mtad\",\"addPageBtn\":\"PathData_addPageBtn__3gfgq\",\"pageClose\":\"PathData_pageClose__10U7Q\",\"fatherPage\":\"PathData_fatherPage__NfKXP\"};","import * as React from 'react';\nimport { Tag, Select, Row, Col, Icon, Popover, Input, Dropdown, Divider, Button } from 'antd';\nimport style from './Indicator.module.less';\nimport {\n  IMetadataInfo,\n  IMetadataListParam,\n  IIndicatorInfo,\n  IFieldInfo,\n  IFilterInfo,\n  ITagList,\n  IChildPageData\n} from '@/api';\nimport { IPageData, IAction, IStoreState, IListData } from '@/types';\nimport { connect } from 'react-redux';\n\nimport { bindActionCreators, Dispatch } from 'redux';\nimport Filter from './Filter';\nimport { doGetActiveMetadataList } from '../store/actions';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst { Option, OptGroup } = Select;\n\nconst { Search } = Input;\n\ninterface Props {\n  parentInfo: IIndicatorInfo;\n  fieldList: IListData<IFieldInfo>;\n  indicators: IIndicatorInfo[];\n  pageData: IChildPageData;\n  onChange: (param: IChildPageData) => any;\n  addText?: string;\n}\n\nconst ChildPage = ({ indicators, onChange, fieldList, addText = '+添加子页面', pageData, parentInfo }: Props) => {\n  function handleSelectPage(pageId: string, index: number) {\n    const newPageData: IChildPageData = JSON.parse(JSON.stringify(pageData));\n    newPageData.children[index].id = pageId;\n    onChange(newPageData);\n  }\n\n  function handleFilterChange(info: IFilterInfo, index: number) {\n    const newPageData: IChildPageData = JSON.parse(JSON.stringify(pageData));\n    newPageData.children[index].filter = info;\n    onChange(newPageData);\n  }\n\n  function handleAdd() {\n    const newPageData: IChildPageData = JSON.parse(JSON.stringify(pageData));\n    newPageData.children.push({\n      id: null,\n      key: uuidv4(),\n      filter: {\n        filterType: 'AND',\n        filterValues:\n          parentInfo.metadataCode !== '_ALL_METADATA'\n            ? [\n                {\n                  key: 'referrerId',\n                  type: 'equal',\n                  value: [parentInfo.metadataCode],\n                  id: uuidv4()\n                }\n              ]\n            : []\n      }\n    });\n    onChange(newPageData);\n  }\n\n  function handleRemove(index: number) {\n    const newPageData: IChildPageData = JSON.parse(JSON.stringify(pageData));\n    newPageData.children.splice(index, 1);\n    onChange(newPageData);\n  }\n\n  function handleAddReferer(index: number) {\n    const newPageData: IChildPageData = JSON.parse(JSON.stringify(pageData));\n    newPageData.children[index].filter.filterValues.push({\n      key: 'referrerId',\n      type: 'equal',\n      value: [parentInfo.metadataCode],\n      id: uuidv4()\n    });\n    onChange(newPageData);\n  }\n\n  return (\n    <div className={style.wrapper}>\n      <div>\n        {pageData.children.map((pageInfo, index) => (\n          <div key={pageInfo.key}>\n            <Row className={style.item} gutter={10}>\n              <Col span={1}>\n                <div className={style.center}>\n                  <Tag color='gold'>{index + 1}</Tag>\n                </div>\n              </Col>\n              <Col span={8}>\n                <Select\n                  value={pageInfo.id}\n                  placeholder='选择子页面'\n                  style={{ width: '100%' }}\n                  onChange={(pageId: string) => handleSelectPage(pageId, index)}\n                >\n                  {indicators\n                    .filter((item) => item.id !== parentInfo.id)\n                    .map((item) => (\n                      <Option\n                        key={item.id}\n                        value={item.id}\n                        disabled={!!pageData.children.find((val) => val.id === item.id)}\n                      >\n                        {item.customName || item.metadataName}\n                      </Option>\n                    ))}\n                </Select>\n              </Col>\n              <Col span={8}>\n                {!pageInfo.filter.filterValues.find((item) => item.key === 'referrerId') && (\n                  <Button onClick={() => handleAddReferer(index)}>关联referrer</Button>\n                )}\n                &nbsp;\n                {pageData.children.length > 1 && <Button onClick={() => handleRemove(index)}>删除</Button>}\n              </Col>\n            </Row>\n            <div className={style.filter}>\n              <Filter\n                fieldList={fieldList}\n                filterInfo={pageInfo.filter}\n                onChange={(filter) => handleFilterChange(filter, index)}\n              ></Filter>\n            </div>\n          </div>\n        ))}\n      </div>\n      <a onClick={handleAdd}>{addText}</a>\n    </div>\n  );\n};\n\nexport default ChildPage;\n","import * as React from 'react';\nimport { Tag, Select, Row, Col, Icon, Input, Dropdown, Divider, Button, Drawer, Menu } from 'antd';\nimport style from './PathData.module.less';\nimport { IIndicatorInfo, IChildPageInfo, IFieldInfo, IChildPageData } from '@/api';\nimport { SortableContainer, SortableElement, SortableHandle } from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\nimport Indicator from '@/components/Indicator';\nimport ChildPage from './ChildPage';\nimport { IListData } from '@/types';\nimport { v4 as uuidv4 } from 'uuid';\nimport { EVENT_ATTRS } from '@/constants';\nconst { Option } = Select;\n\ninterface Props {\n  childPageData: IChildPageData[];\n  indicators: IIndicatorInfo[];\n  fieldList?: IListData<IFieldInfo>;\n  onChange: (param: IChildPageData[]) => any;\n}\n\nconst PathData = ({ childPageData, indicators, onChange, fieldList = { list: EVENT_ATTRS } }: Props) => {\n  const [drawerVisible, setdrawerVisible] = React.useState(false);\n  const [selectedPath, setselectedPath] = React.useState<number[]>([]);\n  const [selectedParentPageIndex, setselectedParentPageIndex] = React.useState<number>(null);\n\n  const [selectedParentPage, setselectedParentPage] = React.useState<IChildPageData>(null);\n\n  function handleChange(value: IChildPageData, index: number) {\n    let newChildPageData: IChildPageData[] = JSON.parse(JSON.stringify(childPageData));\n    newChildPageData[index] = value;\n    onChange(newChildPageData);\n  }\n\n  const indicatorsMap = indicators.reduce<{ [prop: string]: IIndicatorInfo }>((total, item) => {\n    total[item.id] = item;\n    return total;\n  }, {});\n\n  function handleAdd() {\n    const newChildPageData: IChildPageData[] = JSON.parse(JSON.stringify(childPageData));\n    newChildPageData.push({\n      parentId: null,\n      key: uuidv4(),\n      children: []\n    });\n    onChange(newChildPageData);\n  }\n\n  function handleRemove(index: number) {\n    const newChildPageData: IChildPageData[] = JSON.parse(JSON.stringify(childPageData));\n    newChildPageData.splice(index, 1);\n    onChange(newChildPageData);\n  }\n\n  function handleUpdate(index: number) {\n    setdrawerVisible(true);\n    setselectedParentPage(childPageData[index]);\n    setselectedParentPageIndex(index);\n  }\n\n  function hanldClose() {\n    setdrawerVisible(false);\n\n    handleChange(\n      { ...selectedParentPage, children: selectedParentPage.children.filter(item => item.id) },\n      selectedParentPageIndex\n    );\n  }\n\n  function handleRemovePage(index: number) {\n    const data = [...selectedPath];\n    data.splice(index, 1);\n    setselectedPath(data);\n  }\n\n  const handleAddPage = (id: number) => {\n    setselectedPath(selectedPath.concat([id]));\n  };\n\n  return (\n    <div className={style.wrapper}>\n      <Drawer\n        width={840}\n        title='编辑下游页面'\n        placement='right'\n        closable={false}\n        onClose={hanldClose}\n        visible={drawerVisible}\n      >\n        {selectedParentPage && (\n          <ChildPage\n            parentInfo={indicatorsMap[selectedParentPage.parentId]}\n            pageData={selectedParentPage}\n            fieldList={fieldList}\n            addText='+添加子页面'\n            indicators={indicators}\n            onChange={setselectedParentPage}\n          />\n        )}\n      </Drawer>\n\n      <div>\n        {childPageData.map((item, index) => (\n          <div key={item.key}>\n            <Row className={style.item} gutter={10}>\n              <Col span={2}>\n                <div className={style.center}>父级页 {index + 1}</div>\n              </Col>\n              <Col span={6}>\n                <div className={style.fatherPage}>\n                  <Select\n                    value={item.parentId}\n                    onChange={(parentId: string) => handleChange({ ...item, parentId, children: [] }, index)}\n                  >\n                    {indicators.map(item => (\n                      <Option\n                        disabled={!!childPageData.find(val => val.parentId === item.id)}\n                        key={item.id}\n                        value={item.id}\n                      >\n                        {item.customName || item.metadataName}\n                      </Option>\n                    ))}\n                  </Select>\n                  <strong>下游页面:</strong>\n                  <span className={style.pathString}>\n                    {item.children\n                      .filter(info => !!indicatorsMap[info.id])\n                      .map(info => indicatorsMap[info.id].customName || indicatorsMap[info.id].metadataName)\n                      .join(',')}\n                  </span>\n                </div>\n              </Col>\n              <Col span={4}>\n                {item.parentId && (\n                  <Button size='default' onClick={() => handleUpdate(index)}>\n                    编辑下游页面\n                  </Button>\n                )}\n                &nbsp;\n                {childPageData.length > 1 && (\n                  <Button size='small' onClick={() => handleRemove(index)}>\n                    删除\n                  </Button>\n                )}\n              </Col>\n            </Row>\n          </div>\n        ))}\n      </div>\n      <a onClick={handleAdd}>添加父级页</a>\n    </div>\n  );\n};\n\nexport default PathData;\n","import { Icon, Collapse, Divider, Select, Input, Row, Col, Button, Spin } from 'antd';\nimport React from 'react';\nimport AnalyseRangePicker from '@/components/AnalyseRangePicker';\n\nimport style from './Analyse.module.less';\n\nimport Indicator from '@/components/Indicator';\nimport PathData from '@/components/PathData';\n\nimport Filter from '@/components/Filter';\nimport AnalyseHeader from './components/AnalyseHeader';\nimport { IReportInfo, IFieldInfo, IPathAnalyseData, IPathAnalyseParam, EMetadataType, IIndicatorInfo } from '@/api';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { doAddReport, doUpdateReport, doGetPathAnalyse } from '@/store/actions';\nimport { IAction, IStoreState, IListData, IDate } from '@/types';\nimport { DYNAMIC_TIME, EVENT_ATTRS } from '@/constants';\nimport AnalysePathChart from './components/AnalysePathChart';\nconst { Option } = Select;\nconst { Panel } = Collapse;\nconst { Group } = Input;\ninterface Props {\n  onGetPathAnalyseData: (param: IPathAnalyseParam) => IAction;\n  projectId: number;\n  pathAnalyseData: IPathAnalyseData;\n  pathAnalyseParam: IPathAnalyseParam;\n  analyseLoading: boolean;\n}\n\nconst AnalysePath = ({\n  analyseLoading,\n\n  onGetPathAnalyseData,\n  projectId,\n  pathAnalyseData,\n  pathAnalyseParam\n}: Props) => {\n  const handleChange = (info: IPathAnalyseParam, indicator?: IIndicatorInfo) => {\n    info.projectId = projectId;\n    if (indicator) {\n      info.childPageData = info.childPageData.filter((item) => item.parentId !== indicator.id);\n      for (let i in info.childPageData) {\n        info.childPageData[i].children = info.childPageData[i].children.filter((item) => item.id !== indicator.id);\n      }\n    }\n    onGetPathAnalyseData(info);\n  };\n\n  return (\n    <div className={style.wrapper}>\n      <AnalyseHeader data={{ ...pathAnalyseParam, projectId }}></AnalyseHeader>\n      <div className={style.rule}>\n        <div className={style.ruleSection}>\n          <span className={style.ruleTitle}>指标:</span>\n          <Select\n            style={{ width: 100 }}\n            value={pathAnalyseParam.indicatorType}\n            onChange={(indicatorType: string) => handleChange({ ...pathAnalyseParam, indicatorType })}\n          >\n            <Option value='PV'>总数</Option>\n            <Option value='UV'> 用户数</Option>\n            <Option value='APV'>人均次数</Option>\n            <Option value='DPV'>日均次数</Option>\n            <Option value='DUV'>日均用户数</Option>\n            {/* <Option value='RUV'>真实用户数</Option>\n            <Option value='RAPV'>真实人均次数</Option>\n            <Option value='DRUV'>日均真实用户数</Option> */}\n          </Select>\n        </div>\n\n        <div className={style.ruleSection}>\n          <span className={style.ruleTitle}>筛选:</span>\n          <Filter\n            filterInfo={pathAnalyseParam.filter}\n            onChange={(filter) => handleChange({ ...pathAnalyseParam, filter })}\n          />\n        </div>\n\n        <div className={style.ruleSection}>\n          <span className={style.ruleTitle}>页面池:</span>\n          <Indicator\n            addText='+添加页面'\n            hasCustomName\n            // type={EMetadataType.page}\n            indicators={pathAnalyseParam.indicators}\n            onChange={(indicators, indicator) => handleChange({ ...pathAnalyseParam, indicators }, indicator)}\n          />\n        </div>\n\n        <div className={style.ruleSection}>\n          <span className={style.ruleTitle}>父级页:</span>\n          <PathData\n            indicators={pathAnalyseParam.indicators}\n            childPageData={pathAnalyseParam.childPageData}\n            onChange={(childPageData) => handleChange({ ...pathAnalyseParam, childPageData: childPageData })}\n          ></PathData>\n        </div>\n      </div>\n\n      <div className={style.preview}>\n        <Row>\n          <Col span={14}>\n            <AnalyseRangePicker\n              onChange={(time) => handleChange({ ...pathAnalyseParam, ...time })}\n              value={{\n                dateType: pathAnalyseParam.dateType,\n                dateEnd: pathAnalyseParam.dateEnd,\n                dateStart: pathAnalyseParam.dateStart\n              }}\n            />\n          </Col>\n          <Col span={6} offset={4}>\n            <Group compact>\n              <Button icon='download'>导出</Button>\n            </Group>\n          </Col>\n        </Row>\n        <Spin spinning={analyseLoading}>\n          <div style={{ height: 800 }}>\n            <AnalysePathChart data={pathAnalyseData}></AnalysePathChart>\n          </div>\n        </Spin>\n        <div></div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IStoreState) => {\n  const projectId = state.project.projectInfo.id;\n  const { pathAnalyseData, pathAnalyseParam, analyseLoading } = state.analyse;\n  return {\n    projectId,\n    pathAnalyseData,\n    pathAnalyseParam,\n    analyseLoading\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) =>\n  bindActionCreators(\n    {\n      onGetPathAnalyseData: (param: IPathAnalyseParam) => doGetPathAnalyse.request(param)\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AnalysePath);\n"],"sourceRoot":""}