{"version":3,"sources":["components/AvatarText.module.less","pages/team/TeamList.module.less","pages/team/components/TeamAddModal.tsx","pages/team/components/TeamUpdateModal.tsx","pages/team/components/TeamListForm.tsx","pages/team/TeamList.tsx","components/AvatarText.tsx"],"names":["module","exports","Option","Select","Form","create","props","getFieldDecorator","form","React","resetFields","visible","userList","list","length","onSearchUser","page","pageSize","handleSearch","debounce","value","nickname","onOk","e","preventDefault","validateFields","err","values","toastformError","onSubmit","onClose","title","onCancel","layout","formItemLayout","Item","label","rules","required","message","placeholder","initialValue","Group","mode","onSearch","filterOption","notFoundContent","map","item","key","id","username","orginInfo","creator","showSearch","name","public","description","members","setFields","handleSubmit","defaultValue","relevance","onChange","setTimeout","style","width","connect","state","team","teamList","teamListLoading","teamListParam","app","userInfo","dispatch","bindActionCreators","onGetTeamList","params","doGetTeamList","request","onGetUserList","param","doGetUserList","onAddTeam","doAddTeam","onDeleteTeam","doDeleteTeam","onUpdateTeam","doUpdateTeam","addTeamVisible","setaddTeamVisible","updateTeamVisible","setupdateTeamVisible","selectedTeam","setselectedTeam","className","wrapper","TeamAddModal","TeamUpdateModal","header","type","onClick","itemList","itemLayout","dataSource","renderItem","actions","onConfirm","okText","cancelText","Meta","avatar","AvatarText","info","to","ROUTE_PATH","teamInfo","memberBox","member","size","color","content","placement","background","test","substr"],"mappings":"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","file":"static/js/11.f4f8620f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AvatarText_wrapper__G4Kdz\",\"mini\":\"AvatarText_mini__NgFQ1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"memberBox\":\"TeamList_memberBox__O9kij\",\"itemList\":\"TeamList_itemList__bn9js\",\"header\":\"TeamList_header__1jLUP\"};","import { Modal, Form, Input, Select, Radio, Spin } from 'antd';\nimport * as React from 'react';\nimport { formItemLayout } from '@/constants';\nimport { FormComponentProps } from 'antd/lib/form';\nimport { IUserListParam, IUserList, ITeamAddParam } from '@/api';\nimport { toastformError } from '@/utils';\n\nimport { IAction } from '@/types';\n\nimport debounce from 'lodash/debounce';\n\nconst { Option } = Select;\ninterface Props extends FormComponentProps {\n  visible: boolean;\n  onClose: (param: boolean) => void;\n  userList: IUserList;\n  onSearchUser: (param: IUserListParam) => IAction;\n  onSubmit: (param: ITeamAddParam) => IAction;\n}\n\nconst TeamAddModel = (props: Props) => {\n  const { getFieldDecorator } = props.form;\n  React.useEffect(() => {\n    props.form.resetFields();\n    //第一次\n    if (props.visible && !props.userList.list.length) {\n      props.onSearchUser({ page: 1, pageSize: 50 });\n    }\n  }, [props.visible]);\n  const handleSubmit = (e: React.MouseEvent) => {\n    e.preventDefault();\n    props.form.validateFields((err, values) => {\n      if (err) {\n        toastformError(err);\n        return;\n      }\n      props.onSubmit(values);\n      props.onClose(false);\n    });\n  };\n\n  const handleSearch = debounce((value: string) => {\n    props.onSearchUser({ nickname: value, page: 1, pageSize: 50 });\n  }, 800);\n  return (\n    <Modal onOk={handleSubmit} title='新增团队' visible={props.visible} onCancel={() => props.onClose(false)}>\n      <Form layout='horizontal' {...formItemLayout}>\n        <Form.Item label='团队名称'>\n          {getFieldDecorator('name', {\n            rules: [{ required: true, message: '请输入团队名称' }]\n          })(<Input placeholder='请输入团队名称' />)}\n        </Form.Item>\n\n        <Form.Item label='公开'>\n          {getFieldDecorator('public', {\n            initialValue: true\n          })(\n            <Radio.Group>\n              <Radio value={true}>公开</Radio>\n              <Radio value={false}>私有</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label='团队描述'>\n          {getFieldDecorator('description', {})(<Input placeholder='请输入团队描述' />)}\n        </Form.Item>\n        <Form.Item label='成员'>\n          {getFieldDecorator(\n            'members',\n            {}\n          )(\n            <Select\n              mode='multiple'\n              onSearch={handleSearch}\n              filterOption={false}\n              notFoundContent={null}\n              placeholder='请选择成员'\n            >\n              {props.userList.list.map(item => (\n                <Option key={item.id} value={item.id}>\n                  {item.nickname || item.username}\n                </Option>\n              ))}\n            </Select>\n          )}\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default Form.create<Props>()(TeamAddModel);\n","import { Modal, Form, Input, Select, Radio, Spin } from 'antd';\nimport * as React from 'react';\nimport { formItemLayout } from '@/constants';\nimport { FormComponentProps } from 'antd/lib/form';\nimport { IUserListParam, IUserList, ITeamAddParam, ITeamInfo, ITeamUpdateParam } from '@/api';\nimport { toastformError } from '@/utils';\n\nimport { IAction } from '@/types';\n\nimport debounce from 'lodash/debounce';\n\nconst { Option } = Select;\ninterface Props extends FormComponentProps {\n  visible: boolean;\n  onClose: (param: boolean) => void;\n  userList: IUserList;\n  orginInfo: ITeamInfo;\n  onSearchUser: (param: IUserListParam) => IAction;\n  onSubmit: (param: ITeamUpdateParam) => IAction;\n}\n\nconst TeamUpdateModel = (props: Props) => {\n  const { getFieldDecorator, resetFields, validateFields } = props.form;\n  React.useEffect(() => {\n    resetFields();\n    //第一次\n    if (props.visible && !props.userList.list.length) {\n      props.onSearchUser({ page: 1, pageSize: 50 });\n    }\n  }, [props.visible]);\n  const handleSubmit = (e: React.MouseEvent) => {\n    e.preventDefault();\n    validateFields((err, values) => {\n      if (err) {\n        toastformError(err);\n        return;\n      }\n      props.onSubmit({ id: props.orginInfo.id, ...values });\n      props.onClose(false);\n    });\n  };\n\n  const handleSearch = debounce((value: string) => {\n    props.onSearchUser({ nickname: value, page: 1, pageSize: 50 });\n  }, 800);\n\n  return (\n    <Modal onOk={handleSubmit} title='编辑团队' visible={props.visible} onCancel={() => props.onClose(false)}>\n      <Form layout='horizontal' {...formItemLayout}>\n        <Form.Item label='团队Owner'>\n          {getFieldDecorator('creatorId', {\n            initialValue: props.orginInfo.creator.id\n          })(\n            <Select\n              showSearch\n              onSearch={handleSearch}\n              filterOption={false}\n              notFoundContent={null}\n              placeholder='请选择团队owner'\n            >\n              {props.userList.list.map(item => (\n                <Option key={item.id} value={item.id}>\n                  {item.nickname || item.username}\n                </Option>\n              ))}\n            </Select>\n          )}\n        </Form.Item>\n\n        <Form.Item label='团队名称'>\n          {getFieldDecorator('name', {\n            initialValue: props.orginInfo.name,\n            rules: [{ required: true, message: '请输入团队名称' }]\n          })(<Input placeholder='请输入团队名称' />)}\n        </Form.Item>\n\n        <Form.Item label='公开'>\n          {getFieldDecorator('public', {\n            initialValue: props.orginInfo.public\n          })(\n            <Radio.Group>\n              <Radio value={true}>公开</Radio>\n              <Radio value={false}>私有</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label='团队描述'>\n          {getFieldDecorator('description', { initialValue: props.orginInfo.description })(\n            <Input placeholder='请输入团队描述' />\n          )}\n        </Form.Item>\n        <Form.Item label='成员'>\n          {getFieldDecorator('members', { initialValue: props.orginInfo.members.map(item => item.id) })(\n            <Select\n              mode='multiple'\n              onSearch={handleSearch}\n              filterOption={false}\n              notFoundContent={null}\n              placeholder='请选择成员'\n            >\n              {props.userList.list.map(item => (\n                <Option key={item.id} value={item.id}>\n                  {item.nickname || item.username}\n                </Option>\n              ))}\n            </Select>\n          )}\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default Form.create<Props>()(TeamUpdateModel);\n","import { Form, Input, Button, Select } from 'antd';\nimport * as React from 'react';\nimport { formItemLayout } from '@/constants';\nimport { FormComponentProps } from 'antd/lib/form';\nimport { ITeamListParam } from '@/api';\nimport { toastformError } from '@/utils';\n\nconst { Option } = Select;\ninterface Props extends FormComponentProps {\n  onSubmit: (param: ITeamListParam) => any;\n  defaultValue: ITeamListParam;\n}\n\nconst TeamListForm = (props: Props) => {\n  const { getFieldDecorator, setFields } = props.form;\n\n  const handleRelevanceChange = () => {\n    setFields({ name: '' });\n    setTimeout(() => {\n      handleSubmit();\n    }, 0);\n  };\n\n  const handleSubmit = (e?: React.FormEvent) => {\n    if (e) {\n      e.preventDefault();\n    }\n\n    props.form.validateFields((err, values) => {\n      if (err) {\n        toastformError(err);\n        return;\n      }\n      props.onSubmit({ ...values, page: 1, pageSize: 20 });\n    });\n  };\n  return (\n    <Form onSubmit={handleSubmit} layout='inline'>\n      <Form.Item>\n        {getFieldDecorator('relevance', {\n          initialValue: +props.defaultValue.relevance\n        })(\n          <Select onChange={handleRelevanceChange} style={{ width: 100 }}>\n            <Option value={1}>我的团队</Option>\n            <Option value={0}>所有团队</Option>\n          </Select>\n        )}\n      </Form.Item>\n      <Form.Item>\n        {getFieldDecorator('name', {\n          initialValue: props.defaultValue.name\n        })(<Input placeholder='根据团队名称查询' />)}\n      </Form.Item>\n      {/* <Form.Item>\n        <Button type='primary' htmlType='submit'>\n          查询\n        </Button>\n      </Form.Item> */}\n    </Form>\n  );\n};\n\nexport default Form.create<Props>()(TeamListForm);\n","import * as React from 'react';\nimport style from './TeamList.module.less';\nimport { connect } from 'react-redux';\nimport { IStoreState, IAction } from '@/types';\nimport { doGetTeamList, doAddTeam, doDeleteTeam, doGetUserList, doUpdateTeam } from '@/store/actions';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { Modal, List, Avatar, Skeleton, Button, Icon, Popconfirm } from 'antd';\nimport {\n  ITeamInfo,\n  ITeamListParam,\n  ITeamList,\n  IUserListParam,\n  ITeamAddParam,\n  IUserList,\n  ITeamUpdateParam,\n  IUserInfo\n} from '@/api';\nimport AvatarText from '@/components/AvatarText';\nimport TeamAddModal from './components/TeamAddModal';\nimport TeamUpdateModal from './components/TeamUpdateModal';\nimport TeamListForm from './components/TeamListForm';\nimport { ROUTE_PATH } from '@/constants';\nimport { Link } from 'react-router-dom';\n\ninterface Props {\n  onGetTeamList: (param: ITeamListParam) => IAction;\n  onGetUserList: (param: IUserListParam) => IAction;\n  onAddTeam: (param: ITeamAddParam) => IAction;\n  onUpdateTeam: (param: ITeamUpdateParam) => IAction;\n  userList: IUserList;\n  teamList: ITeamList;\n  teamListLoading: boolean;\n  teamListParam: ITeamListParam;\n  onDeleteTeam: (id: number) => IAction;\n  userInfo: IUserInfo;\n}\n\nconst TeamList = ({\n  onGetTeamList,\n  teamList,\n  teamListLoading,\n  onGetUserList,\n  userList,\n  onAddTeam,\n  onDeleteTeam,\n  onUpdateTeam,\n  teamListParam,\n  userInfo\n}: Props) => {\n  const [addTeamVisible, setaddTeamVisible] = React.useState(false);\n  const [updateTeamVisible, setupdateTeamVisible] = React.useState(false);\n  const [selectedTeam, setselectedTeam] = React.useState<ITeamInfo>({\n    name: '',\n    description: '',\n    creator: {\n      id: null,\n      nickname: '',\n      username: ''\n    },\n    members: [],\n    id: null,\n    public: false\n  });\n\n  const handleUpdateTeam = (info: ITeamInfo) => {\n    setselectedTeam(info);\n    setupdateTeamVisible(true);\n  };\n  return (\n    <div className={style.wrapper}>\n      <TeamAddModal\n        onSearchUser={onGetUserList}\n        userList={userList}\n        visible={addTeamVisible}\n        onClose={setaddTeamVisible}\n        onSubmit={onAddTeam}\n      ></TeamAddModal>\n      <TeamUpdateModal\n        orginInfo={selectedTeam}\n        onSearchUser={onGetUserList}\n        userList={userList}\n        visible={updateTeamVisible}\n        onClose={setupdateTeamVisible}\n        onSubmit={onUpdateTeam}\n      ></TeamUpdateModal>\n\n      <div className={style.header}>\n        <div className='app-fl'>\n          <TeamListForm defaultValue={teamListParam} onSubmit={onGetTeamList}></TeamListForm>\n        </div>\n        <Button type='primary' className='app-fr' onClick={() => setaddTeamVisible(true)}>\n          新建团队\n        </Button>\n      </div>\n      <List\n        className={style.itemList}\n        itemLayout='horizontal'\n        dataSource={teamList.list}\n        renderItem={item => (\n          <List.Item\n            key={item.id}\n            actions={\n              userInfo.id === item.creator.id && [\n                <a key='list-edit' onClick={() => handleUpdateTeam(item)}>\n                  <Icon type='form' />\n                  编辑\n                </a>,\n                <Popconfirm\n                  key='list-delete'\n                  onConfirm={() => onDeleteTeam(item.id)}\n                  title='团队删除后不可恢复,确定要删除?'\n                  okText='删除'\n                  cancelText='取消'\n                >\n                  <a>\n                    <Icon type='delete' />\n                    删除\n                  </a>\n                </Popconfirm>\n              ]\n            }\n          >\n            <List.Item.Meta\n              avatar={<AvatarText info={item.creator} />}\n              title={<Link to={ROUTE_PATH.teamInfo + '?teamId=' + item.id}>{item.name}</Link>}\n              description={item.description}\n            />\n            <div className={style.memberBox}>\n              {item.members.map(member => (\n                <AvatarText key={member.id} size='mini' color='#999' info={member} />\n              ))}\n            </div>\n          </List.Item>\n        )}\n      />\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) =>\n  bindActionCreators(\n    {\n      onGetTeamList: params => {\n        return doGetTeamList.request(params);\n      },\n      onGetUserList: param => {\n        return doGetUserList.request(param);\n      },\n      onAddTeam: param => {\n        return doAddTeam.request(param);\n      },\n      onDeleteTeam: param => {\n        return doDeleteTeam.request(param);\n      },\n      onUpdateTeam: param => {\n        return doUpdateTeam.request(param);\n      }\n    },\n    dispatch\n  );\n\nconst mapStateToProps = (state: IStoreState) => {\n  const { teamList, teamListLoading, teamListParam } = state.team;\n  const { userList, userInfo } = state.app;\n  return {\n    teamList,\n    userInfo,\n    userList,\n    teamListLoading,\n    teamListParam\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamList);\n","import * as React from 'react';\nimport style from './AvatarText.module.less';\nimport { Popover } from 'antd';\n\ninterface Props {\n  size?: string;\n  color?: string;\n  info: {\n    nickname: string;\n    username: string;\n  };\n}\n\nconst AvatarText = ({ info, size = '', color = null }: Props) => {\n  const name = info.nickname || info.username || '无名';\n  const content = (\n    <div>\n      <p>{info.nickname || '匿名'}</p>\n      <p>{info.username}</p>\n    </div>\n  );\n  return (\n    <Popover placement='bottom' content={content}>\n      <div style={{ background: color }} className={style.wrapper + ' ' + style[size]}>\n        {/^\\w*$/.test(name) ? name.substr(0, 4) : name.substr(-2)}\n      </div>\n    </Popover>\n  );\n};\nexport default AvatarText;\n"],"sourceRoot":""}