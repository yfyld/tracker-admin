{"version":3,"sources":["components/Filter.tsx","components/Indicator.module.less","components/Indicator.tsx","components/Filter.module.less","pages/analyse/components/AnalyseHeader.module.less","components/ReportAppendBoard.tsx","pages/analyse/components/AnalyseHeader.tsx","components/Dimension.tsx","components/Dimension.module.less","pages/analyse/AnalyseEvent.module.less","pages/analyse/AnalyseEvent.tsx"],"names":["Option","Select","OptGroup","Filter","fieldList","list","EVENT_ATTRS","filterInfo","onChange","React","recommend","setrecommend","handleFieldChange","value","index","newFilterInfo","JSON","parse","stringify","filterValues","key","type","field","find","handleFilterTypeChange","handleFilterValueChange","length","className","style","wrapper","size","onClick","filterType","line","form","map","filter","gutter","id","span","val","name","mode","width","tokenSeparators","item","dataSource","splice","handleClose","close","push","uuidv4","add","module","exports","Search","Input","connect","state","metadata","activeMetadataList","activeMetadataListParams","tagList","fieldListMap","dispatch","bindActionCreators","onGetActiveMetadataList","param","doGetActiveMetadataList","request","onGetFieldList","doGetFieldList","indicators","hasType","addText","hasCustomName","metadataparam","setmetadataparam","handleSelectMetadata","info","newIndicators","metadataCode","code","metadataName","projectId","handleFilterChange","handleTypeChange","handleSearch","setTimeout","allMetadata","indicatorInfo","center","color","trigger","overlay","content","e","stopPropagation","placeholder","target","onSearch","tags","split","Number","join","metadataBox","active","readOnly","select","defaultValue","customName","onBlur","event","handleNameChange","handleRemove","boardList","board","onAppendReportToBoard","params","doAppendReportToBoard","reportInfo","children","appendedBoardIds","setappendedBoardIds","placement","onVisibleChange","isExist","boards","disabled","record","reportId","boardIds","message","title","report","onAddReport","doAddReport","onUpdateReport","doUpdateReport","data","useState","newReportInfo","setnewReportInfo","useEffect","btns","icon","newInfo","description","Dimension","dimension","Group","Collapse","Panel","project","projectInfo","analyse","eventAnalyseData","eventAnalyseParam","analyseLoading","onGetEventAnalyseData","doGetEventAnalyse","handleChange","rule","ruleSection","ruleTitle","preview","pickerProps","allowClear","time","dateType","dateEnd","dateStart","offset","compact","timeUnit","spinning","height"],"mappings":"sOAQQA,EAAqBC,IAArBD,OAAqBC,IAAbC,SA6JDC,IArJA,SAAC,GAAwE,IAAD,IAArEC,iBAAqE,MAAzD,CAAEC,KAAMC,KAAiD,EAAlCC,EAAkC,EAAlCA,WAAYC,EAAsB,EAAtBA,SAAsB,EACnDC,WAAyB,IAD0B,mBAC9EC,EAD8E,KACnEC,EADmE,KAE/EC,EAAoB,SAACC,EAAeC,GACxC,IAAMC,EAA6BC,KAAKC,MAAMD,KAAKE,UAAUX,IAC7DQ,EAAcI,aAAaL,GAAOM,IAAMP,EACxCE,EAAcI,aAAaL,GAAOO,KAAO,QACzCN,EAAcI,aAAaL,GAAOD,MAAQ,GAC1C,IAAMS,EAAQlB,EAAUC,KAAKkB,MAAK,SAAAD,GAAK,OAAIA,EAAMT,QAAUA,KACvDS,GACFX,EAAaW,EAAMZ,WAGrBF,EAASO,IAGLS,EAAyB,SAACX,EAAeC,GAC7C,IAAMC,EAA6BC,KAAKC,MAAMD,KAAKE,UAAUX,IAC7DQ,EAAcI,aAAaL,GAAOO,KAAOR,EAEvCE,EAAcI,aAAaL,GAAOD,MADtB,UAAVA,GAA+B,aAAVA,EACmB,GACvB,YAAVA,EACiC,CAAC,KAAM,MAEP,KAE5CL,EAASO,IAGLU,EAA0B,SAACZ,EAAeC,GAC9C,IAAMC,EAA6BC,KAAKC,MAAMD,KAAKE,UAAUX,IAC7DQ,EAAcI,aAAaL,GAAOD,MAAQA,EAC1CL,EAASO,IA0BX,OACE,2BACGR,EAAWY,aAAaO,OAAS,GAChC,uBAAKC,UAAWC,IAAMC,SACnBtB,EAAWY,aAAaO,OAAS,GAChC,uBAAKC,UAAWC,IAAMP,MACpB,gBAAC,IAAD,CAAQS,KAAK,QAAQC,QAZF,WAC7B,IAAMhB,EAA6BC,KAAKC,MAAMD,KAAKE,UAAUX,IAC7DQ,EAAciB,WAA0C,QAA7BjB,EAAciB,WAAuB,KAAO,MACvExB,EAASO,KAU8B,QAA1BR,EAAWyB,WAAuB,SAAM,UAE3C,uBAAKL,UAAWC,IAAMK,QAG1B,uBAAKN,UAAWC,IAAMM,MACnB3B,EAAWY,aAAagB,KAAI,SAACC,EAAQtB,GAAT,OAC3B,gBAAC,IAAD,CAAKuB,OAAQ,GAAIjB,IAAKgB,EAAOE,IAC3B,gBAAC,IAAD,CAAKC,KAAM,GACT,gBAAC,IAAD,CAAQ1B,MAAOuB,EAAOhB,IAAKZ,SAAU,SAACgC,GAAD,OAAiB5B,EAAkB4B,EAAK1B,KAC1EV,EAAUC,KAAK8B,KAAI,SAAAb,GAAK,OACvB,gBAACtB,EAAD,CAAQa,MAAOS,EAAMT,MAAOO,IAAKE,EAAMT,OACpCS,EAAMmB,WAKf,gBAAC,IAAD,CAAKF,KAAM,GACT,gBAAC,IAAD,CAAQ1B,MAAOuB,EAAOf,KAAMb,SAAU,SAACgC,GAAD,OAAiBhB,EAAuBgB,EAAK1B,KACjF,gBAACd,EAAD,CAAQa,MAAM,SAAd,gBACA,gBAACb,EAAD,CAAQa,MAAM,YAAd,sBACA,gBAACb,EAAD,CAAQa,MAAM,SAAd,gBACA,gBAACb,EAAD,CAAQa,MAAM,UAAd,gBAEA,gBAACb,EAAD,CAAQa,MAAM,WAAd,gBACA,gBAACb,EAAD,CAAQa,MAAM,QAAd,gBACA,gBAACb,EAAD,CAAQa,MAAM,WAAd,gBAEA,gBAACb,EAAD,CAAQa,MAAM,WAAd,gBACA,gBAACb,EAAD,CAAQa,MAAM,cAAd,sBACA,gBAACb,EAAD,CAAQa,MAAM,WAAd,gBACA,gBAACb,EAAD,CAAQa,MAAM,cAAd,sBACA,gBAACb,EAAD,CAAQa,MAAM,SAAd,4BACA,gBAACb,EAAD,CAAQa,MAAM,YAAd,oCAGa,YAAhBuB,EAAOf,MACU,eAAhBe,EAAOf,MACS,UAAhBe,EAAOf,MACS,WAAhBe,EAAOf,MACS,UAAhBe,EAAOf,MACS,aAAhBe,EAAOf,MACL,gBAAC,IAAD,CAAKkB,KAAM,GACQ,UAAhBH,EAAOf,MAAoC,aAAhBe,EAAOf,KACjC,gBAAC,IAAD,CACER,MAAOuB,EAAOvB,MACdL,SAAU,SAACgC,GAAD,OAAiBf,EAAwBe,EAAK1B,IACxD4B,KAAK,OACLd,MAAO,CAAEe,MAAO,QAChBC,gBAAiB,CAAC,MAEjBlC,EAAUyB,KAAI,SAAAU,GAAI,OACjB,gBAAC7C,EAAD,CAAQoB,IAAKyB,EAAMhC,MAAOgC,GACvBA,OAKP,gBAAC,IAAD,CACEhC,MAAOuB,EAAOvB,MACdiC,WAAYpC,EACZkB,MAAO,CAAEe,MAAO,QAChBnC,SAAU,SAACgC,GAAD,OAAcf,EAAwBe,EAAK1B,OAK/D,gBAAC,IAAD,CAAKyB,KAAM,GACT,uBAAKR,QAAS,kBAlGV,SAACjB,GACnB,IAAMC,EAA6BC,KAAKC,MAAMD,KAAKE,UAAUX,IAC7DQ,EAAcI,aAAa4B,OAAOjC,EAAO,GACzCN,EAASO,GA+FyBiC,CAAYlC,IAAQa,UAAW,YAAcC,IAAMqB,OACrE,gBAAC,IAAD,CAAM5B,KAAK,yBAQzB,qBAAGU,QArGW,WAChB,IAAMhB,EAA6BC,KAAKC,MAAMD,KAAKE,UAAUX,IAC7DQ,EAAcI,aAAa+B,KAAK,CAC9B7B,KAAM,KACND,IAAK,KACLP,MAAO,KACPyB,GAAIa,gBAEN3C,EAASO,IA6FgBY,UAAWC,IAAMwB,KACtC,gBAAC,IAAD,CAAM/B,KAAK,gBADb,+B,qBC5JNgC,EAAOC,QAAU,CAAC,QAAU,2BAA2B,OAAS,0BAA0B,QAAU,2BAA2B,OAAS,0BAA0B,YAAc,+BAA+B,OAAS,0BAA0B,OAAS,4B,iwBCoBnPtD,EAAqBC,IAArBD,OAEAuD,GAFqBtD,IAAbC,SAEGsD,IAAXD,QA6OOE,iBApBS,SAACC,GAAwB,IAAD,EACkCA,EAAMC,SACtF,MAAO,CACLC,mBAH4C,EACtCA,mBAGNC,yBAJ4C,EAClBA,yBAI1BC,QAL4C,EACQA,QAKpDC,aAN4C,EACiBA,iBAStC,SAACC,GAAD,OACzBC,YACE,CACEC,wBAAyB,SAACC,GAAD,OAAWC,IAAwBC,QAAQF,IACpEG,eAAgB,SAACH,GAAD,OAAWI,IAAeF,QAAQF,KAGpDH,KAGWP,EA3NG,SAAC,GAaL,IAZZe,EAYW,EAZXA,WACAZ,EAWW,EAXXA,mBACAC,EAUW,EAVXA,yBACArD,EASW,EATXA,SACAuD,EAQW,EARXA,aACAU,EAOW,EAPXA,QAOW,IANXC,eAMW,MAND,4BAMC,MALXC,qBAKW,aAJXtD,YAIW,MAJJ,KAII,EAHXyC,EAGW,EAHXA,QACAI,EAEW,EAFXA,wBACAI,EACW,EADXA,eACW,EAC+B7D,WAAA,KAAoBoD,IADnD,mBACJe,EADI,KACWC,EADX,KAMX,SAASC,EAAqBC,EAAqBjE,GACjD,IAAMkE,EAAkChE,KAAKC,MAAMD,KAAKE,UAAUsD,IAClEQ,EAAclE,GAAOmE,aAAeF,EAAKG,KACzCF,EAAclE,GAAOqE,aAAeJ,EAAKtC,KACzCjC,EAASwE,EAAeR,EAAW1D,IACnCwD,EAAe,CAAEc,UAAWL,EAAKK,UAAWH,aAAcF,EAAKG,OAGjE,SAASG,EAAmBN,EAAmBjE,GAC7C,IAAMkE,EAAkChE,KAAKC,MAAMD,KAAKE,UAAUsD,IAClEQ,EAAclE,GAAOsB,OAAS2C,EAC9BvE,EAASwE,GAGX,SAASM,EAAiBzE,EAAeC,GACvC,IAAMkE,EAAkChE,KAAKC,MAAMD,KAAKE,UAAUsD,IAClEQ,EAAclE,GAAOO,KAAOR,EAC5BL,EAASwE,GA8BX,SAASO,EAAapB,GACpBU,EAAiBV,GACjBqB,YAAW,WACTtB,EAAwBC,KACvB,KAvDL1D,aAAgB,WACdoE,EAAiBhB,KAChB,CAACA,IAwDJ,IAAM4B,EAAc,CAClBhD,KAAM,2BACNyC,KAAM,iBAGR,OACE,uBAAKvD,UAAWC,IAAMC,SACpB,2BACG2C,EAAWrC,KAAI,SAACuD,EAAe5E,GAAhB,OACd,uBAAKM,IAAKsE,EAAcpD,IACtB,gBAAC,IAAD,CAAKX,UAAWC,IAAMiB,KAAMR,OAAQ,IAClC,gBAAC,IAAD,CAAKE,KAAM,GACT,uBAAKZ,UAAWC,IAAM+D,QACpB,gBAAC,IAAD,CAAKC,MAAM,QAAQ9E,EAAQ,KAG/B,gBAAC,IAAD,CAAKyB,KAAM,GACT,gBAAC,IAAD,CACEsD,QAAS,CAAC,SACVC,QACE,uBAAKnE,UAAWC,IAAMmE,SACpB,uBAAKhE,QAAS,SAACiE,GAAD,OAAOA,EAAEC,oBACrB,gBAAC1C,EAAD,CACE2C,YAAY,2BACZrF,MAAO+D,EAAcnC,KACrBjC,SAAU,SAACwF,GAAD,OAAOnB,EAAiB,EAAD,GAAMD,EAAN,CAAqBnC,KAAMuD,EAAEG,OAAOtF,UACrEuF,SAAU,SAAC3D,GAAD,OAAU8C,EAAa,EAAD,GAAMX,EAAN,CAAqBnC,WACrDb,MAAO,CAAEe,MAAO,OANpB,OASE,gBAAC,IAAD,CACEuD,YAAY,uCACZtE,MAAO,CAAEe,MAAO,KAChBD,KAAK,WACL7B,MAAO+D,EAAcyB,KAAOzB,EAAcyB,KAAKC,MAAM,KAAKnE,KAAI,SAACU,GAAD,OAAU0D,OAAO1D,MAAS,GACxFrC,SAAU,SAAC6F,GAAD,OAAoBd,EAAa,EAAD,GAAMX,EAAN,CAAqByB,KAAMA,EAAKG,KAAK,UAE9E1C,EAAQzD,KAAK8B,KAAI,SAACU,GAAD,OAChB,gBAAC7C,EAAD,CAAQoB,IAAKyB,EAAKP,GAAIzB,MAAOgC,EAAKP,IAC/BO,EAAKJ,WAMd,uBAAKd,UAAWC,IAAM6E,aACpB,wBACE1E,QAAS,kBAAM+C,EAAqBW,EAAa3E,IACjDa,UAAW8D,EAAYP,OAASQ,EAAcT,aAAerD,IAAM8E,OAAS,GAC5EtF,IAAKqE,EAAYP,MAHnB,4BAQCtB,EAAmBvD,KACjB+B,QAAO,SAACS,GACP,OAAKxB,GAGEwB,EAAKxB,OAASA,KAEtBc,KAAI,SAACU,GAAD,OACH,wBACEd,QAAS,kBAAM+C,EAAqBjC,EAAM/B,IAC1Ca,UAAWkB,EAAKqC,OAASQ,EAAcT,aAAerD,IAAM8E,OAAS,GACrEtF,IAAKyB,EAAKqC,MAETrC,EAAKJ,YAOlB,gBAAC,IAAD,CAAO5B,MAAO6E,EAAcP,aAAcwB,UAAQ,EAAChF,UAAWC,IAAMgF,WAGvEjC,GACC,gBAAC,IAAD,CAAKpC,KAAM,GACT,gBAAC,IAAD,CACEsE,aAAcnB,EAAcoB,WAC5BZ,YAAY,iCACZa,OAAQ,SAACC,GAAD,OApH1B,SAA0BnG,EAAeC,GACvC,IAAMkE,EAAkChE,KAAKC,MAAMD,KAAKE,UAAUsD,IAClEQ,EAAclE,GAAOgG,WAAajG,EAClCL,EAASwE,GAiH0BiC,CAAiBD,EAAMb,OAAOtF,MAAOC,OAI7D2D,GACC,gCACE,gBAAC,IAAD,CAAKlC,KAAM,GACT,uBAAKZ,UAAWC,IAAM+D,QAAtB,WAEF,gBAAC,IAAD,CAAKpD,KAAM,GACT,gBAAC,IAAD,CAAQ/B,SAAU,SAACgC,GAAD,OAAiB8C,EAAiB9C,EAAK1B,IAAQD,MAAO6E,EAAcrE,MACpF,gBAACrB,EAAD,CAAQa,MAAM,MAAd,sBACA,gBAACb,EAAD,CAAQa,MAAM,MAAd,sBACA,gBAACb,EAAD,CAAQa,MAAM,OAAd,4BACA,gBAACb,EAAD,CAAQa,MAAM,OAAd,4BACA,gBAACb,EAAD,CAAQa,MAAM,OAAd,qCAMP2D,EAAW9C,OAAS,GACnB,gBAAC,IAAD,CAAKa,KAAM,GACT,uBAAKR,QAAS,kBAtH9B,SAAsBjB,GACpB,IAAMkE,EAAkChE,KAAKC,MAAMD,KAAKE,UAAUsD,IAClEQ,EAAcjC,OAAOjC,EAAO,GAC5BN,EAASwE,EAAeR,EAAW1D,IAmHDoG,CAAapG,IAAQa,UAAW,YAAcC,IAAM+D,QACtE,gBAAC,IAAD,CAAMtE,KAAK,aAKnB,uBAAKM,UAAWC,IAAMQ,QACpB,gBAAC,IAAD,CACEhC,UAAW2D,EAAa2B,EAAcT,eAAiB,CAAE5E,KAAMC,KAC/DC,WAAYmF,EAActD,OAC1B5B,SAAU,SAAC4B,GAAD,OAAYiD,EAAmBjD,EAAQtB,YAM3D,qBAAGiB,QArJP,WACE,IAAMiD,EAAkChE,KAAKC,MAAMD,KAAKE,UAAUsD,IAClEQ,EAAc9B,KAAK,CACjB+B,aAAc,gBACdE,aAAc,2BACd9D,KAAM,KACNiB,GAAIa,cACJf,OAAQ,CACNJ,WAAY,MACZb,aAAc,MAGlBX,EAASwE,KAyIiBN,Q,qBC1O9BrB,EAAOC,QAAU,CAAC,QAAU,wBAAwB,KAAO,qBAAqB,KAAO,qBAAqB,KAAO,qBAAqB,MAAQ,sBAAsB,IAAM,sB,qBCA5KD,EAAOC,QAAU,CAAC,QAAU,+BAA+B,KAAO,4BAA4B,MAAQ,6BAA6B,YAAc,qC,uKC4ElIG,eAhBS,SAACC,GAEvB,MAAO,CACLyD,UAFoBzD,EAAM0D,MAApBD,cAKiB,SAACnD,GAAD,OACzBC,YACE,CACEoD,sBAAuB,SAACC,GACtB,OAAOC,IAAsBlD,QAAQiD,KAGzCtD,KAGWP,EA9DW,SAAC,GAAuE,IAArE4D,EAAoE,EAApEA,sBAAuBF,EAA6C,EAA7CA,UAAWK,EAAkC,EAAlCA,WAAYC,EAAsB,EAAtBA,SAAsB,EAC/ChH,WAAe,IADgC,mBACxFiH,EADwF,KACtEC,EADsE,KAW/F,OACE,gBAAC,IAAD,CACEC,UAAU,SACV/B,QAAQ,QACRgC,gBAAiB,SAAChH,GAAD,OAAWA,GAAS8G,EAAoB,KACzD5B,QACE,2BACE,gBAAC,IAAD,CACEjE,KAAK,QACLtB,SAAU,SAACwF,GAAD,OAAiB2B,EAAoB3B,IAC/CnF,MAAO6G,EACP9F,MAAO,CAAEe,MAAO,KAChBD,KAAK,YAEJyE,EAAU9G,KAAK8B,KAAI,SAACU,GACnB,IAAMiF,IAAYN,EAAWO,OAAOxG,MAAK,SAACiB,GAAD,OAASA,EAAIF,KAAOO,EAAKP,MAClE,OACE,gBAAC,IAAOtC,OAAR,CAAeoB,IAAKyB,EAAKP,GAAIzB,MAAOgC,EAAKP,GAAI0F,SAAUF,GACpDjF,EAAKJ,UAZhB,OAkBE,gBAAC,IAAD,CAAQX,KAAK,QAAQC,QAAS,kBAhCLkG,EAgCmCT,OA/B7DE,EAAiBhG,OAItB2F,EAAsB,CAAEa,SAAUD,EAAO3F,GAAI6F,SAAUT,EAAkBtC,UAAWoC,EAAWpC,YAH7FgD,IAAQrD,KAAK,mCAFjB,IAAiCkD,IAgCzB,iBAKJI,MAAM,4BAELZ,M,yjBCiCQhE,iBAnBS,SAACC,GAEvB,MAAO,CACL8D,WAFqB9D,EAAM4E,OAArBd,eAKiB,SAACxD,GAAD,OACzBC,YACE,CACEsE,YAAa,SAACjB,GACZ,OAAOkB,IAAYnE,QAAQiD,IAE7BmB,eAAgB,SAACnB,GACf,OAAOoB,KAAerE,QAAQiD,KAGlCtD,KAGWP,EA3EO,SAAC,GAA8D,IAA5D+D,EAA2D,EAA3DA,WAAYiB,EAA+C,EAA/CA,eAAgBF,EAA+B,EAA/BA,YAAaI,EAAkB,EAAlBA,KAAkB,EACxClI,IAAMmI,SAASpB,GADyB,mBAC3EqB,EAD2E,KAC5DC,EAD4D,OAElCrI,IAAMmI,SAAS,IAFmB,6BAGlFnI,IAAMsI,WAAU,WACdD,EAAiBtB,KAChB,CAACA,IAeJ,OACE,yBAAK7F,UAAWC,IAAMC,SACpB,wBAAIF,UAAWC,IAAMyG,OACnB,kBAAC,IAAD,CACEhH,KAAK,OACLb,SAAU,SAACwF,GAAD,OAAO8C,EAAiB,EAAD,GAAMD,EAAN,CAAqBpG,KAAMuD,EAAEG,OAAOtF,UACrEA,MAAOgI,EAAcpG,QAGzB,yBAAKd,UAAWC,IAAMoH,MACpB,kBAAC,IAAD,CAAQ3H,KAAK,OAAO4H,KAAK,OAAOlH,QAvBnB,WACY,qBAAlByF,EAAWlF,GACpBmG,EAAe,EAAD,CAAGnG,GAAI,MAASuG,EAAhB,CAA+BF,UAE7CJ,EAAY,EAAD,GAAMM,EAAN,CAAqBF,YAmB9B,gBAGCE,EAAcvG,IACb,kBAAC,IAAD,CAAQjB,KAAK,OAAO4H,KAAK,OAAOlH,QAnBnB,WACQ8G,EAAnBvG,GADkB,IACX4G,EADU,YACEL,EADF,QAEzBN,EAAY,EAAD,GAAMW,EAAN,CAAeP,YAiBpB,sBAKDE,EAAcvG,IACb,kBAAC,EAAD,CAAmBkF,WAAYqB,GAC7B,kBAAC,IAAD,CAAQxH,KAAK,OAAO4H,KAAK,eAAzB,wBAMN,yBAAKtH,UAAWC,IAAMuH,aACpB,kBAAC,IAAD,CACE3I,SAAU,SAACwF,GAAD,OAAO8C,EAAiB,EAAD,GAAMD,EAAN,CAAqBM,YAAanD,EAAEG,OAAOtF,UAC5EA,MAAOgI,EAAcM,oB,kCCjE/B,mEAMQnJ,EAAqBC,IAArBD,OAAqBC,IAAbC,SAiCDkJ,IAzBG,SAAC,GAAuE,IAAD,IAApEhJ,iBAAoE,MAAxD,CAAEC,KAAMC,KAAgD,EAAjC+I,EAAiC,EAAjCA,UAAW7I,EAAsB,EAAtBA,SACjE,OACE,uBAAKmB,UAAWC,IAAMC,SACpB,gBAAC,IAAD,CAAKF,UAAWC,IAAMiB,MACpB,gBAAC,IAAD,CAAKN,KAAM,GACT,uBAAKZ,UAAWC,IAAM+D,QAAtB,WAEF,gBAAC,IAAD,CAAKpD,KAAM,GACT,gBAAC,IAAD,CAAQ1B,MAAOwI,EAAW7I,SAAUA,GAClC,gBAACR,EAAD,CAAQa,MAAM,IAAd,gBACCT,EAAUC,KAAK8B,KAAI,SAAAb,GAAK,OACvB,gBAACtB,EAAD,CAAQa,MAAOS,EAAMT,MAAOO,IAAKE,EAAMT,OACpCS,EAAMmB,WAKf,gBAAC,IAAD,CAAKF,KAAM,GACT,uBAAKZ,UAAWC,IAAM+D,QAAtB,qB,qBC/BVtC,EAAOC,QAAU,CAAC,QAAU,2BAA2B,OAAS,4B,qBCAhED,EAAOC,QAAU,CAAC,QAAU,8BAA8B,QAAU,8BAA8B,YAAc,kCAAkC,UAAY,kC,wyBCgBtJtD,EAAWC,IAAXD,OAEAsJ,GADUC,IAAVC,MACUhG,IAAV8F,OAgIO7F,uBAnBS,SAACC,GACvB,IAAM0B,EAAY1B,EAAM+F,QAAQC,YAAYpH,GADE,EAEkBoB,EAAMiG,QACtE,MAAO,CACLvE,YACAwE,iBAL4C,EAEtCA,iBAINC,kBAN4C,EAEpBA,kBAKxBC,eAP4C,EAEDA,mBASpB,SAAC9F,GAAD,OACzBC,YACE,CACE8F,sBAAuB,SAAC5F,GAAD,OAA+B6F,IAAkB3F,QAAQF,KAElFH,KAGWP,EAvHM,SAAC,GAOR,IANZqG,EAMW,EANXA,eAEAC,EAIW,EAJXA,sBACA3E,EAGW,EAHXA,UACAwE,EAEW,EAFXA,iBACAC,EACW,EADXA,kBAEMI,EAAe,SAAClF,GACpBA,EAAKK,UAAYA,EACjB2E,EAAsBhF,IAGxB,OACE,yBAAKpD,UAAWC,IAAMC,SACpB,kBAAC,IAAD,CAAe8G,KAAI,KAAOkB,EAAP,CAA0BzE,gBAC7C,yBAAKzD,UAAWC,IAAMsI,MACpB,yBAAKvI,UAAWC,IAAMuI,aACpB,0BAAMxI,UAAWC,IAAMwI,WAAvB,iBACA,6BACE,kBAAC,IAAD,CACE3F,SAAO,EACPD,WAAYqF,EAAkBrF,WAC9BhE,SAAU,SAACgE,GAAD,OAAgByF,EAAa,EAAD,GAAMJ,EAAN,CAAyBrF,qBAOrE,yBAAK7C,UAAWC,IAAMuI,aACpB,0BAAMxI,UAAWC,IAAMwI,WAAvB,iBACA,kBAAC,IAAD,CACEf,UAAWQ,EAAkBR,UAC7B7I,SAAU,SAAC6I,GAAD,OAAeY,EAAa,EAAD,GAAMJ,EAAN,CAAyBR,mBAIlE,yBAAK1H,UAAWC,IAAMuI,aACpB,0BAAMxI,UAAWC,IAAMwI,WAAvB,iBACA,kBAAC,IAAD,CACE7J,WAAYsJ,EAAkBzH,OAC9B5B,SAAU,SAAC4B,GAAD,OAAY6H,EAAa,EAAD,GAAMJ,EAAN,CAAyBzH,iBAKjE,yBAAKT,UAAWC,IAAMyI,SACpB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK9H,KAAM,IACT,kBAAC,IAAD,CACE+H,YAAa,CAAEC,YAAY,GAC3B/J,SAAU,SAACgK,GAAD,OAAUP,EAAa,EAAD,GAAMJ,EAAN,GAA4BW,KAC5D3J,MAAO,CACL4J,SAAUZ,EAAkBY,SAC5BC,QAASb,EAAkBa,QAC3BC,UAAWd,EAAkBc,cAInC,kBAAC,IAAD,CAAKpI,KAAM,EAAGqI,OAAQ,GACpB,kBAACtB,EAAD,CAAOuB,SAAO,GACZ,kBAAC,IAAD,CACEjJ,MAAO,CAAEe,MAAO,OAChB9B,MAAOgJ,EAAkBxI,KACzBb,SAAU,SAACa,GAAD,OAAkB4I,EAAa,EAAD,GAAMJ,EAAN,CAAyBxI,YAEjE,kBAACrB,EAAD,CAAQa,MAAM,QAAd,sBACA,kBAACb,EAAD,CAAQa,MAAM,OAAd,gBACA,kBAACb,EAAD,CAAQa,MAAM,SAAd,gBACA,kBAACb,EAAD,CAAQa,MAAM,QAAd,iBAEF,kBAAC,IAAD,CACEe,MAAO,CAAEe,MAAO,OAChB9B,MAAOgJ,EAAkBiB,SACzBtK,SAAU,SAACsK,GAAD,OAAsBb,EAAa,EAAD,GAAMJ,EAAN,CAAyBiB,gBAErE,kBAAC9K,EAAD,CAAQa,MAAM,QAAd,sBACA,kBAACb,EAAD,CAAQa,MAAM,OAAd,gBACA,kBAACb,EAAD,CAAQa,MAAM,QAAd,gBACA,kBAACb,EAAD,CAAQa,MAAM,SAAd,gBACA,kBAACb,EAAD,CAAQa,MAAM,QAAd,iBAEF,kBAAC,IAAD,CAAQoI,KAAK,YAAb,mBAIN,6BACA,6BACA,kBAAC,IAAD,CAAM8B,SAAUjB,GACd,yBAAKlI,MAAO,CAAEoJ,OAAmC,UAA3BnB,EAAkBxI,KAAmB,IAAM,MAC/D,kBAAC,IAAD,CAAmBsH,KAAMiB,MAG7B","file":"static/js/8.269e52d8.chunk.js","sourcesContent":["import * as React from 'react';\nimport { Select, Row, Col, Icon, AutoComplete, Button } from 'antd';\nimport style from './Filter.module.less';\nimport { IListData } from '@/types';\nimport { IFieldInfo, IFilterInfo, IFilterValue } from '@/api';\nimport { SelectValue } from 'antd/lib/select';\nimport { v4 as uuidv4 } from 'uuid';\nimport { EVENT_ATTRS } from '@/constants';\nconst { Option, OptGroup } = Select;\n\ninterface Props {\n  fieldList?: IListData<IFieldInfo>;\n  filterInfo: IFilterInfo;\n  onChange: (filterInfo: IFilterInfo) => any;\n}\n\nconst Filter = ({ fieldList = { list: EVENT_ATTRS }, filterInfo, onChange }: Props) => {\n  const [recommend, setrecommend] = React.useState<string[]>([]);\n  const handleFieldChange = (value: string, index: number) => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterValues[index].key = value;\n    newFilterInfo.filterValues[index].type = 'equal';\n    newFilterInfo.filterValues[index].value = [];\n    const field = fieldList.list.find(field => field.value === value);\n    if (field) {\n      setrecommend(field.recommend);\n    }\n\n    onChange(newFilterInfo);\n  };\n\n  const handleFilterTypeChange = (value: string, index: number) => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterValues[index].type = value;\n    if (value === 'equal' || value === 'notEqual') {\n      newFilterInfo.filterValues[index].value = [];\n    } else if (value === 'between') {\n      newFilterInfo.filterValues[index].value = [null, null];\n    } else {\n      newFilterInfo.filterValues[index].value = null;\n    }\n    onChange(newFilterInfo);\n  };\n\n  const handleFilterValueChange = (value: string, index: number) => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterValues[index].value = value;\n    onChange(newFilterInfo);\n  };\n\n  const handleClose = (index: number) => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterValues.splice(index, 1);\n    onChange(newFilterInfo);\n  };\n\n  const handleAdd = () => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterValues.push({\n      type: null,\n      key: null,\n      value: null,\n      id: uuidv4()\n    });\n    onChange(newFilterInfo);\n  };\n\n  const handleChangeFilterType = () => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterType = newFilterInfo.filterType === 'AND' ? 'OR' : 'AND';\n    onChange(newFilterInfo);\n  };\n\n  return (\n    <div>\n      {filterInfo.filterValues.length > 0 && (\n        <div className={style.wrapper}>\n          {filterInfo.filterValues.length > 1 && (\n            <div className={style.type}>\n              <Button size='small' onClick={handleChangeFilterType}>\n                {filterInfo.filterType === 'AND' ? '且' : '或'}\n              </Button>\n              <div className={style.line}></div>\n            </div>\n          )}\n          <div className={style.form}>\n            {filterInfo.filterValues.map((filter, index) => (\n              <Row gutter={16} key={filter.id}>\n                <Col span={5}>\n                  <Select value={filter.key} onChange={(val: string) => handleFieldChange(val, index)}>\n                    {fieldList.list.map(field => (\n                      <Option value={field.value} key={field.value}>\n                        {field.name}\n                      </Option>\n                    ))}\n                  </Select>\n                </Col>\n                <Col span={3}>\n                  <Select value={filter.type} onChange={(val: string) => handleFilterTypeChange(val, index)}>\n                    <Option value='equal'>等于</Option>\n                    <Option value='notEqual'>不等于</Option>\n                    <Option value='isSet'>有值</Option>\n                    <Option value='notSet'>没值</Option>\n\n                    <Option value='greater'>大于</Option>\n                    <Option value='less'>小于</Option>\n                    <Option value='between'>区间</Option>\n\n                    <Option value='contain'>包含</Option>\n                    <Option value='notContain'>不包含</Option>\n                    <Option value='isEmpty'>为空</Option>\n                    <Option value='isNotEmpty'>不为空</Option>\n                    <Option value='rlike'>正则匹配</Option>\n                    <Option value='notrlike'>正则不匹配</Option>\n                  </Select>\n                </Col>\n                {filter.type !== 'isEmpty' &&\n                  filter.type !== 'isNotEmpty' &&\n                  filter.type !== 'isSet' &&\n                  filter.type !== 'notSet' &&\n                  filter.type !== 'rlike' &&\n                  filter.type !== 'notrlike' && (\n                    <Col span={8}>\n                      {filter.type === 'equal' || filter.type === 'notEqual' ? (\n                        <Select\n                          value={filter.value}\n                          onChange={(val: string) => handleFilterValueChange(val, index)}\n                          mode='tags'\n                          style={{ width: '100%' }}\n                          tokenSeparators={[',']}\n                        >\n                          {recommend.map(item => (\n                            <Option key={item} value={item}>\n                              {item}\n                            </Option>\n                          ))}\n                        </Select>\n                      ) : (\n                        <AutoComplete\n                          value={filter.value}\n                          dataSource={recommend}\n                          style={{ width: '100%' }}\n                          onChange={(val: any) => handleFilterValueChange(val, index)}\n                        />\n                      )}\n                    </Col>\n                  )}\n                <Col span={1}>\n                  <div onClick={() => handleClose(index)} className={'app-link ' + style.close}>\n                    <Icon type='minus-circle' />\n                  </div>\n                </Col>\n              </Row>\n            ))}\n          </div>\n        </div>\n      )}\n      <a onClick={handleAdd} className={style.add}>\n        <Icon type='plus-square' />\n        添加筛选\n      </a>\n    </div>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Indicator_wrapper__3B5qd\",\"select\":\"Indicator_select__1kP-z\",\"content\":\"Indicator_content__3-BaR\",\"center\":\"Indicator_center__3Oax_\",\"metadataBox\":\"Indicator_metadataBox__3wnAQ\",\"active\":\"Indicator_active__1aD9o\",\"filter\":\"Indicator_filter__lBazH\"};","import * as React from 'react';\nimport { Tag, Select, Row, Col, Icon, Popover, Input, Dropdown, Divider } from 'antd';\nimport style from './Indicator.module.less';\nimport {\n  IMetadataInfo,\n  IMetadataListParam,\n  IIndicatorInfo,\n  IFieldInfo,\n  IFilterInfo,\n  ITagList,\n  IFieldListParam\n} from '@/api';\nimport { IPageData, IAction, IStoreState, IListData } from '@/types';\nimport { connect } from 'react-redux';\n\nimport { bindActionCreators, Dispatch } from 'redux';\nimport Filter from './Filter';\nimport { v4 as uuidv4 } from 'uuid';\nimport { doGetActiveMetadataList, doGetFieldList } from '../store/actions';\nimport { IFieldListMap } from '@/store/reducers/metadata.reducer';\nimport { EVENT_ATTRS } from '@/constants';\nconst { Option, OptGroup } = Select;\n\nconst { Search } = Input;\n\ninterface Props {\n  activeMetadataList: IPageData<IMetadataInfo>;\n  activeMetadataListParams: IMetadataListParam;\n  index?: number;\n  fieldListMap: IFieldListMap;\n  indicators: IIndicatorInfo[];\n  onChange: (param: IIndicatorInfo[], changedValue?: IIndicatorInfo) => any;\n  hasType?: boolean;\n  addText?: string;\n  hasCustomName?: boolean;\n  type?: number;\n  tagList: ITagList;\n  onGetActiveMetadataList: (param: IMetadataListParam) => IAction;\n  onGetFieldList: (param: IFieldListParam) => IAction;\n}\n\nconst Indicator = ({\n  indicators,\n  activeMetadataList,\n  activeMetadataListParams,\n  onChange,\n  fieldListMap,\n  hasType,\n  addText = '+添加指标',\n  hasCustomName = false,\n  type = null,\n  tagList,\n  onGetActiveMetadataList,\n  onGetFieldList\n}: Props) => {\n  const [metadataparam, setmetadataparam] = React.useState({ ...activeMetadataListParams });\n  React.useEffect(() => {\n    setmetadataparam(activeMetadataListParams);\n  }, [activeMetadataListParams]);\n\n  function handleSelectMetadata(info: IMetadataInfo, index: number) {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators[index].metadataCode = info.code;\n    newIndicators[index].metadataName = info.name;\n    onChange(newIndicators, indicators[index]);\n    onGetFieldList({ projectId: info.projectId, metadataCode: info.code });\n  }\n\n  function handleFilterChange(info: IFilterInfo, index: number) {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators[index].filter = info;\n    onChange(newIndicators);\n  }\n\n  function handleTypeChange(value: string, index: number) {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators[index].type = value;\n    onChange(newIndicators);\n  }\n\n  function handleNameChange(value: string, index: number) {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators[index].customName = value;\n    onChange(newIndicators);\n  }\n\n  function handleAdd() {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators.push({\n      metadataCode: '_ALL_METADATA',\n      metadataName: '所有事件',\n      type: 'PV',\n      id: uuidv4(),\n      filter: {\n        filterType: 'AND',\n        filterValues: []\n      }\n    });\n    onChange(newIndicators);\n  }\n\n  function handleRemove(index: number) {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators.splice(index, 1);\n    onChange(newIndicators, indicators[index]);\n  }\n\n  function handleSearch(param: IMetadataListParam) {\n    setmetadataparam(param);\n    setTimeout(() => {\n      onGetActiveMetadataList(param);\n    }, 300);\n  }\n\n  const allMetadata = {\n    name: '所有事件',\n    code: '_ALL_METADATA'\n  } as IMetadataInfo;\n\n  return (\n    <div className={style.wrapper}>\n      <div>\n        {indicators.map((indicatorInfo, index) => (\n          <div key={indicatorInfo.id}>\n            <Row className={style.item} gutter={10}>\n              <Col span={1}>\n                <div className={style.center}>\n                  <Tag color='gold'>{index + 1}</Tag>\n                </div>\n              </Col>\n              <Col span={3}>\n                <Dropdown\n                  trigger={['click']}\n                  overlay={\n                    <div className={style.content}>\n                      <div onClick={(e) => e.stopPropagation()}>\n                        <Search\n                          placeholder='搜索事件'\n                          value={metadataparam.name}\n                          onChange={(e) => setmetadataparam({ ...metadataparam, name: e.target.value })}\n                          onSearch={(name) => handleSearch({ ...metadataparam, name })}\n                          style={{ width: 200 }}\n                        />\n                        &nbsp;\n                        <Select\n                          placeholder='根据标签筛选'\n                          style={{ width: 200 }}\n                          mode='multiple'\n                          value={metadataparam.tags ? metadataparam.tags.split(',').map((item) => Number(item)) : []}\n                          onChange={(tags: number[]) => handleSearch({ ...metadataparam, tags: tags.join(',') })}\n                        >\n                          {tagList.list.map((item) => (\n                            <Option key={item.id} value={item.id}>\n                              {item.name}\n                            </Option>\n                          ))}\n                        </Select>\n                      </div>\n\n                      <div className={style.metadataBox}>\n                        <span\n                          onClick={() => handleSelectMetadata(allMetadata, index)}\n                          className={allMetadata.code === indicatorInfo.metadataCode ? style.active : ''}\n                          key={allMetadata.code}\n                        >\n                          所有事件\n                        </span>\n\n                        {activeMetadataList.list\n                          .filter((item) => {\n                            if (!type) {\n                              return true;\n                            }\n                            return item.type === type;\n                          })\n                          .map((item) => (\n                            <span\n                              onClick={() => handleSelectMetadata(item, index)}\n                              className={item.code === indicatorInfo.metadataCode ? style.active : ''}\n                              key={item.code}\n                            >\n                              {item.name}\n                            </span>\n                          ))}\n                      </div>\n                    </div>\n                  }\n                >\n                  <Input value={indicatorInfo.metadataName} readOnly className={style.select} />\n                </Dropdown>\n              </Col>\n              {hasCustomName && (\n                <Col span={3}>\n                  <Input\n                    defaultValue={indicatorInfo.customName}\n                    placeholder='自定义名称'\n                    onBlur={(event) => handleNameChange(event.target.value, index)}\n                  />\n                </Col>\n              )}\n              {hasType && (\n                <>\n                  <Col span={1}>\n                    <div className={style.center}>的</div>\n                  </Col>\n                  <Col span={3}>\n                    <Select onChange={(val: string) => handleTypeChange(val, index)} value={indicatorInfo.type}>\n                      <Option value='PV'>总次数</Option>\n                      <Option value='UV'>用户数</Option>\n                      <Option value='APV'>人均次数</Option>\n                      <Option value='DPV'>日均次数</Option>\n                      <Option value='DUV'>日均用户数</Option>\n                    </Select>\n                  </Col>\n                </>\n              )}\n\n              {indicators.length > 1 && (\n                <Col span={1}>\n                  <div onClick={() => handleRemove(index)} className={'app-link ' + style.center}>\n                    <Icon type='close' />\n                  </div>\n                </Col>\n              )}\n            </Row>\n            <div className={style.filter}>\n              <Filter\n                fieldList={fieldListMap[indicatorInfo.metadataCode] || { list: EVENT_ATTRS }}\n                filterInfo={indicatorInfo.filter}\n                onChange={(filter) => handleFilterChange(filter, index)}\n              ></Filter>\n            </div>\n          </div>\n        ))}\n      </div>\n      <a onClick={handleAdd}>{addText}</a>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IStoreState) => {\n  const { activeMetadataList, activeMetadataListParams, tagList, fieldListMap } = state.metadata;\n  return {\n    activeMetadataList,\n    activeMetadataListParams,\n    tagList,\n    fieldListMap\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) =>\n  bindActionCreators(\n    {\n      onGetActiveMetadataList: (param) => doGetActiveMetadataList.request(param),\n      onGetFieldList: (param) => doGetFieldList.request(param)\n    },\n\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Indicator);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__9rptJ\",\"line\":\"Filter_line__eOPS4\",\"type\":\"Filter_type__2GtXQ\",\"form\":\"Filter_form__1lfK0\",\"close\":\"Filter_close__1AZpi\",\"add\":\"Filter_add__2YNj8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AnalyseHeader_wrapper__1r0g1\",\"btns\":\"AnalyseHeader_btns__G6iwS\",\"title\":\"AnalyseHeader_title__1X3LF\",\"description\":\"AnalyseHeader_description__1fJOY\"};","import * as React from 'react';\nimport { Popover, Select, Button, message } from 'antd';\nimport { IAction, IStoreState } from '@/types';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { IBoardList, IReportInfo, IReportAppendToBoard } from '@/api';\nimport { doAppendReportToBoard } from '@/store/actions';\n\ninterface Props {\n  boardList: IBoardList;\n  reportInfo: IReportInfo;\n  onAppendReportToBoard: (param: IReportAppendToBoard) => IAction;\n  children: React.ReactNode;\n}\n\nconst ReportAppendBoard = ({ onAppendReportToBoard, boardList, reportInfo, children }: Props) => {\n  const [appendedBoardIds, setappendedBoardIds] = React.useState([]);\n\n  function handleReportAppendBoard(record: IReportInfo) {\n    if (!appendedBoardIds.length) {\n      message.info('请选择看板');\n      return;\n    }\n    onAppendReportToBoard({ reportId: record.id, boardIds: appendedBoardIds, projectId: reportInfo.projectId });\n  }\n\n  return (\n    <Popover\n      placement='bottom'\n      trigger='click'\n      onVisibleChange={(value) => value && setappendedBoardIds([])}\n      content={\n        <div>\n          <Select\n            size='small'\n            onChange={(e: number[]) => setappendedBoardIds(e)}\n            value={appendedBoardIds}\n            style={{ width: 240 }}\n            mode='multiple'\n          >\n            {boardList.list.map((item) => {\n              const isExist = !!reportInfo.boards.find((val) => val.id === item.id);\n              return (\n                <Select.Option key={item.id} value={item.id} disabled={isExist}>\n                  {item.name}\n                </Select.Option>\n              );\n            })}\n          </Select>\n          &nbsp;\n          <Button size='small' onClick={() => handleReportAppendBoard(reportInfo)}>\n            确定\n          </Button>\n        </div>\n      }\n      title='选择看板'\n    >\n      {children}\n    </Popover>\n  );\n};\nconst mapStateToProps = (state: IStoreState) => {\n  const { boardList } = state.board;\n  return {\n    boardList\n  };\n};\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) =>\n  bindActionCreators(\n    {\n      onAppendReportToBoard: (params: IReportAppendToBoard) => {\n        return doAppendReportToBoard.request(params);\n      }\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReportAppendBoard);\n","import React from 'react';\nimport { Icon, Button, Input, message, Select, Popover } from 'antd';\nimport { connect } from 'react-redux';\nimport { IAction, IStoreState } from '@/types';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { doAddReport, doUpdateReport, doAppendReportToBoard } from '@/store/actions';\nimport { IReportAddParam, IReportUpdateParam, IReportInfo, IReportAppendToBoard } from '@/api';\nimport style from './AnalyseHeader.module.less';\nimport ReportAppendBoard from '@/components/ReportAppendBoard';\ninterface Props {\n  reportInfo: IReportInfo;\n  onAddReport: (params: IReportAddParam) => IAction;\n  onUpdateReport: (params: IReportUpdateParam) => IAction;\n  data: Object;\n}\nconst AnalyseHeader = ({ reportInfo, onUpdateReport, onAddReport, data }: Props) => {\n  const [newReportInfo, setnewReportInfo] = React.useState(reportInfo);\n  const [appendedBoardIds, setappendedBoardIds] = React.useState([]);\n  React.useEffect(() => {\n    setnewReportInfo(reportInfo);\n  }, [reportInfo]);\n\n  const handleSave = () => {\n    if (typeof reportInfo.id !== 'undefined') {\n      onUpdateReport({ id: null, ...newReportInfo, data });\n    } else {\n      onAddReport({ ...newReportInfo, data });\n    }\n  };\n\n  const handleSaveAs = () => {\n    const { id, ...newInfo } = newReportInfo;\n    onAddReport({ ...newInfo, data });\n  };\n\n  return (\n    <div className={style.wrapper}>\n      <h2 className={style.title}>\n        <Input\n          type='text'\n          onChange={(e) => setnewReportInfo({ ...newReportInfo, name: e.target.value })}\n          value={newReportInfo.name}\n        />\n      </h2>\n      <div className={style.btns}>\n        <Button type='link' icon='save' onClick={handleSave}>\n          保存\n        </Button>\n        {newReportInfo.id && (\n          <Button type='link' icon='save' onClick={handleSaveAs}>\n            另存为\n          </Button>\n        )}\n\n        {newReportInfo.id && (\n          <ReportAppendBoard reportInfo={newReportInfo}>\n            <Button type='link' icon='plus-circle'>\n              添加到\n            </Button>\n          </ReportAppendBoard>\n        )}\n      </div>\n      <div className={style.description}>\n        <Input\n          onChange={(e) => setnewReportInfo({ ...newReportInfo, description: e.target.value })}\n          value={newReportInfo.description}\n        ></Input>\n      </div>\n    </div>\n  );\n};\nconst mapStateToProps = (state: IStoreState) => {\n  const { reportInfo } = state.report;\n  return {\n    reportInfo\n  };\n};\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) =>\n  bindActionCreators(\n    {\n      onAddReport: (params: IReportAddParam) => {\n        return doAddReport.request(params);\n      },\n      onUpdateReport: (params: IReportUpdateParam) => {\n        return doUpdateReport.request(params);\n      }\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AnalyseHeader);\n","import * as React from 'react';\nimport { Select, Row, Col, Icon } from 'antd';\nimport style from './Dimension.module.less';\nimport { IFieldInfo } from '@/api';\nimport { IListData } from '@/types';\nimport { EVENT_ATTRS } from '@/constants';\nconst { Option, OptGroup } = Select;\n\ninterface Props {\n  fieldList?: IListData<IFieldInfo>;\n  dimension: string;\n  onChange: (param: string) => any;\n}\n\nconst Dimension = ({ fieldList = { list: EVENT_ATTRS }, dimension, onChange }: Props) => {\n  return (\n    <div className={style.wrapper}>\n      <Row className={style.item}>\n        <Col span={1}>\n          <div className={style.center}>按</div>\n        </Col>\n        <Col span={3}>\n          <Select value={dimension} onChange={onChange}>\n            <Option value=''>总体</Option>\n            {fieldList.list.map(field => (\n              <Option value={field.value} key={field.value}>\n                {field.name}\n              </Option>\n            ))}\n          </Select>\n        </Col>\n        <Col span={1}>\n          <div className={style.center}>查看</div>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default Dimension;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Dimension_wrapper__Ew76P\",\"center\":\"Dimension_center__1BCis\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preview\":\"AnalyseEvent_preview__k46p_\",\"wrapper\":\"AnalyseEvent_wrapper__2ShCs\",\"ruleSection\":\"AnalyseEvent_ruleSection__2a3iF\",\"ruleTitle\":\"AnalyseEvent_ruleTitle__3uJQg\"};","import { Icon, Collapse, Divider, Select, Input, Row, Col, Button, Spin } from 'antd';\nimport React from 'react';\nimport AnalyseRangePicker from '@/components/AnalyseRangePicker';\nimport moment from 'moment';\nimport style from './AnalyseEvent.module.less';\nimport ReactEcharts from 'echarts-for-react';\nimport Indicator from '@/components/Indicator';\nimport Dimension from '@/components/Dimension';\nimport Filter from '@/components/Filter';\nimport AnalyseHeader from './components/AnalyseHeader';\nimport { IReportInfo, IFieldInfo, IEventAnalyseData, IEventAnalyseParam } from '@/api';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { doAddReport, doUpdateReport, doGetEventAnalyse } from '@/store/actions';\nimport { IAction, IStoreState, IListData, IDate } from '@/types';\nimport { DYNAMIC_TIME, EVENT_ATTRS } from '@/constants';\nimport AnalyseEventChart from './components/AnalyseEventChart';\nconst { Option } = Select;\nconst { Panel } = Collapse;\nconst { Group } = Input;\ninterface Props {\n  onGetEventAnalyseData: (param: IEventAnalyseParam) => IAction;\n  projectId: number;\n  eventAnalyseData: IEventAnalyseData;\n  eventAnalyseParam: IEventAnalyseParam;\n  analyseLoading: boolean;\n}\n\nconst AnalyseEvent = ({\n  analyseLoading,\n\n  onGetEventAnalyseData,\n  projectId,\n  eventAnalyseData,\n  eventAnalyseParam\n}: Props) => {\n  const handleChange = (info: IEventAnalyseParam) => {\n    info.projectId = projectId;\n    onGetEventAnalyseData(info);\n  };\n\n  return (\n    <div className={style.wrapper}>\n      <AnalyseHeader data={{ ...eventAnalyseParam, projectId }}></AnalyseHeader>\n      <div className={style.rule}>\n        <div className={style.ruleSection}>\n          <span className={style.ruleTitle}>指标:</span>\n          <div>\n            <Indicator\n              hasType\n              indicators={eventAnalyseParam.indicators}\n              onChange={(indicators) => handleChange({ ...eventAnalyseParam, indicators })}\n            />\n\n            {/* <Filter fieldList={fieldList} filterInfo={filter} /> */}\n          </div>\n        </div>\n\n        <div className={style.ruleSection}>\n          <span className={style.ruleTitle}>纬度:</span>\n          <Dimension\n            dimension={eventAnalyseParam.dimension}\n            onChange={(dimension) => handleChange({ ...eventAnalyseParam, dimension })}\n          />\n        </div>\n\n        <div className={style.ruleSection}>\n          <span className={style.ruleTitle}>筛选:</span>\n          <Filter\n            filterInfo={eventAnalyseParam.filter}\n            onChange={(filter) => handleChange({ ...eventAnalyseParam, filter })}\n          />\n        </div>\n      </div>\n\n      <div className={style.preview}>\n        <Row>\n          <Col span={14}>\n            <AnalyseRangePicker\n              pickerProps={{ allowClear: false }}\n              onChange={(time) => handleChange({ ...eventAnalyseParam, ...time })}\n              value={{\n                dateType: eventAnalyseParam.dateType,\n                dateEnd: eventAnalyseParam.dateEnd,\n                dateStart: eventAnalyseParam.dateStart\n              }}\n            />\n          </Col>\n          <Col span={6} offset={4}>\n            <Group compact>\n              <Select\n                style={{ width: '33%' }}\n                value={eventAnalyseParam.type}\n                onChange={(type: string) => handleChange({ ...eventAnalyseParam, type })}\n              >\n                <Option value='LINE'>折线图</Option>\n                <Option value='PIE'>饼图</Option>\n                <Option value='TABLE'>表格</Option>\n                <Option value='TEXT'>数值</Option>\n              </Select>\n              <Select\n                style={{ width: '33%' }}\n                value={eventAnalyseParam.timeUnit}\n                onChange={(timeUnit: string) => handleChange({ ...eventAnalyseParam, timeUnit })}\n              >\n                <Option value='HOUR'>按小时</Option>\n                <Option value='DAY'>按天</Option>\n                <Option value='WEEK'>按周</Option>\n                <Option value='MONTH'>按月</Option>\n                <Option value='YEAR'>按年</Option>\n              </Select>\n              <Button icon='download'>导出</Button>\n            </Group>\n          </Col>\n        </Row>\n        <br />\n        <br />\n        <Spin spinning={analyseLoading}>\n          <div style={{ height: eventAnalyseParam.type === 'TABLE' ? 800 : 400 }}>\n            <AnalyseEventChart data={eventAnalyseData}></AnalyseEventChart>\n          </div>\n        </Spin>\n        <div></div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IStoreState) => {\n  const projectId = state.project.projectInfo.id;\n  const { eventAnalyseData, eventAnalyseParam, analyseLoading } = state.analyse;\n  return {\n    projectId,\n    eventAnalyseData,\n    eventAnalyseParam,\n    analyseLoading\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) =>\n  bindActionCreators(\n    {\n      onGetEventAnalyseData: (param: IEventAnalyseParam) => doGetEventAnalyse.request(param)\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AnalyseEvent);\n"],"sourceRoot":""}