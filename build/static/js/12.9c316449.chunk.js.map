{"version":3,"sources":["components/Filter.tsx","components/Indicator.tsx","components/Dimension.tsx","pages/analyse/components/AnalyseHeader.tsx","pages/analyse/components/AnalyseEventChart.tsx","pages/analyse/AnalyseEvent.tsx","components/AnalyseRangePicker.tsx","pages/analyse/AnalyseEvent.module.less","components/Indicator.module.less","components/Filter.module.less","components/Dimension.module.less","pages/analyse/components/AnalyseHeader.module.less"],"names":["Option","Select","Filter","OptGroup","fieldList","filterInfo","onChange","React","recommend","setrecommend","handleFieldChange","value","index","newFilterInfo","JSON","parse","stringify","filterValues","key","type","field","list","find","handleFilterTypeChange","handleFilterValueChange","length","className","style","wrapper","onClick","filterType","line","form","map","filter","gutter","id","span","val","name","mode","width","tokenSeparators","item","dataSource","splice","handleClose","close","push","Date","now","Search","Input","connect","state","metadata","activeMetadataList","activeMetadataListParams","dispatch","bindActionCreators","indicators","handleFilterChange","info","newIndicators","handleTypeChange","indicatorInfo","center","color","overlay","content","e","stopPropagation","placeholder","onSearch","console","log","metadataBox","trackId","code","metadataCode","metadataName","handleSelectMetadata","readOnly","select","handleRemove","Dimension","dimension","handleAddReport","params","doAddReport","request","handleUpdateReport","doUpdateReport","reportInfo","title","defaultValue","btns","icon","description","getOptions","data","options","dataZoom","show","realtime","start","end","minInterval","maxInterval","grid","bottom","xAxis","axisLine","lineStyle","yAxis","splitLine","nameTextStyle","splitArea","series","forEach","time","Number","pv","getColumns","param","columns","dataIndex","defaultSortOrder","sorter","a","b","concat","dimensionValues","getTableData","date","aaaaa","Object","values","AnalyseEventChart","hasData","option","theme","notMerge","lazyUpdate","Panel","Collapse","Group","report","projectId","project","projectInfo","analyse","eventAnalyseData","eventAnalyseParam","onGetEventAnalyseData","doGetEventAnalyse","useState","newInfo","handleChange","defaultActiveKey","header","ruleTitle","preview","AnalyseRangePicker","offset","compact","timeUlit","RangePicker","DatePicker","handleSelectDynamicTime","props","moment","startDate","endDate","setState","open","handleOpenChange","getShowDate","DYNAMIC_TIME","renderExtraFooter","size","this","format","onOpenChange","module","exports"],"mappings":"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","file":"static/js/12.9c316449.chunk.js","sourcesContent":["import * as React from 'react';\nimport { Select, Row, Col, Icon, AutoComplete } from 'antd';\nimport style from './Filter.module.less';\nimport { IListData } from '@/types';\nimport { IFieldInfo, IFilterInfo, IFilterValue } from '@/api';\nimport { SelectValue } from 'antd/lib/select';\nconst { Option, OptGroup } = Select;\n\ninterface Props {\n  fieldList: IListData<IFieldInfo>;\n  filterInfo: IFilterInfo;\n  onChange: (filterInfo: IFilterInfo) => any;\n}\n\nconst Filter = ({ fieldList, filterInfo, onChange }: Props) => {\n  const [recommend, setrecommend] = React.useState<string[]>([]);\n  const handleFieldChange = (value: string, index: number) => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterValues[index].key = value;\n    newFilterInfo.filterValues[index].type = 'equal';\n    newFilterInfo.filterValues[index].value = [];\n    const field = fieldList.list.find(field => field.value === value);\n    if (field) {\n      setrecommend(field.recommend);\n    }\n\n    onChange(newFilterInfo);\n  };\n\n  const handleFilterTypeChange = (value: string, index: number) => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterValues[index].type = value;\n    if (value === 'equal' || value === 'notEqual') {\n      newFilterInfo.filterValues[index].value = [];\n    } else if (value === 'between') {\n      newFilterInfo.filterValues[index].value = [null, null];\n    } else {\n      newFilterInfo.filterValues[index].value = null;\n    }\n    onChange(newFilterInfo);\n  };\n\n  const handleFilterValueChange = (value: string, index: number) => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterValues[index].value = value;\n    onChange(newFilterInfo);\n  };\n\n  const handleClose = (index: number) => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterValues.splice(index, 1);\n    onChange(newFilterInfo);\n  };\n\n  const handleAdd = () => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterValues.push({\n      type: null,\n      key: null,\n      value: null,\n      id: Date.now()\n    });\n    onChange(newFilterInfo);\n  };\n\n  const handleChangeFilterType = () => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterType = newFilterInfo.filterType === 'AND' ? 'OR' : 'AND';\n    onChange(newFilterInfo);\n  };\n\n  return (\n    <div>\n      {filterInfo.filterValues.length > 0 && (\n        <div className={style.wrapper}>\n          {filterInfo.filterValues.length > 1 && (\n            <div className={style.type}>\n              <button onClick={handleChangeFilterType}>{filterInfo.filterType === 'AND' ? '且' : '或'}</button>\n              <div className={style.line}></div>\n            </div>\n          )}\n          <div className={style.form}>\n            {filterInfo.filterValues.map((filter, index) => (\n              <Row gutter={16} key={filter.id}>\n                <Col span={3}>\n                  <Select value={filter.key} onChange={(val: string) => handleFieldChange(val, index)}>\n                    {fieldList.list.map(field => (\n                      <Option value={field.value} key={field.value}>\n                        {field.name}\n                      </Option>\n                    ))}\n                  </Select>\n                </Col>\n                <Col span={3}>\n                  <Select value={filter.type} onChange={(val: string) => handleFilterTypeChange(val, index)}>\n                    <Option value='equal'>等于</Option>\n                    <Option value='notEqual'>不等于</Option>\n                    <Option value='isSet'>有值</Option>\n                    <Option value='notSet'>没值</Option>\n\n                    <Option value='greater'>大于</Option>\n                    <Option value='less'>小于</Option>\n                    <Option value='between'>区间</Option>\n\n                    <Option value='contain'>包含</Option>\n                    <Option value='notContain'>不包含</Option>\n                    <Option value='isEmpty'>为空</Option>\n                    <Option value='isNotEmpty'>不为空</Option>\n                    <Option value='rlike'>正则匹配</Option>\n                    <Option value='notrlike'>正则不匹配</Option>\n                  </Select>\n                </Col>\n                {filter.type !== 'isEmpty' &&\n                  filter.type !== 'isNotEmpty' &&\n                  filter.type !== 'isSet' &&\n                  filter.type !== 'notSet' &&\n                  filter.type !== 'rlike' &&\n                  filter.type !== 'notrlike' && (\n                    <Col span={8}>\n                      {filter.type === 'equal' || filter.type === 'notEqual' ? (\n                        <Select\n                          value={filter.value}\n                          onChange={(val: string) => handleFilterValueChange(val, index)}\n                          mode='tags'\n                          style={{ width: '100%' }}\n                          tokenSeparators={[',']}\n                        >\n                          {recommend.map(item => (\n                            <Option key={item} value={item}>\n                              {item}\n                            </Option>\n                          ))}\n                        </Select>\n                      ) : (\n                        <AutoComplete\n                          value={filter.value}\n                          dataSource={recommend}\n                          style={{ width: '100%' }}\n                          onChange={(val: any) => handleFilterValueChange(val, index)}\n                        />\n                      )}\n                    </Col>\n                  )}\n                <Col span={1}>\n                  <div onClick={() => handleClose(index)} className={'app-link ' + style.close}>\n                    <Icon type='close' />\n                  </div>\n                </Col>\n              </Row>\n            ))}\n          </div>\n        </div>\n      )}\n      <a onClick={handleAdd}>+添加筛选</a>\n    </div>\n  );\n};\n\nexport default Filter;\n","import * as React from 'react';\nimport { Tag, Select, Row, Col, Icon, Popover, Input, Dropdown, Divider } from 'antd';\nimport style from './Indicator.module.less';\nimport { IMetadataInfo, IMetadataListParam, IIndicatorInfo, IFieldInfo, IFilterInfo } from '@/api';\nimport { IPageData, IAction, IStoreState, IListData } from '@/types';\nimport { connect } from 'react-redux';\n\nimport { bindActionCreators, Dispatch } from 'redux';\nimport Filter from './Filter';\nconst { Option, OptGroup } = Select;\n\nconst { Search } = Input;\n\ninterface Props {\n  activeMetadataList: IPageData<IMetadataInfo>;\n  activeMetadataListParams: IMetadataListParam;\n  index?: number;\n  fieldList: IListData<IFieldInfo>;\n  indicators: IIndicatorInfo[];\n  onChange: (param: IIndicatorInfo[]) => any;\n}\n\nconst Indicator = ({ indicators, activeMetadataList, activeMetadataListParams, onChange, fieldList }: Props) => {\n  function handleSelectMetadata(info: IMetadataInfo, index: number) {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators[index].trackId = info.code;\n    newIndicators[index].metadataCode = info.code;\n    newIndicators[index].metadataName = info.name;\n    onChange(newIndicators);\n  }\n\n  function handleFilterChange(info: IFilterInfo, index: number) {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators[index].filter = info;\n    onChange(newIndicators);\n  }\n\n  function handleTypeChange(value: string, index: number) {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators[index].type = value;\n    onChange(newIndicators);\n  }\n\n  function handleAdd() {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators.push({\n      trackId: null,\n      metadataCode: null,\n      metadataName: '所有事件',\n      type: 'SUM',\n      id: Date.now(),\n      filter: {\n        filterType: 'AND',\n        filterValues: []\n      }\n    });\n    onChange(newIndicators);\n  }\n\n  function handleRemove(index: number) {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators.splice(index, 1);\n    onChange(newIndicators);\n  }\n\n  return (\n    <div className={style.wrapper}>\n      <div>\n        {indicators.map((indicatorInfo, index) => (\n          <div key={indicatorInfo.id}>\n            <Row className={style.item}>\n              <Col span={1}>\n                <div className={style.center}>\n                  <Tag color='gold'>{index + 1}</Tag>\n                </div>\n              </Col>\n              <Col span={3}>\n                <Dropdown\n                  overlay={\n                    <div className={style.content}>\n                      <div onClick={e => e.stopPropagation()}>\n                        <Search placeholder='搜索事件' onSearch={value => console.log(value)} style={{ width: 200 }} />\n                        <Select style={{ width: 200 }}>\n                          <Option value='1'>标签1</Option>\n                          <Option value='2'>标签2</Option>\n                          <Option value='3'>标签3</Option>\n                        </Select>\n                      </div>\n\n                      <div className={style.metadataBox}>\n                        {activeMetadataList.list.map(item => (\n                          <span\n                            onClick={() => handleSelectMetadata(item, index)}\n                            className='app-pointer'\n                            key={item.code}\n                          >\n                            {item.name}\n                          </span>\n                        ))}\n                      </div>\n                    </div>\n                  }\n                >\n                  <Input value={indicatorInfo.metadataName} readOnly className={style.select} />\n                </Dropdown>\n              </Col>\n              <Col span={1}>\n                <div className={style.center}>的</div>\n              </Col>\n              <Col span={3}>\n                <Select onChange={(val: string) => handleTypeChange(val, index)} value={indicatorInfo.type}>\n                  <Option value='SUM'>总次数</Option>\n                  <Option value='USER_SUM'>用户数</Option>\n                  <Option value='3'>人均次数</Option>\n                </Select>\n              </Col>\n\n              {indicators.length > 1 && (\n                <Col span={1}>\n                  <div onClick={() => handleRemove(index)} className={'app-link ' + style.center}>\n                    <Icon type='close' />\n                  </div>\n                </Col>\n              )}\n            </Row>\n            <div className={style.filter}>\n              <Filter\n                fieldList={fieldList}\n                filterInfo={indicatorInfo.filter}\n                onChange={filter => handleFilterChange(filter, index)}\n              ></Filter>\n            </div>\n          </div>\n        ))}\n      </div>\n      <a onClick={handleAdd}>+添加指标</a>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IStoreState) => {\n  const { activeMetadataList, activeMetadataListParams } = state.metadata;\n  return {\n    activeMetadataList,\n    activeMetadataListParams\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) => bindActionCreators({}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Indicator);\n","import * as React from 'react';\nimport { Select, Row, Col, Icon } from 'antd';\nimport style from './Dimension.module.less';\nimport { IFieldInfo } from '@/api';\nimport { IListData } from '@/types';\nconst { Option, OptGroup } = Select;\n\ninterface Props {\n  fieldList: IListData<IFieldInfo>;\n  dimension: string;\n  onChange: (param: string) => any;\n}\n\nconst Dimension = ({ fieldList, dimension, onChange }: Props) => {\n  return (\n    <div className={style.wrapper}>\n      <Row className={style.item}>\n        <Col span={1}>\n          <div className={style.center}>按</div>\n        </Col>\n        <Col span={3}>\n          <Select value={dimension} onChange={onChange}>\n            <Option value=''>总体</Option>\n            {fieldList.list.map(field => (\n              <Option value={field.value} key={field.value}>\n                {field.name}\n              </Option>\n            ))}\n          </Select>\n        </Col>\n        <Col span={1}>\n          <div className={style.center}>查看</div>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default Dimension;\n","import React from 'react';\nimport { Icon, Button, Input } from 'antd';\nimport { connect } from 'react-redux';\nimport { IAction, IStoreState } from '@/types';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { doAddReport, doUpdateReport } from '@/store/actions';\nimport { IReportAddParam, IReportUpdateParam, IReportInfo } from '@/api';\nimport style from './AnalyseHeader.module.less';\ninterface Props {\n  reportInfo: IReportInfo;\n  handleAddReport: (params: IReportAddParam) => IAction;\n  handleUpdateReport: (params: IReportUpdateParam) => IAction;\n  //handleAppandBoard: (params: any) => IAction;\n}\nconst AnalyseHeader = ({ reportInfo, handleUpdateReport, handleAddReport }: Props) => {\n  const handleSave = () => {\n    if (typeof reportInfo.id !== 'undefined') {\n      handleUpdateReport({ id: null, ...reportInfo });\n    } else {\n      handleAddReport(reportInfo);\n    }\n  };\n\n  const handleSaveAs = () => {\n    handleAddReport(reportInfo);\n  };\n\n  const handleAppand = () => {\n    //handleAppandBoard(reportInfo);\n  };\n  return (\n    <div className={style.wrapper}>\n      <h2 className={style.title}>\n        <Input type='text' defaultValue={reportInfo.name} />\n      </h2>\n      <div className={style.btns}>\n        <Button type='link' icon='save' onClick={handleSave}>\n          保存\n        </Button>\n        {reportInfo.id && (\n          <Button type='link' icon='save' onClick={handleSaveAs}>\n            另存为\n          </Button>\n        )}\n        <Button type='link' icon='plus-circle' onClick={handleAppand}>\n          添加到\n        </Button>\n      </div>\n      <div className={style.description}>\n        <Input defaultValue={reportInfo.description}></Input>\n      </div>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) =>\n  bindActionCreators(\n    {\n      handleAddReport: (params: IReportAddParam) => {\n        return doAddReport.request(params);\n      },\n      handleUpdateReport: (params: IReportUpdateParam) => {\n        return doUpdateReport.request(params);\n      }\n    },\n    dispatch\n  );\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(AnalyseHeader);\n","import * as React from 'react';\nimport ReactEcharts, { ObjectMap } from 'echarts-for-react';\nimport { Table } from 'antd';\nimport { ColumnProps } from 'antd/lib/table';\nimport { IEventAnalyseParam } from '@/api';\n\ninterface Props {\n  data: any;\n  param: IEventAnalyseParam;\n}\n\nconst getOptions = (data: any): ObjectMap => {\n  const options: ObjectMap = {\n    dataZoom: [\n      {\n        show: true,\n        realtime: true,\n        start: 0,\n        end: 100\n      }\n    ],\n    minInterval: 28 * 86400000,\n    maxInterval: 31 * 86400000,\n    grid: {\n      bottom: 80\n    },\n    xAxis: {\n      type: 'time',\n      axisLine: {\n        lineStyle: {\n          color: '#999'\n        }\n      }\n    },\n    yAxis: {\n      type: 'value',\n      minInterval: 1,\n      splitLine: {\n        lineStyle: {\n          type: 'dashed',\n          color: '#DDD'\n        }\n      },\n      axisLine: {\n        show: false,\n        lineStyle: {\n          color: '#333'\n        }\n      },\n      nameTextStyle: {\n        color: '#999'\n      },\n      splitArea: {\n        show: false\n      }\n    },\n    series: []\n  };\n\n  data.list.forEach((item: any) => {\n    options.series.push({\n      type: 'line',\n      data: item.data.map((val: any) => {\n        return {\n          name: val.time,\n          value: [val.time, Number(val.pv)]\n        };\n      })\n    });\n  });\n\n  return options;\n};\n\ninterface TableColumnProps {\n  key: string;\n  pv: number;\n  time: number;\n}\n\nconst getColumns = (data: any, param: any) => {\n  let columns: ColumnProps<TableColumnProps>[] = [\n    {\n      title: '日期',\n      key: 'time',\n      dataIndex: 'time',\n      defaultSortOrder: 'descend',\n      sorter: (a: any, b: any) => a.time - b.time\n    }\n  ];\n\n  if (data.dimension) {\n    if (data.list.length > 1) {\n      columns.push({\n        key: 'pv',\n        title: '总次数',\n        dataIndex: 'pv'\n      });\n    } else {\n      columns = columns.concat(\n        data.dimensionValues.map((item: any) => ({\n          key: item,\n          title: item,\n          dataIndex: item\n        }))\n      );\n    }\n  } else {\n    if (data.list.length > 1) {\n      columns = columns.concat(\n        data.list.map((item: any) => ({\n          key: item.key,\n          title: item.metadataName,\n          dataIndex: item.key\n        }))\n      );\n    } else {\n      columns.push({\n        key: 'pv',\n        title: '总次数',\n        dataIndex: 'pv'\n      });\n    }\n  }\n\n  return columns;\n};\n\nconst getTableData = (data: any): TableColumnProps[] => {\n  const date: any = {};\n  data.list.forEach((aaaaa: any) => {\n    aaaaa.data.forEach((item: any) => {\n      if (!date[item.time]) {\n        date[item.time] = { time: item.time, key: item.time, pv: item.pv };\n      }\n      if (data.dimension && data.list.length > 1) {\n        date[item.time][aaaaa.key + data.dimension] = item.pv;\n      } else if (data.dimension && data.dimensionValues.length > 0) {\n        date[item.time][item[data.dimension]] = item.pv;\n      } else if (data.list.length > 1) {\n        date[item.time][aaaaa.key] = item.pv;\n      }\n    });\n  });\n  return Object.values(date);\n};\n\nconst AnalyseEventChart = ({ data, param }: Props) => {\n  const hasData = !!data.list.find((item: any) => item.data.length > 0);\n\n  return (\n    <div>\n      {hasData ? <ReactEcharts option={getOptions(data)} theme='ts' notMerge={true} lazyUpdate={true} /> : '暂无数据'}\n\n      <Table columns={getColumns(data, param)} dataSource={getTableData(data)} />\n    </div>\n  );\n};\n\nexport default AnalyseEventChart;\n","import { Icon, Collapse, Divider, Select, Input, Row, Col, Button } from 'antd';\nimport React from 'react';\nimport AnalyseRangePicker from '@/components/AnalyseRangePicker';\nimport moment from 'moment';\nimport style from './AnalyseEvent.module.less';\nimport ReactEcharts from 'echarts-for-react';\nimport Indicator from '@/components/Indicator';\nimport Dimension from '@/components/Dimension';\nimport Filter from '@/components/Filter';\nimport AnalyseHeader from './components/AnalyseHeader';\nimport { IReportInfo, IFieldInfo, IFilterInfo, IEventAnalyseParam } from '@/api';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { doAddReport, doUpdateReport, doGetEventAnalyse } from '@/store/actions';\nimport { IAction, IStoreState, IListData, IDate } from '@/types';\nimport { DYNAMIC_TIME } from '@/constants';\nimport AnalyseEventChart from './components/AnalyseEventChart';\nconst { Option } = Select;\nconst { Panel } = Collapse;\nconst { Group } = Input;\ninterface Props {\n  reportInfo: IReportInfo;\n  fieldList: IListData<IFieldInfo>;\n  onGetEventAnalyseData: (param: IEventAnalyseParam) => IAction;\n  projectId: number;\n  eventAnalyseData: any;\n  eventAnalyseParam: IEventAnalyseParam;\n}\n\nconst onChange = (param: IDate) => {};\n\nconst AnalyseEvent = ({\n  reportInfo,\n  fieldList,\n  onGetEventAnalyseData,\n  projectId,\n  eventAnalyseData,\n  eventAnalyseParam\n}: Props) => {\n  const [newInfo, setNewInfo] = React.useState(reportInfo);\n\n  const handleChange = (info: IEventAnalyseParam) => {\n    info.projectId = projectId;\n    onGetEventAnalyseData(info);\n  };\n\n  return (\n    <div>\n      <AnalyseHeader reportInfo={newInfo}></AnalyseHeader>\n      <Collapse defaultActiveKey={['1']}>\n        <Panel header='添加分析规则' key='1'>\n          <div>\n            <div className={style.ruleTitle}>\n              <span>指标:</span>\n            </div>\n            <div>\n              <Indicator\n                fieldList={fieldList}\n                indicators={eventAnalyseParam.indicators}\n                onChange={indicators => handleChange({ ...eventAnalyseParam, indicators })}\n              />\n\n              {/* <Filter fieldList={fieldList} filterInfo={filter} /> */}\n            </div>\n          </div>\n\n          <div>\n            <div className={style.ruleTitle}>\n              <span>维度:</span>\n            </div>\n            <Dimension\n              dimension={eventAnalyseParam.dimension}\n              fieldList={fieldList}\n              onChange={dimension => handleChange({ ...eventAnalyseParam, dimension })}\n            />\n          </div>\n\n          <div>\n            <div className={style.ruleTitle}>\n              <span>筛选:</span>\n            </div>\n            <Filter\n              fieldList={fieldList}\n              filterInfo={eventAnalyseParam.filter}\n              onChange={filter => handleChange({ ...eventAnalyseParam, filter })}\n            />\n          </div>\n        </Panel>\n      </Collapse>\n\n      <div className={style.preview}>\n        <Row>\n          <Col span={14}>\n            <AnalyseRangePicker\n              onChange={time => handleChange({ ...eventAnalyseParam, time })}\n              value={eventAnalyseParam.time}\n            />\n          </Col>\n          <Col span={6} offset={4}>\n            <Group compact>\n              <Select\n                style={{ width: '33%' }}\n                value={eventAnalyseParam.type}\n                onChange={(type: string) => handleChange({ ...eventAnalyseParam, type })}\n              >\n                <Option value='LINE'>折线图</Option>\n                <Option value='PIE'>饼图</Option>\n                <Option value='TABLE'>表格</Option>\n                <Option value='NUMBER'>数值</Option>\n              </Select>\n              <Select\n                style={{ width: '33%' }}\n                value={eventAnalyseParam.timeUlit}\n                onChange={(timeUlit: string) => handleChange({ ...eventAnalyseParam, timeUlit })}\n              >\n                <Option value='HOUR'>按小时</Option>\n                <Option value='DAY'>按天</Option>\n                <Option value='WEEK'>按周</Option>\n                <Option value='MONTH'>按月</Option>\n                <Option value='YEAR'>按年</Option>\n              </Select>\n              <Button icon='download'>导出</Button>\n            </Group>\n          </Col>\n        </Row>\n        <div>\n          <pre>\n            <code></code>\n          </pre>\n        </div>\n        <div>\n          <AnalyseEventChart data={eventAnalyseData} param={eventAnalyseParam}></AnalyseEventChart>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IStoreState) => {\n  const { reportInfo } = state.report;\n  const { fieldList } = state.metadata;\n  const projectId = state.project.projectInfo.id;\n  const { eventAnalyseData, eventAnalyseParam } = state.analyse;\n  return {\n    reportInfo,\n    fieldList,\n    projectId,\n    eventAnalyseData,\n    eventAnalyseParam\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) =>\n  bindActionCreators(\n    {\n      onGetEventAnalyseData: (param: IEventAnalyseParam) => doGetEventAnalyse.request(param)\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AnalyseEvent);\n","import * as React from 'react';\n\nimport { DatePicker, Tag, Button } from 'antd';\nimport moment from 'moment';\nimport { DYNAMIC_TIME, IDynamicTime } from '@/constants';\nimport { RangePickerValue } from 'antd/lib/date-picker/interface';\nconst RangePicker = DatePicker.RangePicker;\ninterface Props {\n  value?: { date: RangePickerValue; type: string };\n  onChange?: (param: { date: RangePickerValue; type: string }) => any;\n}\n\n//需结合Form组件使用 不能使用函数组件\nclass AnalyseRangePicker extends React.Component<Props> {\n  handleSelectDynamicTime = (item: IDynamicTime) => {\n    this.props.onChange({ date: [moment(item.startDate()), moment(item.endDate())], type: item.value });\n    this.setState({ open: false });\n  };\n  state = {\n    open: false\n  };\n  handleOpenChange = (open: boolean) => {\n    if (open) {\n      this.setState({ open });\n    }\n  };\n\n  getShowDate = () => {\n    if (this.props.value.type) {\n      return '| ' + DYNAMIC_TIME.find(item => item.value === this.props.value.type).name;\n    } else {\n      return '';\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <RangePicker\n          renderExtraFooter={() => (\n            <div>\n              <h3>动态时间:</h3>\n              {DYNAMIC_TIME.map(item => (\n                <Button\n                  size='small'\n                  key={item.value}\n                  type={this.props.value.type === item.value ? 'primary' : 'default'}\n                  onClick={() => this.handleSelectDynamicTime(item)}\n                >\n                  {item.name}\n                </Button>\n              ))}\n            </div>\n          )}\n          open={this.state.open}\n          format='YYYY-MM-DD'\n          onOpenChange={this.handleOpenChange}\n          value={this.props.value.date}\n          onChange={value => {\n            this.setState({ open: false });\n            this.props.onChange({ date: value, type: '' });\n          }}\n        />\n        <span>{this.getShowDate()}</span>\n      </div>\n    );\n  }\n}\n\nexport default AnalyseRangePicker;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ruleTitle\":\"AnalyseEvent_ruleTitle__3uJQg\",\"preview\":\"AnalyseEvent_preview__k46p_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Indicator_wrapper__3B5qd\",\"select\":\"Indicator_select__1kP-z\",\"content\":\"Indicator_content__3-BaR\",\"center\":\"Indicator_center__3Oax_\",\"metadataBox\":\"Indicator_metadataBox__3wnAQ\",\"active\":\"Indicator_active__1aD9o\",\"filter\":\"Indicator_filter__lBazH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__9rptJ\",\"line\":\"Filter_line__eOPS4\",\"type\":\"Filter_type__2GtXQ\",\"form\":\"Filter_form__1lfK0\",\"close\":\"Filter_close__1AZpi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Dimension_wrapper__Ew76P\",\"center\":\"Dimension_center__1BCis\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AnalyseHeader_wrapper__1r0g1\",\"btns\":\"AnalyseHeader_btns__G6iwS\",\"title\":\"AnalyseHeader_title__1X3LF\",\"description\":\"AnalyseHeader_description__1fJOY\"};"],"sourceRoot":""}