{
  "version": 3,
  "sources": [
    "components/Filter.tsx",
    "components/Indicator.module.less",
    "components/Indicator.tsx",
    "components/Filter.module.less",
    "pages/analyse/components/AnalyseHeader.tsx",
    "pages/analyse/components/AnalyseHeader.module.less",
    "pages/analyse/Analyse.module.less",
    "components/PathData.module.less",
    "components/ChildPage.tsx",
    "components/PathData.tsx",
    "pages/analyse/AnalysePath.tsx"
  ],
  "names": [
    "Option",
    "Select",
    "OptGroup",
    "Filter",
    "fieldList",
    "filterInfo",
    "onChange",
    "React",
    "recommend",
    "setrecommend",
    "handleFieldChange",
    "value",
    "index",
    "newFilterInfo",
    "JSON",
    "parse",
    "stringify",
    "filterValues",
    "key",
    "type",
    "field",
    "list",
    "find",
    "handleFilterTypeChange",
    "handleFilterValueChange",
    "length",
    "className",
    "style",
    "wrapper",
    "size",
    "onClick",
    "filterType",
    "line",
    "form",
    "map",
    "filter",
    "gutter",
    "id",
    "span",
    "val",
    "name",
    "mode",
    "width",
    "tokenSeparators",
    "item",
    "dataSource",
    "splice",
    "handleClose",
    "close",
    "push",
    "uuidv4",
    "add",
    "module",
    "exports",
    "Search",
    "Input",
    "connect",
    "state",
    "metadata",
    "activeMetadataList",
    "activeMetadataListParams",
    "tagList",
    "dispatch",
    "bindActionCreators",
    "onGetActiveMetadataList",
    "param",
    "doGetActiveMetadataList",
    "request",
    "indicators",
    "hasType",
    "addText",
    "hasCustomName",
    "metadataparam",
    "setmetadataparam",
    "handleSelectMetadata",
    "info",
    "newIndicators",
    "metadataCode",
    "code",
    "metadataName",
    "handleFilterChange",
    "handleTypeChange",
    "handleSearch",
    "allMetadata",
    "indicatorInfo",
    "center",
    "color",
    "overlay",
    "content",
    "e",
    "stopPropagation",
    "placeholder",
    "target",
    "onSearch",
    "tags",
    "split",
    "Number",
    "join",
    "metadataBox",
    "active",
    "readOnly",
    "select",
    "defaultValue",
    "customName",
    "onBlur",
    "event",
    "handleNameChange",
    "handleRemove",
    "reportInfo",
    "report",
    "handleAddReport",
    "params",
    "doAddReport",
    "handleUpdateReport",
    "doUpdateReport",
    "data",
    "useState",
    "newReportInfo",
    "setnewReportInfo",
    "useEffect",
    "title",
    "btns",
    "icon",
    "newInfo",
    "description",
    "ChildPage",
    "pageData",
    "parentInfo",
    "handleSelectPage",
    "pageId",
    "newPageData",
    "children",
    "pageInfo",
    "disabled",
    "handleAddReferer",
    "PathData",
    "childPageData",
    "drawerVisible",
    "setdrawerVisible",
    "selectedParentPageIndex",
    "setselectedParentPageIndex",
    "selectedParentPage",
    "setselectedParentPage",
    "handleChange",
    "newChildPageData",
    "indicatorsMap",
    "reduce",
    "total",
    "placement",
    "closable",
    "onClose",
    "visible",
    "parentId",
    "fatherPage",
    "pathString",
    "handleUpdate",
    "Group",
    "Collapse",
    "Panel",
    "projectId",
    "project",
    "projectInfo",
    "analyse",
    "pathAnalyseData",
    "pathAnalyseParam",
    "analyseLoading",
    "onGetPathAnalyseData",
    "doGetPathAnalyse",
    "indicator",
    "i",
    "AnalyseHeader",
    "rule",
    "ruleSection",
    "ruleTitle",
    "indicatorType",
    "Indicator",
    "EMetadataType",
    "page",
    "preview",
    "AnalyseRangePicker",
    "time",
    "dateType",
    "dateEnd",
    "dateStart",
    "offset",
    "compact",
    "spinning",
    "AnalysePathChart"
  ],
  "mappings": "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",
  "file": "static/js/10.2682e9d2.chunk.js",
  "sourcesContent": [
    "import * as React from 'react';\nimport { Select, Row, Col, Icon, AutoComplete, Button } from 'antd';\nimport style from './Filter.module.less';\nimport { IListData } from '@/types';\nimport { IFieldInfo, IFilterInfo, IFilterValue } from '@/api';\nimport { SelectValue } from 'antd/lib/select';\nimport { v4 as uuidv4 } from 'uuid';\nconst { Option, OptGroup } = Select;\n\ninterface Props {\n  fieldList: IListData<IFieldInfo>;\n  filterInfo: IFilterInfo;\n  onChange: (filterInfo: IFilterInfo) => any;\n}\n\nconst Filter = ({ fieldList, filterInfo, onChange }: Props) => {\n  const [recommend, setrecommend] = React.useState<string[]>([]);\n  const handleFieldChange = (value: string, index: number) => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterValues[index].key = value;\n    newFilterInfo.filterValues[index].type = 'equal';\n    newFilterInfo.filterValues[index].value = [];\n    const field = fieldList.list.find(field => field.value === value);\n    if (field) {\n      setrecommend(field.recommend);\n    }\n\n    onChange(newFilterInfo);\n  };\n\n  const handleFilterTypeChange = (value: string, index: number) => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterValues[index].type = value;\n    if (value === 'equal' || value === 'notEqual') {\n      newFilterInfo.filterValues[index].value = [];\n    } else if (value === 'between') {\n      newFilterInfo.filterValues[index].value = [null, null];\n    } else {\n      newFilterInfo.filterValues[index].value = null;\n    }\n    onChange(newFilterInfo);\n  };\n\n  const handleFilterValueChange = (value: string, index: number) => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterValues[index].value = value;\n    onChange(newFilterInfo);\n  };\n\n  const handleClose = (index: number) => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterValues.splice(index, 1);\n    onChange(newFilterInfo);\n  };\n\n  const handleAdd = () => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterValues.push({\n      type: null,\n      key: null,\n      value: null,\n      id: uuidv4()\n    });\n    onChange(newFilterInfo);\n  };\n\n  const handleChangeFilterType = () => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterType = newFilterInfo.filterType === 'AND' ? 'OR' : 'AND';\n    onChange(newFilterInfo);\n  };\n\n  return (\n    <div>\n      {filterInfo.filterValues.length > 0 && (\n        <div className={style.wrapper}>\n          {filterInfo.filterValues.length > 1 && (\n            <div className={style.type}>\n              <Button size='small' onClick={handleChangeFilterType}>\n                {filterInfo.filterType === 'AND' ? '且' : '或'}\n              </Button>\n              <div className={style.line}></div>\n            </div>\n          )}\n          <div className={style.form}>\n            {filterInfo.filterValues.map((filter, index) => (\n              <Row gutter={16} key={filter.id}>\n                <Col span={5}>\n                  <Select value={filter.key} onChange={(val: string) => handleFieldChange(val, index)}>\n                    {fieldList.list.map(field => (\n                      <Option value={field.value} key={field.value}>\n                        {field.name}\n                      </Option>\n                    ))}\n                  </Select>\n                </Col>\n                <Col span={3}>\n                  <Select value={filter.type} onChange={(val: string) => handleFilterTypeChange(val, index)}>\n                    <Option value='equal'>等于</Option>\n                    <Option value='notEqual'>不等于</Option>\n                    <Option value='isSet'>有值</Option>\n                    <Option value='notSet'>没值</Option>\n\n                    <Option value='greater'>大于</Option>\n                    <Option value='less'>小于</Option>\n                    <Option value='between'>区间</Option>\n\n                    <Option value='contain'>包含</Option>\n                    <Option value='notContain'>不包含</Option>\n                    <Option value='isEmpty'>为空</Option>\n                    <Option value='isNotEmpty'>不为空</Option>\n                    <Option value='rlike'>正则匹配</Option>\n                    <Option value='notrlike'>正则不匹配</Option>\n                  </Select>\n                </Col>\n                {filter.type !== 'isEmpty' &&\n                  filter.type !== 'isNotEmpty' &&\n                  filter.type !== 'isSet' &&\n                  filter.type !== 'notSet' &&\n                  filter.type !== 'rlike' &&\n                  filter.type !== 'notrlike' && (\n                    <Col span={8}>\n                      {filter.type === 'equal' || filter.type === 'notEqual' ? (\n                        <Select\n                          value={filter.value}\n                          onChange={(val: string) => handleFilterValueChange(val, index)}\n                          mode='tags'\n                          style={{ width: '100%' }}\n                          tokenSeparators={[',']}\n                        >\n                          {recommend.map(item => (\n                            <Option key={item} value={item}>\n                              {item}\n                            </Option>\n                          ))}\n                        </Select>\n                      ) : (\n                        <AutoComplete\n                          value={filter.value}\n                          dataSource={recommend}\n                          style={{ width: '100%' }}\n                          onChange={(val: any) => handleFilterValueChange(val, index)}\n                        />\n                      )}\n                    </Col>\n                  )}\n                <Col span={1}>\n                  <div onClick={() => handleClose(index)} className={'app-link ' + style.close}>\n                    <Icon type='minus-circle' />\n                  </div>\n                </Col>\n              </Row>\n            ))}\n          </div>\n        </div>\n      )}\n      <a onClick={handleAdd} className={style.add}>\n        <Icon type='plus-square' />\n        添加筛选\n      </a>\n    </div>\n  );\n};\n\nexport default Filter;\n",
    "// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Indicator_wrapper__3B5qd\",\"select\":\"Indicator_select__1kP-z\",\"content\":\"Indicator_content__3-BaR\",\"center\":\"Indicator_center__3Oax_\",\"metadataBox\":\"Indicator_metadataBox__3wnAQ\",\"active\":\"Indicator_active__1aD9o\",\"filter\":\"Indicator_filter__lBazH\"};",
    "import * as React from 'react';\nimport { Tag, Select, Row, Col, Icon, Popover, Input, Dropdown, Divider } from 'antd';\nimport style from './Indicator.module.less';\nimport { IMetadataInfo, IMetadataListParam, IIndicatorInfo, IFieldInfo, IFilterInfo, ITagList } from '@/api';\nimport { IPageData, IAction, IStoreState, IListData } from '@/types';\nimport { connect } from 'react-redux';\n\nimport { bindActionCreators, Dispatch } from 'redux';\nimport Filter from './Filter';\nimport { v4 as uuidv4 } from 'uuid';\nimport { doGetActiveMetadataList } from '../store/actions';\nconst { Option, OptGroup } = Select;\n\nconst { Search } = Input;\n\ninterface Props {\n  activeMetadataList: IPageData<IMetadataInfo>;\n  activeMetadataListParams: IMetadataListParam;\n  index?: number;\n  fieldList: IListData<IFieldInfo>;\n  indicators: IIndicatorInfo[];\n  onChange: (param: IIndicatorInfo[], changedValue?: IIndicatorInfo) => any;\n  hasType?: boolean;\n  addText?: string;\n  hasCustomName?: boolean;\n  type?: number;\n  tagList: ITagList;\n  onGetActiveMetadataList: (param: IMetadataListParam) => IAction;\n}\n\nconst Indicator = ({\n  indicators,\n  activeMetadataList,\n  activeMetadataListParams,\n  onChange,\n  fieldList,\n  hasType,\n  addText = '+添加指标',\n  hasCustomName = false,\n  type = null,\n  tagList,\n  onGetActiveMetadataList\n}: Props) => {\n  const [metadataparam, setmetadataparam] = React.useState({ ...activeMetadataListParams });\n  React.useEffect(() => {\n    setmetadataparam(activeMetadataListParams);\n  }, [activeMetadataListParams]);\n\n  function handleSelectMetadata(info: IMetadataInfo, index: number) {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators[index].metadataCode = info.code;\n    newIndicators[index].metadataName = info.name;\n    onChange(newIndicators, indicators[index]);\n  }\n\n  function handleFilterChange(info: IFilterInfo, index: number) {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators[index].filter = info;\n    onChange(newIndicators);\n  }\n\n  function handleTypeChange(value: string, index: number) {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators[index].type = value;\n    onChange(newIndicators);\n  }\n\n  function handleNameChange(value: string, index: number) {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators[index].customName = value;\n    onChange(newIndicators);\n  }\n\n  function handleAdd() {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators.push({\n      metadataCode: '_ALL_METADATA',\n      metadataName: '所有事件',\n      type: 'PV',\n      id: uuidv4(),\n      filter: {\n        filterType: 'AND',\n        filterValues: []\n      }\n    });\n    onChange(newIndicators);\n  }\n\n  function handleRemove(index: number) {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators.splice(index, 1);\n    onChange(newIndicators, indicators[index]);\n  }\n\n  function handleSearch(param: IMetadataListParam) {\n    onGetActiveMetadataList(param);\n  }\n\n  const allMetadata = {\n    name: '所有事件',\n    code: '_ALL_METADATA'\n  } as IMetadataInfo;\n\n  return (\n    <div className={style.wrapper}>\n      <div>\n        {indicators.map((indicatorInfo, index) => (\n          <div key={indicatorInfo.id}>\n            <Row className={style.item} gutter={10}>\n              <Col span={1}>\n                <div className={style.center}>\n                  <Tag color='gold'>{index + 1}</Tag>\n                </div>\n              </Col>\n              <Col span={3}>\n                <Dropdown\n                  overlay={\n                    <div className={style.content}>\n                      <div onClick={e => e.stopPropagation()}>\n                        <Search\n                          placeholder='搜索事件'\n                          value={metadataparam.name}\n                          onChange={e => setmetadataparam({ ...metadataparam, name: e.target.value })}\n                          onSearch={name => handleSearch({ ...metadataparam, name })}\n                          style={{ width: 200 }}\n                        />\n                        &nbsp;\n                        <Select\n                          placeholder='根据标签筛选'\n                          style={{ width: 200 }}\n                          mode='multiple'\n                          value={metadataparam.tags ? metadataparam.tags.split(',').map(item => Number(item)) : []}\n                          onChange={(tags: number[]) => handleSearch({ ...metadataparam, tags: tags.join(',') })}\n                        >\n                          {tagList.list.map(item => (\n                            <Option key={item.id} value={item.id}>\n                              {item.name}\n                            </Option>\n                          ))}\n                        </Select>\n                      </div>\n\n                      <div className={style.metadataBox}>\n                        <span\n                          onClick={() => handleSelectMetadata(allMetadata, index)}\n                          className={allMetadata.code === indicatorInfo.metadataCode ? style.active : ''}\n                          key={allMetadata.code}\n                        >\n                          所有事件\n                        </span>\n\n                        {activeMetadataList.list\n                          .filter(item => {\n                            if (!type) {\n                              return true;\n                            }\n                            return item.type === type;\n                          })\n                          .map(item => (\n                            <span\n                              onClick={() => handleSelectMetadata(item, index)}\n                              className={item.code === indicatorInfo.metadataCode ? style.active : ''}\n                              key={item.code}\n                            >\n                              {item.name}\n                            </span>\n                          ))}\n                      </div>\n                    </div>\n                  }\n                >\n                  <Input value={indicatorInfo.metadataName} readOnly className={style.select} />\n                </Dropdown>\n              </Col>\n              {hasCustomName && (\n                <Col span={3}>\n                  <Input\n                    defaultValue={indicatorInfo.customName}\n                    placeholder='自定义名称'\n                    onBlur={event => handleNameChange(event.target.value, index)}\n                  />\n                </Col>\n              )}\n              {hasType && (\n                <>\n                  <Col span={1}>\n                    <div className={style.center}>的</div>\n                  </Col>\n                  <Col span={3}>\n                    <Select onChange={(val: string) => handleTypeChange(val, index)} value={indicatorInfo.type}>\n                      <Option value='PV'>总次数</Option>\n                      <Option value='UV'>用户数</Option>\n                      <Option value='APV'>人均次数</Option>\n                      <Option value='DPV'>日均次数</Option>\n                      <Option value='DUV'>日均用户数</Option>\n                    </Select>\n                  </Col>\n                </>\n              )}\n\n              {indicators.length > 1 && (\n                <Col span={1}>\n                  <div onClick={() => handleRemove(index)} className={'app-link ' + style.center}>\n                    <Icon type='close' />\n                  </div>\n                </Col>\n              )}\n            </Row>\n            <div className={style.filter}>\n              <Filter\n                fieldList={fieldList}\n                filterInfo={indicatorInfo.filter}\n                onChange={filter => handleFilterChange(filter, index)}\n              ></Filter>\n            </div>\n          </div>\n        ))}\n      </div>\n      <a onClick={handleAdd}>{addText}</a>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IStoreState) => {\n  const { activeMetadataList, activeMetadataListParams, tagList, fieldList } = state.metadata;\n  return {\n    activeMetadataList,\n    activeMetadataListParams,\n    tagList,\n    fieldList\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) =>\n  bindActionCreators(\n    {\n      onGetActiveMetadataList: param => doGetActiveMetadataList.request(param)\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Indicator);\n",
    "// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__9rptJ\",\"line\":\"Filter_line__eOPS4\",\"type\":\"Filter_type__2GtXQ\",\"form\":\"Filter_form__1lfK0\",\"close\":\"Filter_close__1AZpi\",\"add\":\"Filter_add__2YNj8\"};",
    "import React from 'react';\nimport { Icon, Button, Input } from 'antd';\nimport { connect } from 'react-redux';\nimport { IAction, IStoreState } from '@/types';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { doAddReport, doUpdateReport } from '@/store/actions';\nimport { IReportAddParam, IReportUpdateParam, IReportInfo } from '@/api';\nimport style from './AnalyseHeader.module.less';\ninterface Props {\n  reportInfo: IReportInfo;\n  handleAddReport: (params: IReportAddParam) => IAction;\n  handleUpdateReport: (params: IReportUpdateParam) => IAction;\n  data: Object;\n  //handleAppandBoard: (params: any) => IAction;\n}\nconst AnalyseHeader = ({ reportInfo, handleUpdateReport, handleAddReport, data }: Props) => {\n  const [newReportInfo, setnewReportInfo] = React.useState(reportInfo);\n  React.useEffect(() => {\n    setnewReportInfo(reportInfo);\n  }, [reportInfo]);\n\n  const handleSave = () => {\n    if (typeof reportInfo.id !== 'undefined') {\n      handleUpdateReport({ id: null, ...newReportInfo, data });\n    } else {\n      handleAddReport({ ...newReportInfo, data });\n    }\n  };\n\n  const handleSaveAs = () => {\n    const { id, ...newInfo } = newReportInfo;\n    handleAddReport({ ...newInfo, data });\n  };\n\n  const handleAppand = () => {\n    //handleAppandBoard(newReportInfo);\n  };\n\n  return (\n    <div className={style.wrapper}>\n      <h2 className={style.title}>\n        <Input\n          type='text'\n          onChange={e => setnewReportInfo({ ...newReportInfo, name: e.target.value })}\n          value={newReportInfo.name}\n        />\n      </h2>\n      <div className={style.btns}>\n        <Button type='link' icon='save' onClick={handleSave}>\n          保存\n        </Button>\n        {newReportInfo.id && (\n          <Button type='link' icon='save' onClick={handleSaveAs}>\n            另存为\n          </Button>\n        )}\n        <Button type='link' icon='plus-circle' onClick={handleAppand}>\n          添加到\n        </Button>\n      </div>\n      <div className={style.description}>\n        <Input\n          onChange={e => setnewReportInfo({ ...newReportInfo, description: e.target.value })}\n          value={newReportInfo.description}\n        ></Input>\n      </div>\n    </div>\n  );\n};\nconst mapStateToProps = (state: IStoreState) => {\n  const { reportInfo } = state.report;\n  return {\n    reportInfo\n  };\n};\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) =>\n  bindActionCreators(\n    {\n      handleAddReport: (params: IReportAddParam) => {\n        return doAddReport.request(params);\n      },\n      handleUpdateReport: (params: IReportUpdateParam) => {\n        return doUpdateReport.request(params);\n      }\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AnalyseHeader);\n",
    "// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AnalyseHeader_wrapper__1r0g1\",\"btns\":\"AnalyseHeader_btns__G6iwS\",\"title\":\"AnalyseHeader_title__1X3LF\",\"description\":\"AnalyseHeader_description__1fJOY\"};",
    "// extracted by mini-css-extract-plugin\nmodule.exports = {\"ruleTitle\":\"Analyse_ruleTitle__3EBvq\",\"preview\":\"Analyse_preview__3BAIC\",\"wrapper\":\"Analyse_wrapper__14KR4\",\"ruleSection\":\"Analyse_ruleSection__3E7iy\"};",
    "// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PathData_wrapper__p7PRs\",\"select\":\"PathData_select__CdiON\",\"content\":\"PathData_content__1usJl\",\"center\":\"PathData_center__bf1Ka\",\"metadataBox\":\"PathData_metadataBox__SFkXm\",\"active\":\"PathData_active__1ZvVM\",\"pathString\":\"PathData_pathString__33FXG\",\"filter\":\"PathData_filter__dCV3V\",\"pageList\":\"PathData_pageList__3IJ0R\",\"pageItem\":\"PathData_pageItem__2mtad\",\"addPageBtn\":\"PathData_addPageBtn__3gfgq\",\"pageClose\":\"PathData_pageClose__10U7Q\",\"fatherPage\":\"PathData_fatherPage__NfKXP\"};",
    "import * as React from 'react';\nimport { Tag, Select, Row, Col, Icon, Popover, Input, Dropdown, Divider, Button } from 'antd';\nimport style from './Indicator.module.less';\nimport {\n  IMetadataInfo,\n  IMetadataListParam,\n  IIndicatorInfo,\n  IFieldInfo,\n  IFilterInfo,\n  ITagList,\n  IChildPageData\n} from '@/api';\nimport { IPageData, IAction, IStoreState, IListData } from '@/types';\nimport { connect } from 'react-redux';\n\nimport { bindActionCreators, Dispatch } from 'redux';\nimport Filter from './Filter';\nimport { doGetActiveMetadataList } from '../store/actions';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst { Option, OptGroup } = Select;\n\nconst { Search } = Input;\n\ninterface Props {\n  parentInfo: IIndicatorInfo;\n  fieldList: IListData<IFieldInfo>;\n  indicators: IIndicatorInfo[];\n  pageData: IChildPageData;\n  onChange: (param: IChildPageData) => any;\n  addText?: string;\n}\n\nconst ChildPage = ({ indicators, onChange, fieldList, addText = '+添加子页面', pageData, parentInfo }: Props) => {\n  function handleSelectPage(pageId: string, index: number) {\n    const newPageData: IChildPageData = JSON.parse(JSON.stringify(pageData));\n    newPageData.children[index].id = pageId;\n    onChange(newPageData);\n  }\n\n  function handleFilterChange(info: IFilterInfo, index: number) {\n    const newPageData: IChildPageData = JSON.parse(JSON.stringify(pageData));\n    newPageData.children[index].filter = info;\n    onChange(newPageData);\n  }\n\n  function handleAdd() {\n    const newPageData: IChildPageData = JSON.parse(JSON.stringify(pageData));\n    newPageData.children.push({\n      id: null,\n      key: uuidv4(),\n      filter: {\n        filterType: 'AND',\n        filterValues:\n          parentInfo.metadataCode !== '_ALL_METADATA'\n            ? [\n                {\n                  key: 'referrerId',\n                  type: 'equal',\n                  value: [parentInfo.metadataCode],\n                  id: uuidv4()\n                }\n              ]\n            : []\n      }\n    });\n    onChange(newPageData);\n  }\n\n  function handleRemove(index: number) {\n    const newPageData: IChildPageData = JSON.parse(JSON.stringify(pageData));\n    newPageData.children.splice(index, 1);\n    onChange(newPageData);\n  }\n\n  function handleAddReferer(index: number) {\n    const newPageData: IChildPageData = JSON.parse(JSON.stringify(pageData));\n    newPageData.children[index].filter.filterValues.push({\n      key: 'referrerId',\n      type: 'equal',\n      value: [parentInfo.metadataCode],\n      id: uuidv4()\n    });\n    onChange(newPageData);\n  }\n\n  return (\n    <div className={style.wrapper}>\n      <div>\n        {pageData.children.map((pageInfo, index) => (\n          <div key={pageInfo.key}>\n            <Row className={style.item} gutter={10}>\n              <Col span={1}>\n                <div className={style.center}>\n                  <Tag color='gold'>{index + 1}</Tag>\n                </div>\n              </Col>\n              <Col span={8}>\n                <Select\n                  value={pageInfo.id}\n                  placeholder='选择子页面'\n                  style={{ width: '100%' }}\n                  onChange={(pageId: string) => handleSelectPage(pageId, index)}\n                >\n                  {indicators\n                    .filter(item => item.id !== parentInfo.id)\n                    .map(item => (\n                      <Option\n                        key={item.id}\n                        value={item.id}\n                        disabled={!!pageData.children.find(val => val.id === item.id)}\n                      >\n                        {item.customName || item.metadataName}\n                      </Option>\n                    ))}\n                </Select>\n              </Col>\n              <Col span={8}>\n                {!pageInfo.filter.filterValues.find(item => item.key === 'referrerId') && (\n                  <Button onClick={() => handleAddReferer(index)}>关联referrer</Button>\n                )}\n                &nbsp;\n                {pageData.children.length > 1 && <Button onClick={() => handleRemove(index)}>删除</Button>}\n              </Col>\n            </Row>\n            <div className={style.filter}>\n              <Filter\n                fieldList={fieldList}\n                filterInfo={pageInfo.filter}\n                onChange={filter => handleFilterChange(filter, index)}\n              ></Filter>\n            </div>\n          </div>\n        ))}\n      </div>\n      <a onClick={handleAdd}>{addText}</a>\n    </div>\n  );\n};\n\nexport default ChildPage;\n",
    "import * as React from 'react';\nimport { Tag, Select, Row, Col, Icon, Input, Dropdown, Divider, Button, Drawer, Menu } from 'antd';\nimport style from './PathData.module.less';\nimport { IIndicatorInfo, IChildPageInfo, IFieldInfo, IChildPageData } from '@/api';\nimport { SortableContainer, SortableElement, SortableHandle } from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\nimport Indicator from '@/components/Indicator';\nimport ChildPage from './ChildPage';\nimport { IListData } from '@/types';\nimport { v4 as uuidv4 } from 'uuid';\nconst { Option } = Select;\n\ninterface Props {\n  childPageData: IChildPageData[];\n  indicators: IIndicatorInfo[];\n  fieldList: IListData<IFieldInfo>;\n  onChange: (param: IChildPageData[]) => any;\n}\n\nconst PathData = ({ childPageData, indicators, onChange, fieldList }: Props) => {\n  const [drawerVisible, setdrawerVisible] = React.useState(false);\n  const [selectedPath, setselectedPath] = React.useState<number[]>([]);\n  const [selectedParentPageIndex, setselectedParentPageIndex] = React.useState<number>(null);\n\n  const [selectedParentPage, setselectedParentPage] = React.useState<IChildPageData>(null);\n\n  function handleChange(value: IChildPageData, index: number) {\n    let newChildPageData: IChildPageData[] = JSON.parse(JSON.stringify(childPageData));\n    newChildPageData[index] = value;\n    onChange(newChildPageData);\n  }\n\n  const indicatorsMap = indicators.reduce<{ [prop: string]: IIndicatorInfo }>((total, item) => {\n    total[item.id] = item;\n    return total;\n  }, {});\n\n  function handleAdd() {\n    const newChildPageData: IChildPageData[] = JSON.parse(JSON.stringify(childPageData));\n    newChildPageData.push({\n      parentId: null,\n      key: uuidv4(),\n      children: []\n    });\n    onChange(newChildPageData);\n  }\n\n  function handleRemove(index: number) {\n    const newChildPageData: IChildPageData[] = JSON.parse(JSON.stringify(childPageData));\n    newChildPageData.splice(index, 1);\n    onChange(newChildPageData);\n  }\n\n  function handleUpdate(index: number) {\n    setdrawerVisible(true);\n    setselectedParentPage(childPageData[index]);\n    setselectedParentPageIndex(index);\n  }\n\n  function hanldClose() {\n    setdrawerVisible(false);\n\n    handleChange(\n      { ...selectedParentPage, children: selectedParentPage.children.filter(item => item.id) },\n      selectedParentPageIndex\n    );\n  }\n\n  function handleRemovePage(index: number) {\n    const data = [...selectedPath];\n    data.splice(index, 1);\n    setselectedPath(data);\n  }\n\n  const handleAddPage = (id: number) => {\n    setselectedPath(selectedPath.concat([id]));\n  };\n\n  return (\n    <div className={style.wrapper}>\n      <Drawer\n        width={840}\n        title='编辑下游页面'\n        placement='right'\n        closable={false}\n        onClose={hanldClose}\n        visible={drawerVisible}\n      >\n        {selectedParentPage && (\n          <ChildPage\n            parentInfo={indicatorsMap[selectedParentPage.parentId]}\n            pageData={selectedParentPage}\n            fieldList={fieldList}\n            addText='+添加子页面'\n            indicators={indicators}\n            onChange={setselectedParentPage}\n          />\n        )}\n      </Drawer>\n\n      <div>\n        {childPageData.map((item, index) => (\n          <div key={item.key}>\n            <Row className={style.item} gutter={10}>\n              <Col span={2}>\n                <div className={style.center}>父级页 {index + 1}</div>\n              </Col>\n              <Col span={6}>\n                <div className={style.fatherPage}>\n                  <Select\n                    value={item.parentId}\n                    onChange={(parentId: string) => handleChange({ ...item, parentId, children: [] }, index)}\n                  >\n                    {indicators.map(item => (\n                      <Option\n                        disabled={!!childPageData.find(val => val.parentId === item.id)}\n                        key={item.id}\n                        value={item.id}\n                      >\n                        {item.customName || item.metadataName}\n                      </Option>\n                    ))}\n                  </Select>\n                  <strong>下游页面:</strong>\n                  <span className={style.pathString}>\n                    {item.children\n                      .filter(info => !!indicatorsMap[info.id])\n                      .map(info => indicatorsMap[info.id].customName || indicatorsMap[info.id].metadataName)\n                      .join(',')}\n                  </span>\n                </div>\n              </Col>\n              <Col span={4}>\n                {item.parentId && (\n                  <Button size='default' onClick={() => handleUpdate(index)}>\n                    编辑下游页面\n                  </Button>\n                )}\n                &nbsp;\n                {childPageData.length > 1 && (\n                  <Button size='small' onClick={() => handleRemove(index)}>\n                    删除\n                  </Button>\n                )}\n              </Col>\n            </Row>\n          </div>\n        ))}\n      </div>\n      <a onClick={handleAdd}>添加父级页</a>\n    </div>\n  );\n};\n\nexport default PathData;\n",
    "import { Icon, Collapse, Divider, Select, Input, Row, Col, Button, Spin } from 'antd';\nimport React from 'react';\nimport AnalyseRangePicker from '@/components/AnalyseRangePicker';\n\nimport style from './Analyse.module.less';\n\nimport Indicator from '@/components/Indicator';\nimport PathData from '@/components/PathData';\n\nimport Filter from '@/components/Filter';\nimport AnalyseHeader from './components/AnalyseHeader';\nimport { IReportInfo, IFieldInfo, IPathAnalyseData, IPathAnalyseParam, EMetadataType, IIndicatorInfo } from '@/api';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { doAddReport, doUpdateReport, doGetPathAnalyse } from '@/store/actions';\nimport { IAction, IStoreState, IListData, IDate } from '@/types';\nimport { DYNAMIC_TIME } from '@/constants';\nimport AnalysePathChart from './components/AnalysePathChart';\nconst { Option } = Select;\nconst { Panel } = Collapse;\nconst { Group } = Input;\ninterface Props {\n  fieldList: IListData<IFieldInfo>;\n  onGetPathAnalyseData: (param: IPathAnalyseParam) => IAction;\n  projectId: number;\n  pathAnalyseData: IPathAnalyseData;\n  pathAnalyseParam: IPathAnalyseParam;\n  analyseLoading: boolean;\n}\n\nconst AnalysePath = ({\n  analyseLoading,\n  fieldList,\n  onGetPathAnalyseData,\n  projectId,\n  pathAnalyseData,\n  pathAnalyseParam\n}: Props) => {\n  const handleChange = (info: IPathAnalyseParam, indicator?: IIndicatorInfo) => {\n    info.projectId = projectId;\n    if (indicator) {\n      info.childPageData = info.childPageData.filter(item => item.parentId !== indicator.id);\n      for (let i in info.childPageData) {\n        info.childPageData[i].children = info.childPageData[i].children.filter(item => item.id !== indicator.id);\n      }\n    }\n    onGetPathAnalyseData(info);\n  };\n\n  return (\n    <div className={style.wrapper}>\n      <AnalyseHeader data={{ ...pathAnalyseParam, projectId }}></AnalyseHeader>\n      <div className={style.rule}>\n        <div className={style.ruleSection}>\n          <span className={style.ruleTitle}>指标:</span>\n          <Select\n            style={{ width: 100 }}\n            value={pathAnalyseParam.indicatorType}\n            onChange={(indicatorType: string) => handleChange({ ...pathAnalyseParam, indicatorType })}\n          >\n            <Option value='PV'>总数</Option>\n            <Option value='UV'> 用户数</Option>\n            <Option value='APV'>人均次数</Option>\n            <Option value='DPV'>日均次数</Option>\n            <Option value='DUV'>日均用户数</Option>\n          </Select>\n        </div>\n\n        <div className={style.ruleSection}>\n          <span className={style.ruleTitle}>筛选:</span>\n          <Filter\n            fieldList={fieldList}\n            filterInfo={pathAnalyseParam.filter}\n            onChange={filter => handleChange({ ...pathAnalyseParam, filter })}\n          />\n        </div>\n\n        <div className={style.ruleSection}>\n          <span className={style.ruleTitle}>页面池:</span>\n          <Indicator\n            addText='+添加页面'\n            hasCustomName\n            type={EMetadataType.page}\n            indicators={pathAnalyseParam.indicators}\n            onChange={(indicators, indicator) => handleChange({ ...pathAnalyseParam, indicators }, indicator)}\n          />\n        </div>\n\n        <div className={style.ruleSection}>\n          <span className={style.ruleTitle}>父级页:</span>\n          <PathData\n            fieldList={fieldList}\n            indicators={pathAnalyseParam.indicators}\n            childPageData={pathAnalyseParam.childPageData}\n            onChange={childPageData => handleChange({ ...pathAnalyseParam, childPageData: childPageData })}\n          ></PathData>\n        </div>\n      </div>\n\n      <div className={style.preview}>\n        <Row>\n          <Col span={14}>\n            <AnalyseRangePicker\n              onChange={time => handleChange({ ...pathAnalyseParam, ...time })}\n              value={{\n                dateType: pathAnalyseParam.dateType,\n                dateEnd: pathAnalyseParam.dateEnd,\n                dateStart: pathAnalyseParam.dateStart\n              }}\n            />\n          </Col>\n          <Col span={6} offset={4}>\n            <Group compact>\n              <Button icon='download'>导出</Button>\n            </Group>\n          </Col>\n        </Row>\n        <Spin spinning={analyseLoading}>\n          <AnalysePathChart data={pathAnalyseData}></AnalysePathChart>\n        </Spin>\n        <div></div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IStoreState) => {\n  const { fieldList } = state.metadata;\n  const projectId = state.project.projectInfo.id;\n  const { pathAnalyseData, pathAnalyseParam, analyseLoading } = state.analyse;\n  return {\n    fieldList,\n    projectId,\n    pathAnalyseData,\n    pathAnalyseParam,\n    analyseLoading\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) =>\n  bindActionCreators(\n    {\n      onGetPathAnalyseData: (param: IPathAnalyseParam) => doGetPathAnalyse.request(param)\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AnalysePath);\n"
  ],
  "sourceRoot": ""
}
