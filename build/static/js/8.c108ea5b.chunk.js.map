{"version":3,"sources":["components/Indicator.tsx","components/Indicator.module.less","components/Filter.module.less","components/Dimension.tsx","components/Dimension.module.less","pages/analyse/components/AnalyseHeader.tsx","pages/analyse/components/AnalyseHeader.module.less","pages/analyse/AnalyseFunnel.module.less","pages/analyse/components/AnalyseFunnelList.tsx","pages/analyse/components/AnalyseFunnelChart.tsx","pages/analyse/AnalyseFunnel.tsx","components/Filter.tsx"],"names":["Option","Select","Search","OptGroup","Input","connect","state","metadata","activeMetadataList","activeMetadataListParams","dispatch","bindActionCreators","indicators","onChange","fieldList","hasType","addText","hasCustomName","handleFilterChange","info","index","newIndicators","JSON","parse","stringify","filter","handleTypeChange","value","type","className","style","wrapper","map","indicatorInfo","key","id","item","gutter","span","center","color","overlay","content","onClick","e","stopPropagation","placeholder","onSearch","console","log","width","metadataBox","list","trackId","code","metadataCode","metadataName","name","handleSelectMetadata","readOnly","select","defaultValue","customName","onBlur","event","handleNameChange","target","val","length","splice","handleRemove","filterInfo","push","Date","now","filterType","filterValues","module","exports","Dimension","dimension","field","reportInfo","report","handleAddReport","params","doAddReport","request","handleUpdateReport","doUpdateReport","data","React","useState","newReportInfo","setnewReportInfo","useEffect","title","btns","icon","description","getOptions","step","options","grid","bottom","top","tooltip","trigger","legend","show","xAxis","axisLine","lineStyle","yAxis","minInterval","splitLine","nameTextStyle","splitArea","series","forEach","time","conversionRateMap","AnalyseFunnelList","setstep","find","allData","conversionRate","count","option","theme","notMerge","lazyUpdate","left","minSize","maxSize","sort","gap","label","position","formatter","param","emphasis","fontSize","getTableData","reduce","total","children","member","steps","AnalyseFunnelChart","tableData","columns","dataIndex","fixed","defaultSortOrder","sorter","a","b","getTime","render","text","test","moment","format","getFormatByTimeUnit","timeUnit","record","getColumns","tableScroll","x","dataSource","scroll","Panel","Collapse","Group","projectId","project","projectInfo","analyse","funnelAnalyseData","funnelAnalyseParam","analyseLoading","onGetFunnelAnalyseData","doGetFunnelAnalyse","handleChange","AnalyseHeader","defaultActiveKey","header","ruleTitle","indicatorType","Filter","Indicator","preview","AnalyseRangePicker","dateType","dateEnd","dateStart","offset","compact","spinning","recommend","setrecommend","handleFieldChange","newFilterInfo","handleFilterTypeChange","handleFilterValueChange","line","form","mode","tokenSeparators","handleClose","close"],"mappings":"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","file":"static/js/8.c108ea5b.chunk.js","sourcesContent":["import * as React from 'react';\nimport { Tag, Select, Row, Col, Icon, Popover, Input, Dropdown, Divider } from 'antd';\nimport style from './Indicator.module.less';\nimport { IMetadataInfo, IMetadataListParam, IIndicatorInfo, IFieldInfo, IFilterInfo } from '@/api';\nimport { IPageData, IAction, IStoreState, IListData } from '@/types';\nimport { connect } from 'react-redux';\n\nimport { bindActionCreators, Dispatch } from 'redux';\nimport Filter from './Filter';\nconst { Option, OptGroup } = Select;\n\nconst { Search } = Input;\n\ninterface Props {\n  activeMetadataList: IPageData<IMetadataInfo>;\n  activeMetadataListParams: IMetadataListParam;\n  index?: number;\n  fieldList: IListData<IFieldInfo>;\n  indicators: IIndicatorInfo[];\n  onChange: (param: IIndicatorInfo[]) => any;\n  hasType?: boolean;\n  addText?: string;\n  hasCustomName?: boolean;\n}\n\nconst Indicator = ({\n  indicators,\n  activeMetadataList,\n  activeMetadataListParams,\n  onChange,\n  fieldList,\n  hasType,\n  addText = '+添加指标',\n  hasCustomName = false\n}: Props) => {\n  function handleSelectMetadata(info: IMetadataInfo, index: number) {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators[index].trackId = info.code;\n    newIndicators[index].metadataCode = info.code;\n    newIndicators[index].metadataName = info.name;\n    onChange(newIndicators);\n  }\n\n  function handleFilterChange(info: IFilterInfo, index: number) {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators[index].filter = info;\n    onChange(newIndicators);\n  }\n\n  function handleTypeChange(value: string, index: number) {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators[index].type = value;\n    onChange(newIndicators);\n  }\n\n  function handleNameChange(value: string, index: number) {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators[index].customName = value;\n    onChange(newIndicators);\n  }\n\n  function handleAdd() {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators.push({\n      trackId: null,\n      metadataCode: null,\n      metadataName: '所有事件',\n      type: 'SUM',\n      id: Date.now(),\n      filter: {\n        filterType: 'AND',\n        filterValues: []\n      }\n    });\n    onChange(newIndicators);\n  }\n\n  function handleRemove(index: number) {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators.splice(index, 1);\n    onChange(newIndicators);\n  }\n\n  return (\n    <div className={style.wrapper}>\n      <div>\n        {indicators.map((indicatorInfo, index) => (\n          <div key={indicatorInfo.id}>\n            <Row className={style.item} gutter={10}>\n              <Col span={1}>\n                <div className={style.center}>\n                  <Tag color='gold'>{index + 1}</Tag>\n                </div>\n              </Col>\n              <Col span={3}>\n                <Dropdown\n                  overlay={\n                    <div className={style.content}>\n                      <div onClick={e => e.stopPropagation()}>\n                        <Search placeholder='搜索事件' onSearch={value => console.log(value)} style={{ width: 200 }} />\n                        <Select style={{ width: 200 }}>\n                          <Option value='1'>标签1</Option>\n                          <Option value='2'>标签2</Option>\n                          <Option value='3'>标签3</Option>\n                        </Select>\n                      </div>\n\n                      <div className={style.metadataBox}>\n                        {activeMetadataList.list.map(item => (\n                          <span\n                            onClick={() => handleSelectMetadata(item, index)}\n                            className='app-pointer'\n                            key={item.code}\n                          >\n                            {item.name}\n                          </span>\n                        ))}\n                      </div>\n                    </div>\n                  }\n                >\n                  <Input value={indicatorInfo.metadataName} readOnly className={style.select} />\n                </Dropdown>\n              </Col>\n              {hasCustomName && (\n                <Col span={3}>\n                  <Input\n                    defaultValue={indicatorInfo.customName}\n                    placeholder='自定义名称'\n                    onBlur={event => handleNameChange(event.target.value, index)}\n                  />\n                </Col>\n              )}\n              {hasType && (\n                <>\n                  <Col span={1}>\n                    <div className={style.center}>的</div>\n                  </Col>\n                  <Col span={3}>\n                    <Select onChange={(val: string) => handleTypeChange(val, index)} value={indicatorInfo.type}>\n                      <Option value='SUM'>总次数</Option>\n                      <Option value='USER_SUM'>用户数</Option>\n                      <Option value='3'>人均次数</Option>\n                    </Select>\n                  </Col>\n                </>\n              )}\n\n              {indicators.length > 1 && (\n                <Col span={1}>\n                  <div onClick={() => handleRemove(index)} className={'app-link ' + style.center}>\n                    <Icon type='close' />\n                  </div>\n                </Col>\n              )}\n            </Row>\n            <div className={style.filter}>\n              <Filter\n                fieldList={fieldList}\n                filterInfo={indicatorInfo.filter}\n                onChange={filter => handleFilterChange(filter, index)}\n              ></Filter>\n            </div>\n          </div>\n        ))}\n      </div>\n      <a onClick={handleAdd}>{addText}</a>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IStoreState) => {\n  const { activeMetadataList, activeMetadataListParams } = state.metadata;\n  return {\n    activeMetadataList,\n    activeMetadataListParams\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) => bindActionCreators({}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Indicator);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Indicator_wrapper__3B5qd\",\"select\":\"Indicator_select__1kP-z\",\"content\":\"Indicator_content__3-BaR\",\"center\":\"Indicator_center__3Oax_\",\"metadataBox\":\"Indicator_metadataBox__3wnAQ\",\"active\":\"Indicator_active__1aD9o\",\"filter\":\"Indicator_filter__lBazH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__9rptJ\",\"line\":\"Filter_line__eOPS4\",\"type\":\"Filter_type__2GtXQ\",\"form\":\"Filter_form__1lfK0\",\"close\":\"Filter_close__1AZpi\"};","import * as React from 'react';\nimport { Select, Row, Col, Icon } from 'antd';\nimport style from './Dimension.module.less';\nimport { IFieldInfo } from '@/api';\nimport { IListData } from '@/types';\nconst { Option, OptGroup } = Select;\n\ninterface Props {\n  fieldList: IListData<IFieldInfo>;\n  dimension: string;\n  onChange: (param: string) => any;\n}\n\nconst Dimension = ({ fieldList, dimension, onChange }: Props) => {\n  return (\n    <div className={style.wrapper}>\n      <Row className={style.item}>\n        <Col span={1}>\n          <div className={style.center}>按</div>\n        </Col>\n        <Col span={3}>\n          <Select value={dimension} onChange={onChange}>\n            <Option value=''>总体</Option>\n            {fieldList.list.map(field => (\n              <Option value={field.value} key={field.value}>\n                {field.name}\n              </Option>\n            ))}\n          </Select>\n        </Col>\n        <Col span={1}>\n          <div className={style.center}>查看</div>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default Dimension;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Dimension_wrapper__Ew76P\",\"center\":\"Dimension_center__1BCis\"};","import React from 'react';\nimport { Icon, Button, Input } from 'antd';\nimport { connect } from 'react-redux';\nimport { IAction, IStoreState } from '@/types';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { doAddReport, doUpdateReport } from '@/store/actions';\nimport { IReportAddParam, IReportUpdateParam, IReportInfo } from '@/api';\nimport style from './AnalyseHeader.module.less';\ninterface Props {\n  reportInfo: IReportInfo;\n  handleAddReport: (params: IReportAddParam) => IAction;\n  handleUpdateReport: (params: IReportUpdateParam) => IAction;\n  data: Object;\n  //handleAppandBoard: (params: any) => IAction;\n}\nconst AnalyseHeader = ({ reportInfo, handleUpdateReport, handleAddReport, data }: Props) => {\n  const [newReportInfo, setnewReportInfo] = React.useState(reportInfo);\n  React.useEffect(() => {\n    setnewReportInfo(reportInfo);\n  }, [reportInfo]);\n\n  const handleSave = () => {\n    if (typeof reportInfo.id !== 'undefined') {\n      handleUpdateReport({ id: null, ...newReportInfo, data });\n    } else {\n      handleAddReport({ ...newReportInfo, data });\n    }\n  };\n\n  const handleSaveAs = () => {\n    handleAddReport({ ...newReportInfo, data });\n  };\n\n  const handleAppand = () => {\n    //handleAppandBoard(newReportInfo);\n  };\n\n  return (\n    <div className={style.wrapper}>\n      <h2 className={style.title}>\n        <Input\n          type='text'\n          onChange={e => setnewReportInfo({ ...newReportInfo, name: e.target.value })}\n          value={newReportInfo.name}\n        />\n      </h2>\n      <div className={style.btns}>\n        <Button type='link' icon='save' onClick={handleSave}>\n          保存\n        </Button>\n        {newReportInfo.id && (\n          <Button type='link' icon='save' onClick={handleSaveAs}>\n            另存为\n          </Button>\n        )}\n        <Button type='link' icon='plus-circle' onClick={handleAppand}>\n          添加到\n        </Button>\n      </div>\n      <div className={style.description}>\n        <Input\n          onChange={e => setnewReportInfo({ ...newReportInfo, description: e.target.value })}\n          value={newReportInfo.description}\n        ></Input>\n      </div>\n    </div>\n  );\n};\nconst mapStateToProps = (state: IStoreState) => {\n  const { reportInfo } = state.report;\n  return {\n    reportInfo\n  };\n};\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) =>\n  bindActionCreators(\n    {\n      handleAddReport: (params: IReportAddParam) => {\n        return doAddReport.request(params);\n      },\n      handleUpdateReport: (params: IReportUpdateParam) => {\n        return doUpdateReport.request(params);\n      }\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AnalyseHeader);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AnalyseHeader_wrapper__1r0g1\",\"btns\":\"AnalyseHeader_btns__G6iwS\",\"title\":\"AnalyseHeader_title__1X3LF\",\"description\":\"AnalyseHeader_description__1fJOY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ruleTitle\":\"AnalyseFunnel_ruleTitle__3gwQF\",\"preview\":\"AnalyseFunnel_preview__18PLM\"};","import * as React from 'react';\nimport ReactEcharts, { ObjectMap } from 'echarts-for-react';\nimport { Table } from 'antd';\nimport { ColumnProps } from 'antd/lib/table';\nimport { IEventAnalyseParam, IFunnelAnalyseData } from '@/api';\nimport moment from 'moment';\nimport { getFormatByTimeUnit } from '@/utils';\n\ninterface Props {\n  data: IFunnelAnalyseData;\n}\n\nconst getOptions = (data: IFunnelAnalyseData, step: string): ObjectMap => {\n  const options: ObjectMap = {\n    grid: {\n      bottom: 60,\n      top: 20\n    },\n    tooltip: {\n      trigger: 'axis'\n    },\n    legend: {\n      show: true,\n      bottom: 0\n    },\n    xAxis: {\n      type: 'time',\n      axisLine: {\n        lineStyle: {\n          color: '#999'\n        }\n      }\n    },\n    yAxis: {\n      type: 'value',\n      minInterval: 1,\n      splitLine: {\n        lineStyle: {\n          type: 'dashed',\n          color: '#DDD'\n        }\n      },\n      axisLine: {\n        show: false,\n        lineStyle: {\n          color: '#333'\n        }\n      },\n      nameTextStyle: {\n        color: '#999'\n      },\n      splitArea: {\n        show: false\n      }\n    },\n    series: []\n  };\n\n  data.list.forEach(item => {\n    options.series.push({\n      type: 'line',\n      name: item.dimension,\n      data: item.data.map(val => {\n        return {\n          name: val.time,\n          value: [val.time, val.conversionRateMap[step]]\n        };\n      })\n    });\n  });\n\n  return options;\n};\n\nconst AnalyseFunnelList = ({ data }: Props) => {\n  const [step, setstep] = React.useState('_ALL');\n  const hasData = !!data.list.find(item => item.data.length > 0);\n\n  if (!hasData) {\n    return <div>暂无数据</div>;\n  }\n\n  return (\n    <div>\n      <div>\n        {data.list[0].allData.map((item, index) => (\n          <div key={item.key}>\n            {index === 0 ? (\n              <span onClick={() => setstep('_ALL')}>总转化率:{data.conversionRate}%</span>\n            ) : (\n              <span onClick={() => setstep(item.key)}>转化率:{item.conversionRate}%</span>\n            )}\n            <p>\n              {item.customName || item.metadataName}({item.count})\n            </p>\n          </div>\n        ))}\n      </div>\n      <ReactEcharts option={getOptions(data, step)} theme='ts' notMerge={true} lazyUpdate={true} />\n    </div>\n  );\n};\n\nexport default AnalyseFunnelList;\n","import * as React from 'react';\nimport ReactEcharts, { ObjectMap } from 'echarts-for-react';\nimport { Table } from 'antd';\nimport { ColumnProps } from 'antd/lib/table';\nimport { IEventAnalyseParam, IFunnelAnalyseData } from '@/api';\nimport moment from 'moment';\nimport { getFormatByTimeUnit } from '@/utils';\nimport AnalyseFunnelList from './AnalyseFunnelList';\n\ninterface Props {\n  data: IFunnelAnalyseData;\n}\n\nconst getOptions = (data: IFunnelAnalyseData): ObjectMap => {\n  const options: ObjectMap = {\n    tooltip: {\n      show: true\n    },\n    series: [\n      {\n        type: 'funnel',\n        left: '10%',\n        top: 60,\n        bottom: 60,\n        width: '80%',\n\n        minSize: '0%',\n        maxSize: '100%',\n        sort: 'none',\n        gap: 2,\n\n        label: {\n          show: true,\n          position: 'inside',\n          formatter: function(param: any) {\n            return `${param.name}(${param.value})`;\n          }\n        },\n        emphasis: {\n          label: {\n            fontSize: 20\n          }\n        },\n        data: data.list[0].allData.map(item => ({\n          name: item.customName || item.metadataName,\n          value: item.count\n        }))\n      }\n    ]\n  };\n\n  return options;\n};\n\ninterface TableColumnProps {\n  key: string;\n  time: string;\n  [prop: string]: any;\n}\n\nconst getColumns = (data: IFunnelAnalyseData) => {\n  let columns: ColumnProps<TableColumnProps>[] = [\n    {\n      title: '',\n      key: 'time',\n      dataIndex: 'time',\n      fixed: 'left',\n      width: 200,\n      defaultSortOrder: 'descend',\n      sorter: (a, b) => new Date(a.time).getTime() - new Date(b.time).getTime(),\n      render: (text: string) => {\n        if (/\\d/.test(text)) {\n          return moment(text).format(getFormatByTimeUnit(data.timeUnit));\n        }\n        return text;\n      }\n    }\n  ];\n\n  data.list[0].allData.forEach((item, index) => {\n    if (index === 0) {\n      columns.push({\n        title: '总转化率',\n        key: item.key,\n        dataIndex: item.key + '_count',\n        render: (text, record) => (\n          <div>\n            {record[item.key + '_count']} <span>({record[item.key + '_rate']})</span>\n          </div>\n        )\n      });\n    } else {\n      columns.push({\n        title: `第一步(${item.customName || item.metadataName})`,\n        key: item.key,\n        dataIndex: item.key + '_count',\n        render: (text, record) => (\n          <div>\n            {record[item.key + '_count']} <span>({record[item.key + '_rate']})</span>\n          </div>\n        )\n      });\n    }\n  });\n\n  return columns;\n};\n\nconst getTableData = (data: IFunnelAnalyseData): TableColumnProps[] => {\n  const tableData = data.list.map(item => {\n    return {\n      key: item.dimension,\n      time: item.dimension,\n      ...item.allData.reduce((total: { [props: string]: any }, step) => {\n        total[step.key + '_count'] = step.count;\n        total[step.key + '_rate'] = step.conversionRate;\n        return total;\n      }, {}),\n      children: item.data.map(member => ({\n        key: member.time,\n        time: member.time,\n        ...member.steps.reduce((total: { [props: string]: any }, step) => {\n          total[step.key + '_count'] = step.count;\n          total[step.key + '_rate'] = step.conversionRate;\n          return total;\n        }, {})\n      }))\n    };\n  });\n\n  return tableData;\n};\n\nconst AnalyseFunnelChart = ({ data }: Props) => {\n  const hasData = !!data.list.find(item => item.allData.length > 0);\n\n  if (!hasData) {\n    return <div>暂无数据</div>;\n  }\n\n  switch (data.type) {\n    case 'TABLE': {\n      const tableData = getColumns(data);\n      const tableScroll = tableData.length > 5 ? { x: tableData.length * 200 } : {};\n      return (\n        <div>\n          <Table columns={tableData} dataSource={getTableData(data)} scroll={tableScroll} />\n        </div>\n      );\n    }\n\n    case 'LIST': {\n      return (\n        <div>\n          <AnalyseFunnelList data={data}></AnalyseFunnelList>\n        </div>\n      );\n    }\n\n    default:\n      return (\n        <div>\n          <ReactEcharts option={getOptions(data)} theme='ts' notMerge={true} lazyUpdate={true} />\n        </div>\n      );\n  }\n};\n\nexport default AnalyseFunnelChart;\n","import { Icon, Collapse, Divider, Select, Input, Row, Col, Button, Spin } from 'antd';\nimport React from 'react';\nimport AnalyseRangePicker from '@/components/AnalyseRangePicker';\nimport moment from 'moment';\nimport style from './AnalyseFunnel.module.less';\nimport ReactEcharts from 'echarts-for-react';\nimport Indicator from '@/components/Indicator';\nimport Dimension from '@/components/Dimension';\nimport Filter from '@/components/Filter';\nimport AnalyseHeader from './components/AnalyseHeader';\nimport { IReportInfo, IFieldInfo, IFunnelAnalyseData, IFunnelAnalyseParam } from '@/api';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { doAddReport, doUpdateReport, doGetFunnelAnalyse } from '@/store/actions';\nimport { IAction, IStoreState, IListData, IDate } from '@/types';\nimport { DYNAMIC_TIME } from '@/constants';\nimport AnalyseFunnelChart from './components/AnalyseFunnelChart';\nconst { Option } = Select;\nconst { Panel } = Collapse;\nconst { Group } = Input;\ninterface Props {\n  fieldList: IListData<IFieldInfo>;\n  onGetFunnelAnalyseData: (param: IFunnelAnalyseParam) => IAction;\n  projectId: number;\n  funnelAnalyseData: IFunnelAnalyseData;\n  funnelAnalyseParam: IFunnelAnalyseParam;\n  analyseLoading: boolean;\n}\n\nconst AnalyseFunnel = ({\n  analyseLoading,\n  fieldList,\n  onGetFunnelAnalyseData,\n  projectId,\n  funnelAnalyseData,\n  funnelAnalyseParam\n}: Props) => {\n  const handleChange = (info: IFunnelAnalyseParam) => {\n    info.projectId = projectId;\n    onGetFunnelAnalyseData(info);\n  };\n\n  return (\n    <div>\n      <AnalyseHeader data={{ ...funnelAnalyseParam, projectId }}></AnalyseHeader>\n      <Collapse defaultActiveKey={['1']}>\n        <Panel header='添加漏斗分析规则' key='1'>\n          <div>\n            <div className={style.ruleTitle}>\n              <span>指标:</span>\n            </div>\n\n            <Select\n              value={funnelAnalyseParam.indicatorType}\n              onChange={(indicatorType: string) => handleChange({ ...funnelAnalyseParam, indicatorType })}\n            >\n              <Option value='PV'>总数</Option>\n              <Option value='UV'> 用户数</Option>\n              <Option value='APV'>人均次数</Option>\n              <Option value='DPV'>日均次数</Option>\n              <Option value='DUV'>日均用户数</Option>\n            </Select>\n          </div>\n\n          <div>\n            <div className={style.ruleTitle}>\n              <span>维度:</span>\n            </div>\n            <Dimension\n              dimension={funnelAnalyseParam.dimension}\n              fieldList={fieldList}\n              onChange={dimension => handleChange({ ...funnelAnalyseParam, dimension })}\n            />\n          </div>\n\n          <div>\n            <div className={style.ruleTitle}>\n              <span>筛选:</span>\n            </div>\n            <Filter\n              fieldList={fieldList}\n              filterInfo={funnelAnalyseParam.filter}\n              onChange={filter => handleChange({ ...funnelAnalyseParam, filter })}\n            />\n          </div>\n\n          <div>\n            <div className={style.ruleTitle}>\n              <span>漏斗步骤:</span>\n            </div>\n            <Indicator\n              addText='+添加步骤'\n              hasCustomName\n              fieldList={fieldList}\n              indicators={funnelAnalyseParam.indicators}\n              onChange={indicators => handleChange({ ...funnelAnalyseParam, indicators })}\n            />\n          </div>\n        </Panel>\n      </Collapse>\n\n      <div className={style.preview}>\n        <Row>\n          <Col span={14}>\n            <AnalyseRangePicker\n              onChange={time => handleChange({ ...funnelAnalyseParam, ...time })}\n              value={{\n                dateType: funnelAnalyseParam.dateType,\n                dateEnd: funnelAnalyseParam.dateEnd,\n                dateStart: funnelAnalyseParam.dateStart\n              }}\n            />\n          </Col>\n          <Col span={6} offset={4}>\n            <Group compact>\n              <Select\n                style={{ width: '33%' }}\n                value={funnelAnalyseParam.type}\n                onChange={(type: string) => handleChange({ ...funnelAnalyseParam, type })}\n              >\n                <Option value='FUNNEL'>漏斗图</Option>\n                <Option value='LIST'>列表</Option>\n                <Option value='TABLE'>表格</Option>\n              </Select>\n\n              <Button icon='download'>导出</Button>\n            </Group>\n          </Col>\n        </Row>\n        <Spin spinning={analyseLoading}>\n          <AnalyseFunnelChart data={funnelAnalyseData}></AnalyseFunnelChart>\n        </Spin>\n        <div></div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IStoreState) => {\n  const { fieldList } = state.metadata;\n  const projectId = state.project.projectInfo.id;\n  const { funnelAnalyseData, funnelAnalyseParam, analyseLoading } = state.analyse;\n  return {\n    fieldList,\n    projectId,\n    funnelAnalyseData,\n    funnelAnalyseParam,\n    analyseLoading\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) =>\n  bindActionCreators(\n    {\n      onGetFunnelAnalyseData: (param: IFunnelAnalyseParam) => doGetFunnelAnalyse.request(param)\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AnalyseFunnel);\n","import * as React from 'react';\nimport { Select, Row, Col, Icon, AutoComplete } from 'antd';\nimport style from './Filter.module.less';\nimport { IListData } from '@/types';\nimport { IFieldInfo, IFilterInfo, IFilterValue } from '@/api';\nimport { SelectValue } from 'antd/lib/select';\nconst { Option, OptGroup } = Select;\n\ninterface Props {\n  fieldList: IListData<IFieldInfo>;\n  filterInfo: IFilterInfo;\n  onChange: (filterInfo: IFilterInfo) => any;\n}\n\nconst Filter = ({ fieldList, filterInfo, onChange }: Props) => {\n  const [recommend, setrecommend] = React.useState<string[]>([]);\n  const handleFieldChange = (value: string, index: number) => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterValues[index].key = value;\n    newFilterInfo.filterValues[index].type = 'equal';\n    newFilterInfo.filterValues[index].value = [];\n    const field = fieldList.list.find(field => field.value === value);\n    if (field) {\n      setrecommend(field.recommend);\n    }\n\n    onChange(newFilterInfo);\n  };\n\n  const handleFilterTypeChange = (value: string, index: number) => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterValues[index].type = value;\n    if (value === 'equal' || value === 'notEqual') {\n      newFilterInfo.filterValues[index].value = [];\n    } else if (value === 'between') {\n      newFilterInfo.filterValues[index].value = [null, null];\n    } else {\n      newFilterInfo.filterValues[index].value = null;\n    }\n    onChange(newFilterInfo);\n  };\n\n  const handleFilterValueChange = (value: string, index: number) => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterValues[index].value = value;\n    onChange(newFilterInfo);\n  };\n\n  const handleClose = (index: number) => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterValues.splice(index, 1);\n    onChange(newFilterInfo);\n  };\n\n  const handleAdd = () => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterValues.push({\n      type: null,\n      key: null,\n      value: null,\n      id: Date.now()\n    });\n    onChange(newFilterInfo);\n  };\n\n  const handleChangeFilterType = () => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterType = newFilterInfo.filterType === 'AND' ? 'OR' : 'AND';\n    onChange(newFilterInfo);\n  };\n\n  return (\n    <div>\n      {filterInfo.filterValues.length > 0 && (\n        <div className={style.wrapper}>\n          {filterInfo.filterValues.length > 1 && (\n            <div className={style.type}>\n              <button onClick={handleChangeFilterType}>{filterInfo.filterType === 'AND' ? '且' : '或'}</button>\n              <div className={style.line}></div>\n            </div>\n          )}\n          <div className={style.form}>\n            {filterInfo.filterValues.map((filter, index) => (\n              <Row gutter={16} key={filter.id}>\n                <Col span={3}>\n                  <Select value={filter.key} onChange={(val: string) => handleFieldChange(val, index)}>\n                    {fieldList.list.map(field => (\n                      <Option value={field.value} key={field.value}>\n                        {field.name}\n                      </Option>\n                    ))}\n                  </Select>\n                </Col>\n                <Col span={3}>\n                  <Select value={filter.type} onChange={(val: string) => handleFilterTypeChange(val, index)}>\n                    <Option value='equal'>等于</Option>\n                    <Option value='notEqual'>不等于</Option>\n                    <Option value='isSet'>有值</Option>\n                    <Option value='notSet'>没值</Option>\n\n                    <Option value='greater'>大于</Option>\n                    <Option value='less'>小于</Option>\n                    <Option value='between'>区间</Option>\n\n                    <Option value='contain'>包含</Option>\n                    <Option value='notContain'>不包含</Option>\n                    <Option value='isEmpty'>为空</Option>\n                    <Option value='isNotEmpty'>不为空</Option>\n                    <Option value='rlike'>正则匹配</Option>\n                    <Option value='notrlike'>正则不匹配</Option>\n                  </Select>\n                </Col>\n                {filter.type !== 'isEmpty' &&\n                  filter.type !== 'isNotEmpty' &&\n                  filter.type !== 'isSet' &&\n                  filter.type !== 'notSet' &&\n                  filter.type !== 'rlike' &&\n                  filter.type !== 'notrlike' && (\n                    <Col span={8}>\n                      {filter.type === 'equal' || filter.type === 'notEqual' ? (\n                        <Select\n                          value={filter.value}\n                          onChange={(val: string) => handleFilterValueChange(val, index)}\n                          mode='tags'\n                          style={{ width: '100%' }}\n                          tokenSeparators={[',']}\n                        >\n                          {recommend.map(item => (\n                            <Option key={item} value={item}>\n                              {item}\n                            </Option>\n                          ))}\n                        </Select>\n                      ) : (\n                        <AutoComplete\n                          value={filter.value}\n                          dataSource={recommend}\n                          style={{ width: '100%' }}\n                          onChange={(val: any) => handleFilterValueChange(val, index)}\n                        />\n                      )}\n                    </Col>\n                  )}\n                <Col span={1}>\n                  <div onClick={() => handleClose(index)} className={'app-link ' + style.close}>\n                    <Icon type='close' />\n                  </div>\n                </Col>\n              </Row>\n            ))}\n          </div>\n        </div>\n      )}\n      <a onClick={handleAdd}>+添加筛选</a>\n    </div>\n  );\n};\n\nexport default Filter;\n"],"sourceRoot":""}