{"version":3,"sources":["components/Indicator.tsx","components/Indicator.module.less","components/Filter.module.less","components/Dimension.tsx","components/Dimension.module.less","pages/analyse/components/AnalyseHeader.tsx","pages/analyse/components/AnalyseHeader.module.less","pages/analyse/AnalyseEvent.module.less","pages/analyse/AnalyseEvent.tsx","components/Filter.tsx"],"names":["Option","Select","Search","OptGroup","Input","connect","state","metadata","activeMetadataList","activeMetadataListParams","dispatch","bindActionCreators","indicators","onChange","fieldList","hasType","addText","hasCustomName","handleSelectMetadata","info","index","newIndicators","JSON","parse","stringify","metadataCode","code","metadataName","name","handleFilterChange","filter","handleTypeChange","value","type","allMetadata","className","style","wrapper","map","indicatorInfo","key","id","item","gutter","span","center","color","overlay","content","onClick","e","stopPropagation","placeholder","onSearch","console","log","width","metadataBox","active","list","readOnly","select","defaultValue","customName","onBlur","event","handleNameChange","target","val","length","splice","handleRemove","filterInfo","push","Date","now","filterType","filterValues","module","exports","Dimension","dimension","field","reportInfo","report","handleAddReport","params","doAddReport","request","handleUpdateReport","doUpdateReport","data","React","useState","newReportInfo","setnewReportInfo","useEffect","title","btns","icon","newInfo","description","Panel","Collapse","Group","projectId","project","projectInfo","analyse","eventAnalyseData","eventAnalyseParam","analyseLoading","onGetEventAnalyseData","param","doGetEventAnalyse","handleChange","defaultActiveKey","header","ruleTitle","preview","pickerProps","allowClear","time","dateType","dateEnd","dateStart","offset","compact","timeUnit","spinning","Filter","recommend","setrecommend","handleFieldChange","newFilterInfo","find","handleFilterTypeChange","handleFilterValueChange","line","form","mode","tokenSeparators","dataSource","handleClose","close"],"mappings":"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","file":"static/js/6.a340b795.chunk.js","sourcesContent":["import * as React from 'react';\nimport { Tag, Select, Row, Col, Icon, Popover, Input, Dropdown, Divider } from 'antd';\nimport style from './Indicator.module.less';\nimport { IMetadataInfo, IMetadataListParam, IIndicatorInfo, IFieldInfo, IFilterInfo } from '@/api';\nimport { IPageData, IAction, IStoreState, IListData } from '@/types';\nimport { connect } from 'react-redux';\n\nimport { bindActionCreators, Dispatch } from 'redux';\nimport Filter from './Filter';\nconst { Option, OptGroup } = Select;\n\nconst { Search } = Input;\n\ninterface Props {\n  activeMetadataList: IPageData<IMetadataInfo>;\n  activeMetadataListParams: IMetadataListParam;\n  index?: number;\n  fieldList: IListData<IFieldInfo>;\n  indicators: IIndicatorInfo[];\n  onChange: (param: IIndicatorInfo[]) => any;\n  hasType?: boolean;\n  addText?: string;\n  hasCustomName?: boolean;\n}\n\nconst Indicator = ({\n  indicators,\n  activeMetadataList,\n  activeMetadataListParams,\n  onChange,\n  fieldList,\n  hasType,\n  addText = '+添加指标',\n  hasCustomName = false\n}: Props) => {\n  function handleSelectMetadata(info: IMetadataInfo, index: number) {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators[index].metadataCode = info.code;\n    newIndicators[index].metadataName = info.name;\n    onChange(newIndicators);\n  }\n\n  function handleFilterChange(info: IFilterInfo, index: number) {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators[index].filter = info;\n    onChange(newIndicators);\n  }\n\n  function handleTypeChange(value: string, index: number) {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators[index].type = value;\n    onChange(newIndicators);\n  }\n\n  function handleNameChange(value: string, index: number) {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators[index].customName = value;\n    onChange(newIndicators);\n  }\n\n  function handleAdd() {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators.push({\n      metadataCode: '_ALL_METADATA',\n      metadataName: '所有事件',\n      type: 'PV',\n      id: Date.now(),\n      filter: {\n        filterType: 'AND',\n        filterValues: []\n      }\n    });\n    onChange(newIndicators);\n  }\n\n  function handleRemove(index: number) {\n    const newIndicators: IIndicatorInfo[] = JSON.parse(JSON.stringify(indicators));\n    newIndicators.splice(index, 1);\n    onChange(newIndicators);\n  }\n\n  const allMetadata = {\n    name: '所有事件',\n    code: '_ALL_METADATA'\n  } as IMetadataInfo;\n\n  return (\n    <div className={style.wrapper}>\n      <div>\n        {indicators.map((indicatorInfo, index) => (\n          <div key={indicatorInfo.id}>\n            <Row className={style.item} gutter={10}>\n              <Col span={1}>\n                <div className={style.center}>\n                  <Tag color='gold'>{index + 1}</Tag>\n                </div>\n              </Col>\n              <Col span={3}>\n                <Dropdown\n                  overlay={\n                    <div className={style.content}>\n                      <div onClick={e => e.stopPropagation()}>\n                        <Search placeholder='搜索事件' onSearch={value => console.log(value)} style={{ width: 200 }} />\n                        <Select style={{ width: 200 }}>\n                          <Option value='1'>标签1</Option>\n                          <Option value='2'>标签2</Option>\n                          <Option value='3'>标签3</Option>\n                        </Select>\n                      </div>\n\n                      <div className={style.metadataBox}>\n                        <span\n                          onClick={() => handleSelectMetadata(allMetadata, index)}\n                          className={allMetadata.code === indicatorInfo.metadataCode ? style.active : ''}\n                          key={allMetadata.code}\n                        >\n                          所有事件\n                        </span>\n                        {activeMetadataList.list.map(item => (\n                          <span\n                            onClick={() => handleSelectMetadata(item, index)}\n                            className={item.code === indicatorInfo.metadataCode ? style.active : ''}\n                            key={item.code}\n                          >\n                            {item.name}\n                          </span>\n                        ))}\n                      </div>\n                    </div>\n                  }\n                >\n                  <Input value={indicatorInfo.metadataName} readOnly className={style.select} />\n                </Dropdown>\n              </Col>\n              {hasCustomName && (\n                <Col span={3}>\n                  <Input\n                    defaultValue={indicatorInfo.customName}\n                    placeholder='自定义名称'\n                    onBlur={event => handleNameChange(event.target.value, index)}\n                  />\n                </Col>\n              )}\n              {hasType && (\n                <>\n                  <Col span={1}>\n                    <div className={style.center}>的</div>\n                  </Col>\n                  <Col span={3}>\n                    <Select onChange={(val: string) => handleTypeChange(val, index)} value={indicatorInfo.type}>\n                      <Option value='PV'>总次数</Option>\n                      <Option value='UV'>用户数</Option>\n                      <Option value='APV'>人均次数</Option>\n                      <Option value='DPV'>日均次数</Option>\n                      <Option value='DUV'>日均用户数</Option>\n                    </Select>\n                  </Col>\n                </>\n              )}\n\n              {indicators.length > 1 && (\n                <Col span={1}>\n                  <div onClick={() => handleRemove(index)} className={'app-link ' + style.center}>\n                    <Icon type='close' />\n                  </div>\n                </Col>\n              )}\n            </Row>\n            <div className={style.filter}>\n              <Filter\n                fieldList={fieldList}\n                filterInfo={indicatorInfo.filter}\n                onChange={filter => handleFilterChange(filter, index)}\n              ></Filter>\n            </div>\n          </div>\n        ))}\n      </div>\n      <a onClick={handleAdd}>{addText}</a>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IStoreState) => {\n  const { activeMetadataList, activeMetadataListParams } = state.metadata;\n  return {\n    activeMetadataList,\n    activeMetadataListParams\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) => bindActionCreators({}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Indicator);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Indicator_wrapper__3B5qd\",\"select\":\"Indicator_select__1kP-z\",\"content\":\"Indicator_content__3-BaR\",\"center\":\"Indicator_center__3Oax_\",\"metadataBox\":\"Indicator_metadataBox__3wnAQ\",\"active\":\"Indicator_active__1aD9o\",\"filter\":\"Indicator_filter__lBazH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__9rptJ\",\"line\":\"Filter_line__eOPS4\",\"type\":\"Filter_type__2GtXQ\",\"form\":\"Filter_form__1lfK0\",\"close\":\"Filter_close__1AZpi\"};","import * as React from 'react';\nimport { Select, Row, Col, Icon } from 'antd';\nimport style from './Dimension.module.less';\nimport { IFieldInfo } from '@/api';\nimport { IListData } from '@/types';\nconst { Option, OptGroup } = Select;\n\ninterface Props {\n  fieldList: IListData<IFieldInfo>;\n  dimension: string;\n  onChange: (param: string) => any;\n}\n\nconst Dimension = ({ fieldList, dimension, onChange }: Props) => {\n  return (\n    <div className={style.wrapper}>\n      <Row className={style.item}>\n        <Col span={1}>\n          <div className={style.center}>按</div>\n        </Col>\n        <Col span={3}>\n          <Select value={dimension} onChange={onChange}>\n            <Option value=''>总体</Option>\n            {fieldList.list.map(field => (\n              <Option value={field.value} key={field.value}>\n                {field.name}\n              </Option>\n            ))}\n          </Select>\n        </Col>\n        <Col span={1}>\n          <div className={style.center}>查看</div>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default Dimension;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Dimension_wrapper__Ew76P\",\"center\":\"Dimension_center__1BCis\"};","import React from 'react';\nimport { Icon, Button, Input } from 'antd';\nimport { connect } from 'react-redux';\nimport { IAction, IStoreState } from '@/types';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { doAddReport, doUpdateReport } from '@/store/actions';\nimport { IReportAddParam, IReportUpdateParam, IReportInfo } from '@/api';\nimport style from './AnalyseHeader.module.less';\ninterface Props {\n  reportInfo: IReportInfo;\n  handleAddReport: (params: IReportAddParam) => IAction;\n  handleUpdateReport: (params: IReportUpdateParam) => IAction;\n  data: Object;\n  //handleAppandBoard: (params: any) => IAction;\n}\nconst AnalyseHeader = ({ reportInfo, handleUpdateReport, handleAddReport, data }: Props) => {\n  const [newReportInfo, setnewReportInfo] = React.useState(reportInfo);\n  React.useEffect(() => {\n    setnewReportInfo(reportInfo);\n  }, [reportInfo]);\n\n  const handleSave = () => {\n    if (typeof reportInfo.id !== 'undefined') {\n      handleUpdateReport({ id: null, ...newReportInfo, data });\n    } else {\n      handleAddReport({ ...newReportInfo, data });\n    }\n  };\n\n  const handleSaveAs = () => {\n    const { id, ...newInfo } = newReportInfo;\n    handleAddReport({ ...newInfo, data });\n  };\n\n  const handleAppand = () => {\n    //handleAppandBoard(newReportInfo);\n  };\n\n  return (\n    <div className={style.wrapper}>\n      <h2 className={style.title}>\n        <Input\n          type='text'\n          onChange={e => setnewReportInfo({ ...newReportInfo, name: e.target.value })}\n          value={newReportInfo.name}\n        />\n      </h2>\n      <div className={style.btns}>\n        <Button type='link' icon='save' onClick={handleSave}>\n          保存\n        </Button>\n        {newReportInfo.id && (\n          <Button type='link' icon='save' onClick={handleSaveAs}>\n            另存为\n          </Button>\n        )}\n        <Button type='link' icon='plus-circle' onClick={handleAppand}>\n          添加到\n        </Button>\n      </div>\n      <div className={style.description}>\n        <Input\n          onChange={e => setnewReportInfo({ ...newReportInfo, description: e.target.value })}\n          value={newReportInfo.description}\n        ></Input>\n      </div>\n    </div>\n  );\n};\nconst mapStateToProps = (state: IStoreState) => {\n  const { reportInfo } = state.report;\n  return {\n    reportInfo\n  };\n};\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) =>\n  bindActionCreators(\n    {\n      handleAddReport: (params: IReportAddParam) => {\n        return doAddReport.request(params);\n      },\n      handleUpdateReport: (params: IReportUpdateParam) => {\n        return doUpdateReport.request(params);\n      }\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AnalyseHeader);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AnalyseHeader_wrapper__1r0g1\",\"btns\":\"AnalyseHeader_btns__G6iwS\",\"title\":\"AnalyseHeader_title__1X3LF\",\"description\":\"AnalyseHeader_description__1fJOY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ruleTitle\":\"AnalyseEvent_ruleTitle__3uJQg\",\"preview\":\"AnalyseEvent_preview__k46p_\"};","import { Icon, Collapse, Divider, Select, Input, Row, Col, Button, Spin } from 'antd';\nimport React from 'react';\nimport AnalyseRangePicker from '@/components/AnalyseRangePicker';\nimport moment from 'moment';\nimport style from './AnalyseEvent.module.less';\nimport ReactEcharts from 'echarts-for-react';\nimport Indicator from '@/components/Indicator';\nimport Dimension from '@/components/Dimension';\nimport Filter from '@/components/Filter';\nimport AnalyseHeader from './components/AnalyseHeader';\nimport { IReportInfo, IFieldInfo, IEventAnalyseData, IEventAnalyseParam } from '@/api';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { doAddReport, doUpdateReport, doGetEventAnalyse } from '@/store/actions';\nimport { IAction, IStoreState, IListData, IDate } from '@/types';\nimport { DYNAMIC_TIME } from '@/constants';\nimport AnalyseEventChart from './components/AnalyseEventChart';\nconst { Option } = Select;\nconst { Panel } = Collapse;\nconst { Group } = Input;\ninterface Props {\n  fieldList: IListData<IFieldInfo>;\n  onGetEventAnalyseData: (param: IEventAnalyseParam) => IAction;\n  projectId: number;\n  eventAnalyseData: IEventAnalyseData;\n  eventAnalyseParam: IEventAnalyseParam;\n  analyseLoading: boolean;\n}\n\nconst AnalyseEvent = ({\n  analyseLoading,\n  fieldList,\n  onGetEventAnalyseData,\n  projectId,\n  eventAnalyseData,\n  eventAnalyseParam\n}: Props) => {\n  const handleChange = (info: IEventAnalyseParam) => {\n    info.projectId = projectId;\n    onGetEventAnalyseData(info);\n  };\n\n  return (\n    <div>\n      <AnalyseHeader data={{ ...eventAnalyseParam, projectId }}></AnalyseHeader>\n      <Collapse defaultActiveKey={['1']}>\n        <Panel header='添加分析规则' key='1'>\n          <div>\n            <div className={style.ruleTitle}>\n              <span>指标:</span>\n            </div>\n            <div>\n              <Indicator\n                hasType\n                fieldList={fieldList}\n                indicators={eventAnalyseParam.indicators}\n                onChange={indicators => handleChange({ ...eventAnalyseParam, indicators })}\n              />\n\n              {/* <Filter fieldList={fieldList} filterInfo={filter} /> */}\n            </div>\n          </div>\n\n          <div>\n            <div className={style.ruleTitle}>\n              <span>维度:</span>\n            </div>\n            <Dimension\n              dimension={eventAnalyseParam.dimension}\n              fieldList={fieldList}\n              onChange={dimension => handleChange({ ...eventAnalyseParam, dimension })}\n            />\n          </div>\n\n          <div>\n            <div className={style.ruleTitle}>\n              <span>筛选:</span>\n            </div>\n            <Filter\n              fieldList={fieldList}\n              filterInfo={eventAnalyseParam.filter}\n              onChange={filter => handleChange({ ...eventAnalyseParam, filter })}\n            />\n          </div>\n        </Panel>\n      </Collapse>\n\n      <div className={style.preview}>\n        <Row>\n          <Col span={14}>\n            <AnalyseRangePicker\n              pickerProps={{ allowClear: false }}\n              onChange={time => handleChange({ ...eventAnalyseParam, ...time })}\n              value={{\n                dateType: eventAnalyseParam.dateType,\n                dateEnd: eventAnalyseParam.dateEnd,\n                dateStart: eventAnalyseParam.dateStart\n              }}\n            />\n          </Col>\n          <Col span={6} offset={4}>\n            <Group compact>\n              <Select\n                style={{ width: '33%' }}\n                value={eventAnalyseParam.type}\n                onChange={(type: string) => handleChange({ ...eventAnalyseParam, type })}\n              >\n                <Option value='LINE'>折线图</Option>\n                <Option value='PIE'>饼图</Option>\n                <Option value='TABLE'>表格</Option>\n                <Option value='TEXT'>数值</Option>\n              </Select>\n              <Select\n                style={{ width: '33%' }}\n                value={eventAnalyseParam.timeUnit}\n                onChange={(timeUnit: string) => handleChange({ ...eventAnalyseParam, timeUnit })}\n              >\n                <Option value='HOUR'>按小时</Option>\n                <Option value='DAY'>按天</Option>\n                <Option value='WEEK'>按周</Option>\n                <Option value='MONTH'>按月</Option>\n                <Option value='YEAR'>按年</Option>\n              </Select>\n              <Button icon='download'>导出</Button>\n            </Group>\n          </Col>\n        </Row>\n        <Spin spinning={analyseLoading}>\n          <AnalyseEventChart data={eventAnalyseData}></AnalyseEventChart>\n        </Spin>\n        <div></div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IStoreState) => {\n  const { fieldList } = state.metadata;\n  const projectId = state.project.projectInfo.id;\n  const { eventAnalyseData, eventAnalyseParam, analyseLoading } = state.analyse;\n  return {\n    fieldList,\n    projectId,\n    eventAnalyseData,\n    eventAnalyseParam,\n    analyseLoading\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) =>\n  bindActionCreators(\n    {\n      onGetEventAnalyseData: (param: IEventAnalyseParam) => doGetEventAnalyse.request(param)\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AnalyseEvent);\n","import * as React from 'react';\nimport { Select, Row, Col, Icon, AutoComplete } from 'antd';\nimport style from './Filter.module.less';\nimport { IListData } from '@/types';\nimport { IFieldInfo, IFilterInfo, IFilterValue } from '@/api';\nimport { SelectValue } from 'antd/lib/select';\nconst { Option, OptGroup } = Select;\n\ninterface Props {\n  fieldList: IListData<IFieldInfo>;\n  filterInfo: IFilterInfo;\n  onChange: (filterInfo: IFilterInfo) => any;\n}\n\nconst Filter = ({ fieldList, filterInfo, onChange }: Props) => {\n  const [recommend, setrecommend] = React.useState<string[]>([]);\n  const handleFieldChange = (value: string, index: number) => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterValues[index].key = value;\n    newFilterInfo.filterValues[index].type = 'equal';\n    newFilterInfo.filterValues[index].value = [];\n    const field = fieldList.list.find(field => field.value === value);\n    if (field) {\n      setrecommend(field.recommend);\n    }\n\n    onChange(newFilterInfo);\n  };\n\n  const handleFilterTypeChange = (value: string, index: number) => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterValues[index].type = value;\n    if (value === 'equal' || value === 'notEqual') {\n      newFilterInfo.filterValues[index].value = [];\n    } else if (value === 'between') {\n      newFilterInfo.filterValues[index].value = [null, null];\n    } else {\n      newFilterInfo.filterValues[index].value = null;\n    }\n    onChange(newFilterInfo);\n  };\n\n  const handleFilterValueChange = (value: string, index: number) => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterValues[index].value = value;\n    onChange(newFilterInfo);\n  };\n\n  const handleClose = (index: number) => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterValues.splice(index, 1);\n    onChange(newFilterInfo);\n  };\n\n  const handleAdd = () => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterValues.push({\n      type: null,\n      key: null,\n      value: null,\n      id: Date.now()\n    });\n    onChange(newFilterInfo);\n  };\n\n  const handleChangeFilterType = () => {\n    const newFilterInfo: IFilterInfo = JSON.parse(JSON.stringify(filterInfo));\n    newFilterInfo.filterType = newFilterInfo.filterType === 'AND' ? 'OR' : 'AND';\n    onChange(newFilterInfo);\n  };\n\n  return (\n    <div>\n      {filterInfo.filterValues.length > 0 && (\n        <div className={style.wrapper}>\n          {filterInfo.filterValues.length > 1 && (\n            <div className={style.type}>\n              <button onClick={handleChangeFilterType}>{filterInfo.filterType === 'AND' ? '且' : '或'}</button>\n              <div className={style.line}></div>\n            </div>\n          )}\n          <div className={style.form}>\n            {filterInfo.filterValues.map((filter, index) => (\n              <Row gutter={16} key={filter.id}>\n                <Col span={3}>\n                  <Select value={filter.key} onChange={(val: string) => handleFieldChange(val, index)}>\n                    {fieldList.list.map(field => (\n                      <Option value={field.value} key={field.value}>\n                        {field.name}\n                      </Option>\n                    ))}\n                  </Select>\n                </Col>\n                <Col span={3}>\n                  <Select value={filter.type} onChange={(val: string) => handleFilterTypeChange(val, index)}>\n                    <Option value='equal'>等于</Option>\n                    <Option value='notEqual'>不等于</Option>\n                    <Option value='isSet'>有值</Option>\n                    <Option value='notSet'>没值</Option>\n\n                    <Option value='greater'>大于</Option>\n                    <Option value='less'>小于</Option>\n                    <Option value='between'>区间</Option>\n\n                    <Option value='contain'>包含</Option>\n                    <Option value='notContain'>不包含</Option>\n                    <Option value='isEmpty'>为空</Option>\n                    <Option value='isNotEmpty'>不为空</Option>\n                    <Option value='rlike'>正则匹配</Option>\n                    <Option value='notrlike'>正则不匹配</Option>\n                  </Select>\n                </Col>\n                {filter.type !== 'isEmpty' &&\n                  filter.type !== 'isNotEmpty' &&\n                  filter.type !== 'isSet' &&\n                  filter.type !== 'notSet' &&\n                  filter.type !== 'rlike' &&\n                  filter.type !== 'notrlike' && (\n                    <Col span={8}>\n                      {filter.type === 'equal' || filter.type === 'notEqual' ? (\n                        <Select\n                          value={filter.value}\n                          onChange={(val: string) => handleFilterValueChange(val, index)}\n                          mode='tags'\n                          style={{ width: '100%' }}\n                          tokenSeparators={[',']}\n                        >\n                          {recommend.map(item => (\n                            <Option key={item} value={item}>\n                              {item}\n                            </Option>\n                          ))}\n                        </Select>\n                      ) : (\n                        <AutoComplete\n                          value={filter.value}\n                          dataSource={recommend}\n                          style={{ width: '100%' }}\n                          onChange={(val: any) => handleFilterValueChange(val, index)}\n                        />\n                      )}\n                    </Col>\n                  )}\n                <Col span={1}>\n                  <div onClick={() => handleClose(index)} className={'app-link ' + style.close}>\n                    <Icon type='close' />\n                  </div>\n                </Col>\n              </Row>\n            ))}\n          </div>\n        </div>\n      )}\n      <a onClick={handleAdd}>+添加筛选</a>\n    </div>\n  );\n};\n\nexport default Filter;\n"],"sourceRoot":""}